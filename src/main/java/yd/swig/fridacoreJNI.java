/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yd.swig;

public class fridacoreJNI {
  public final static native String G_GNUC_FUNCTION_get();
  public final static native String G_GNUC_PRETTY_FUNCTION_get();
  public final static native int G_ANALYZER_ANALYZING_get();
  public final static native String G_STRLOC_get();
  public final static native int NULL_get();
  public final static native int FALSE_get();
  public final static native int TRUE_get();
  public final static native int GLIB_STATIC_COMPILATION_get();
  public final static native int GOBJECT_STATIC_COMPILATION_get();
  public final static native int GIO_STATIC_COMPILATION_get();
  public final static native String G_GINT16_MODIFIER_get();
  public final static native String G_GINT16_FORMAT_get();
  public final static native String G_GUINT16_FORMAT_get();
  public final static native String G_GINT32_MODIFIER_get();
  public final static native String G_GINT32_FORMAT_get();
  public final static native String G_GUINT32_FORMAT_get();
  public final static native int G_HAVE_GINT64_get();
  public final static native String G_GINT64_MODIFIER_get();
  public final static native String G_GINT64_FORMAT_get();
  public final static native String G_GUINT64_FORMAT_get();
  public final static native int GLIB_SIZEOF_VOID_P_get();
  public final static native int GLIB_SIZEOF_LONG_get();
  public final static native int GLIB_SIZEOF_SIZE_T_get();
  public final static native int GLIB_SIZEOF_SSIZE_T_get();
  public final static native String G_GSIZE_MODIFIER_get();
  public final static native String G_GSSIZE_MODIFIER_get();
  public final static native String G_GSIZE_FORMAT_get();
  public final static native String G_GSSIZE_FORMAT_get();
  public final static native String G_GOFFSET_MODIFIER_get();
  public final static native String G_GOFFSET_FORMAT_get();
  public final static native String G_POLLFD_FORMAT_get();
  public final static native String G_GINTPTR_MODIFIER_get();
  public final static native String G_GINTPTR_FORMAT_get();
  public final static native String G_GUINTPTR_FORMAT_get();
  public final static native int GLIB_MAJOR_VERSION_get();
  public final static native int GLIB_MINOR_VERSION_get();
  public final static native int GLIB_MICRO_VERSION_get();
  public final static native int G_VA_COPY_AS_ARRAY_get();
  public final static native int G_HAVE_ISO_VARARGS_get();
  public final static native int G_HAVE_GROWING_STACK_get();
  public final static native int G_HAVE_GNUC_VISIBILITY_get();
  public final static native int G_HAVE_GNUC_VARARGS_get();
  public final static native String G_MODULE_SUFFIX_get();
  public final static native String G_PID_FORMAT_get();
  public final static native int GLIB_SYSDEF_AF_UNIX_get();
  public final static native int GLIB_SYSDEF_AF_INET_get();
  public final static native int GLIB_SYSDEF_AF_INET6_get();
  public final static native int GLIB_SYSDEF_MSG_OOB_get();
  public final static native int GLIB_SYSDEF_MSG_PEEK_get();
  public final static native int GLIB_SYSDEF_MSG_DONTROUTE_get();
  public final static native char G_DIR_SEPARATOR_get();
  public final static native String G_DIR_SEPARATOR_S_get();
  public final static native char G_SEARCHPATH_SEPARATOR_get();
  public final static native String G_SEARCHPATH_SEPARATOR_S_get();
  public final static native int GLIB_VERSION_2_26_get();
  public final static native int GLIB_VERSION_2_28_get();
  public final static native int GLIB_VERSION_2_30_get();
  public final static native int GLIB_VERSION_2_32_get();
  public final static native int GLIB_VERSION_2_34_get();
  public final static native int GLIB_VERSION_2_36_get();
  public final static native int GLIB_VERSION_2_38_get();
  public final static native int GLIB_VERSION_2_40_get();
  public final static native int GLIB_VERSION_2_42_get();
  public final static native int GLIB_VERSION_2_44_get();
  public final static native int GLIB_VERSION_2_46_get();
  public final static native int GLIB_VERSION_2_48_get();
  public final static native int GLIB_VERSION_2_50_get();
  public final static native int GLIB_VERSION_2_52_get();
  public final static native int GLIB_VERSION_2_54_get();
  public final static native int GLIB_VERSION_2_56_get();
  public final static native int GLIB_VERSION_2_58_get();
  public final static native int GLIB_VERSION_2_60_get();
  public final static native int GLIB_VERSION_2_62_get();
  public final static native int GLIB_VERSION_CUR_STABLE_get();
  public final static native int GLIB_VERSION_PREV_STABLE_get();
  public final static native int GLIB_VERSION_MIN_REQUIRED_get();
  public final static native int GLIB_VERSION_MAX_ALLOWED_get();
  public final static native int G_MAXINT64_get();
  public final static native long G_MAXUINT64_get();
  public final static native double G_E_get();
  public final static native double G_LN2_get();
  public final static native double G_LN10_get();
  public final static native double G_PI_get();
  public final static native double G_PI_2_get();
  public final static native double G_PI_4_get();
  public final static native double G_SQRT2_get();
  public final static native int G_LITTLE_ENDIAN_get();
  public final static native int G_BIG_ENDIAN_get();
  public final static native int G_PDP_ENDIAN_get();
  public final static native int _GLIB_CHECKED_ADD_U32(long jarg1, long jarg2, long jarg3);
  public final static native int _GLIB_CHECKED_MUL_U32(long jarg1, long jarg2, long jarg3);
  public final static native int _GLIB_CHECKED_ADD_U64(long jarg1, long jarg2, long jarg3);
  public final static native int _GLIB_CHECKED_MUL_U64(long jarg1, long jarg2, long jarg3);
  public final static native int G_IEEE754_FLOAT_BIAS_get();
  public final static native int G_IEEE754_DOUBLE_BIAS_get();
  public final static native double G_LOG_2_BASE_10_get();
  public final static native void _GFloatIEEE754_v_float_set(long jarg1, _GFloatIEEE754 jarg1_, float jarg2);
  public final static native float _GFloatIEEE754_v_float_get(long jarg1, _GFloatIEEE754 jarg1_);
  public final static native long new__GFloatIEEE754();
  public final static native void delete__GFloatIEEE754(long jarg1);
  public final static native void _GDoubleIEEE754_v_double_set(long jarg1, _GDoubleIEEE754 jarg1_, double jarg2);
  public final static native double _GDoubleIEEE754_v_double_get(long jarg1, _GDoubleIEEE754 jarg1_);
  public final static native long new__GDoubleIEEE754();
  public final static native void delete__GDoubleIEEE754(long jarg1);
  public final static native void _GTimeVal_tv_sec_set(long jarg1, _GTimeVal jarg1_, int jarg2);
  public final static native int _GTimeVal_tv_sec_get(long jarg1, _GTimeVal jarg1_);
  public final static native void _GTimeVal_tv_usec_set(long jarg1, _GTimeVal jarg1_, int jarg2);
  public final static native int _GTimeVal_tv_usec_get(long jarg1, _GTimeVal jarg1_);
  public final static native long new__GTimeVal();
  public final static native void delete__GTimeVal(long jarg1);
  public final static native void _GArray_data_set(long jarg1, _GArray jarg1_, String jarg2);
  public final static native String _GArray_data_get(long jarg1, _GArray jarg1_);
  public final static native void _GArray_len_set(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long _GArray_len_get(long jarg1, _GArray jarg1_);
  public final static native long new__GArray();
  public final static native void delete__GArray(long jarg1);
  public final static native void _GByteArray_data_set(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long _GByteArray_data_get(long jarg1, _GByteArray jarg1_);
  public final static native void _GByteArray_len_set(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long _GByteArray_len_get(long jarg1, _GByteArray jarg1_);
  public final static native long new__GByteArray();
  public final static native void delete__GByteArray(long jarg1);
  public final static native void _GPtrArray_pdata_set(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _GPtrArray_pdata_get(long jarg1, _GPtrArray jarg1_);
  public final static native void _GPtrArray_len_set(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _GPtrArray_len_get(long jarg1, _GPtrArray jarg1_);
  public final static native long new__GPtrArray();
  public final static native void delete__GPtrArray(long jarg1);
  public final static native long _frida_g_array_new(int jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_array_sized_new(int jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_array_free(long jarg1, _GArray jarg1_, int jarg2);
  public final static native long _frida_g_array_ref(long jarg1, _GArray jarg1_);
  public final static native void _frida_g_array_unref(long jarg1, _GArray jarg1_);
  public final static native long _frida_g_array_get_element_size(long jarg1, _GArray jarg1_);
  public final static native long _frida_g_array_append_vals(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_array_prepend_vals(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_array_insert_vals(long jarg1, _GArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_array_set_size(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long _frida_g_array_remove_index(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long _frida_g_array_remove_index_fast(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long _frida_g_array_remove_range(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_array_sort(long jarg1, _GArray jarg1_, long jarg2);
  public final static native void _frida_g_array_sort_with_data(long jarg1, _GArray jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_array_set_clear_func(long jarg1, _GArray jarg1_, long jarg2);
  public final static native long _frida_g_ptr_array_new();
  public final static native long _frida_g_ptr_array_new_with_free_func(long jarg1);
  public final static native long _frida_g_ptr_array_sized_new(long jarg1);
  public final static native long _frida_g_ptr_array_new_full(long jarg1, long jarg2);
  public final static native long _frida_g_ptr_array_free(long jarg1, _GPtrArray jarg1_, int jarg2);
  public final static native long _frida_g_ptr_array_ref(long jarg1, _GPtrArray jarg1_);
  public final static native void _frida_g_ptr_array_unref(long jarg1, _GPtrArray jarg1_);
  public final static native void _frida_g_ptr_array_set_free_func(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native void _frida_g_ptr_array_set_size(long jarg1, _GPtrArray jarg1_, int jarg2);
  public final static native long _frida_g_ptr_array_remove_index(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _frida_g_ptr_array_remove_index_fast(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _frida_g_ptr_array_steal_index(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _frida_g_ptr_array_steal_index_fast(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native int _frida_g_ptr_array_remove(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native int _frida_g_ptr_array_remove_fast(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native long _frida_g_ptr_array_remove_range(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_ptr_array_add(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native void _frida_g_ptr_array_insert(long jarg1, _GPtrArray jarg1_, int jarg2, long jarg3);
  public final static native void _frida_g_ptr_array_sort(long jarg1, _GPtrArray jarg1_, long jarg2);
  public final static native void _frida_g_ptr_array_sort_with_data(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_ptr_array_foreach(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_ptr_array_find(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_ptr_array_find_with_equal_func(long jarg1, _GPtrArray jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_byte_array_new();
  public final static native long _frida_g_byte_array_new_take(long jarg1, long jarg2);
  public final static native long _frida_g_byte_array_sized_new(long jarg1);
  public final static native long _frida_g_byte_array_free(long jarg1, _GByteArray jarg1_, int jarg2);
  public final static native long _frida_g_byte_array_free_to_bytes(long jarg1, _GByteArray jarg1_);
  public final static native long _frida_g_byte_array_ref(long jarg1, _GByteArray jarg1_);
  public final static native void _frida_g_byte_array_unref(long jarg1, _GByteArray jarg1_);
  public final static native long _frida_g_byte_array_append(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_byte_array_prepend(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_byte_array_set_size(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long _frida_g_byte_array_remove_index(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long _frida_g_byte_array_remove_index_fast(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native long _frida_g_byte_array_remove_range(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_byte_array_sort(long jarg1, _GByteArray jarg1_, long jarg2);
  public final static native void _frida_g_byte_array_sort_with_data(long jarg1, _GByteArray jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_atomic_int_get(long jarg1);
  public final static native void _frida_g_atomic_int_set(long jarg1, int jarg2);
  public final static native void _frida_g_atomic_int_inc(long jarg1);
  public final static native int _frida_g_atomic_int_dec_and_test(long jarg1);
  public final static native int _frida_g_atomic_int_compare_and_exchange(long jarg1, int jarg2, int jarg3);
  public final static native int _frida_g_atomic_int_add(long jarg1, int jarg2);
  public final static native long _frida_g_atomic_int_and(long jarg1, long jarg2);
  public final static native long _frida_g_atomic_int_or(long jarg1, long jarg2);
  public final static native long _frida_g_atomic_int_xor(long jarg1, long jarg2);
  public final static native long _frida_g_atomic_pointer_get(long jarg1);
  public final static native void _frida_g_atomic_pointer_set(long jarg1, long jarg2);
  public final static native int _frida_g_atomic_pointer_compare_and_exchange(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_atomic_pointer_add(long jarg1, int jarg2);
  public final static native long _frida_g_atomic_pointer_and(long jarg1, long jarg2);
  public final static native long _frida_g_atomic_pointer_or(long jarg1, long jarg2);
  public final static native long _frida_g_atomic_pointer_xor(long jarg1, long jarg2);
  public final static native int _frida_g_atomic_int_exchange_and_add(long jarg1, int jarg2);
  public final static native long _frida_g_quark_try_string(String jarg1);
  public final static native long _frida_g_quark_from_static_string(String jarg1);
  public final static native long _frida_g_quark_from_string(String jarg1);
  public final static native String _frida_g_quark_to_string(long jarg1);
  public final static native String _frida_g_intern_string(String jarg1);
  public final static native String _frida_g_intern_static_string(String jarg1);
  public final static native void _GError_domain_set(long jarg1, _GError jarg1_, long jarg2);
  public final static native long _GError_domain_get(long jarg1, _GError jarg1_);
  public final static native void _GError_code_set(long jarg1, _GError jarg1_, int jarg2);
  public final static native int _GError_code_get(long jarg1, _GError jarg1_);
  public final static native void _GError_message_set(long jarg1, _GError jarg1_, String jarg2);
  public final static native String _GError_message_get(long jarg1, _GError jarg1_);
  public final static native long new__GError();
  public final static native void delete__GError(long jarg1);
  public final static native long _frida_g_error_new(long jarg1, int jarg2, String jarg3);
  public final static native long _frida_g_error_new_literal(long jarg1, int jarg2, String jarg3);
  public final static native void _frida_g_error_free(long jarg1, _GError jarg1_);
  public final static native long _frida_g_error_copy(long jarg1, _GError jarg1_);
  public final static native int _frida_g_error_matches(long jarg1, _GError jarg1_, long jarg2, int jarg3);
  public final static native void _frida_g_set_error(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native void _frida_g_set_error_literal(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native void _frida_g_propagate_error(long jarg1, long jarg2, _GError jarg2_);
  public final static native void _frida_g_clear_error(long jarg1);
  public final static native void _frida_g_prefix_error(long jarg1, String jarg2);
  public final static native void _frida_g_propagate_prefixed_error(long jarg1, long jarg2, _GError jarg2_, String jarg3);
  public final static native String _frida_g_get_user_name();
  public final static native String _frida_g_get_real_name();
  public final static native String _frida_g_get_home_dir();
  public final static native String _frida_g_get_tmp_dir();
  public final static native String _frida_g_get_host_name();
  public final static native String _frida_g_get_prgname();
  public final static native void _frida_g_set_prgname(String jarg1);
  public final static native String _frida_g_get_application_name();
  public final static native void _frida_g_set_application_name(String jarg1);
  public final static native void _frida_g_reload_user_special_dirs_cache();
  public final static native String _frida_g_get_user_data_dir();
  public final static native String _frida_g_get_user_config_dir();
  public final static native String _frida_g_get_user_cache_dir();
  public final static native long _frida_g_get_system_data_dirs();
  public final static native long _frida_g_get_system_config_dirs();
  public final static native String _frida_g_get_user_runtime_dir();
  public final static native String _frida_g_get_user_special_dir(int jarg1);
  public final static native void _GDebugKey_key_set(long jarg1, _GDebugKey jarg1_, String jarg2);
  public final static native String _GDebugKey_key_get(long jarg1, _GDebugKey jarg1_);
  public final static native void _GDebugKey_value_set(long jarg1, _GDebugKey jarg1_, long jarg2);
  public final static native long _GDebugKey_value_get(long jarg1, _GDebugKey jarg1_);
  public final static native long new__GDebugKey();
  public final static native void delete__GDebugKey(long jarg1);
  public final static native long _frida_g_parse_debug_string(String jarg1, long jarg2, _GDebugKey jarg2_, long jarg3);
  public final static native int _frida_g_snprintf(String jarg1, long jarg2, String jarg3);
  public final static native void _frida_g_nullify_pointer(long jarg1);
  public final static native int G_FORMAT_SIZE_DEFAULT_get();
  public final static native int G_FORMAT_SIZE_LONG_FORMAT_get();
  public final static native int G_FORMAT_SIZE_IEC_UNITS_get();
  public final static native int G_FORMAT_SIZE_BITS_get();
  public final static native String _frida_g_format_size_full(long jarg1, int jarg2);
  public final static native String _frida_g_format_size(long jarg1);
  public final static native String _frida_g_format_size_for_display(int jarg1);
  public final static native void _frida_g_atexit(long jarg1);
  public final static native String _frida_g_find_program_in_path(String jarg1);
  public final static native int g_bit_nth_lsf(long jarg1, int jarg2);
  public final static native int g_bit_nth_msf(long jarg1, int jarg2);
  public final static native long g_bit_storage(long jarg1);
  public final static native int g_bit_nth_lsf_impl(long jarg1, int jarg2);
  public final static native int g_bit_nth_msf_impl(long jarg1, int jarg2);
  public final static native long g_bit_storage_impl(long jarg1);
  public final static native long _frida_g_thread_error_quark();
  public final static native int G_PRIVATE_DESTROY_LATE_get();
  public final static native int G_PRIVATE_DESTROY_LAST_get();
  public final static native void _GThreadCallbacks_on_thread_init_set(long jarg1, _GThreadCallbacks jarg1_, long jarg2);
  public final static native long _GThreadCallbacks_on_thread_init_get(long jarg1, _GThreadCallbacks jarg1_);
  public final static native void _GThreadCallbacks_on_thread_realize_set(long jarg1, _GThreadCallbacks jarg1_, long jarg2);
  public final static native long _GThreadCallbacks_on_thread_realize_get(long jarg1, _GThreadCallbacks jarg1_);
  public final static native void _GThreadCallbacks_on_thread_dispose_set(long jarg1, _GThreadCallbacks jarg1_, long jarg2);
  public final static native long _GThreadCallbacks_on_thread_dispose_get(long jarg1, _GThreadCallbacks jarg1_);
  public final static native void _GThreadCallbacks_on_thread_finalize_set(long jarg1, _GThreadCallbacks jarg1_, long jarg2);
  public final static native long _GThreadCallbacks_on_thread_finalize_get(long jarg1, _GThreadCallbacks jarg1_);
  public final static native long new__GThreadCallbacks();
  public final static native void delete__GThreadCallbacks(long jarg1);
  public final static native void _GMutex_p_set(long jarg1, _GMutex jarg1_, long jarg2);
  public final static native long _GMutex_p_get(long jarg1, _GMutex jarg1_);
  public final static native void _GMutex_i_set(long jarg1, _GMutex jarg1_, long jarg2);
  public final static native long _GMutex_i_get(long jarg1, _GMutex jarg1_);
  public final static native long new__GMutex();
  public final static native void delete__GMutex(long jarg1);
  public final static native void _GRWLock_p_set(long jarg1, _GRWLock jarg1_, long jarg2);
  public final static native long _GRWLock_p_get(long jarg1, _GRWLock jarg1_);
  public final static native void _GRWLock_i_set(long jarg1, _GRWLock jarg1_, long jarg2);
  public final static native long _GRWLock_i_get(long jarg1, _GRWLock jarg1_);
  public final static native long new__GRWLock();
  public final static native void delete__GRWLock(long jarg1);
  public final static native void _GCond_p_set(long jarg1, _GCond jarg1_, long jarg2);
  public final static native long _GCond_p_get(long jarg1, _GCond jarg1_);
  public final static native void _GCond_i_set(long jarg1, _GCond jarg1_, long jarg2);
  public final static native long _GCond_i_get(long jarg1, _GCond jarg1_);
  public final static native long new__GCond();
  public final static native void delete__GCond(long jarg1);
  public final static native void _GRecMutex_p_set(long jarg1, _GRecMutex jarg1_, long jarg2);
  public final static native long _GRecMutex_p_get(long jarg1, _GRecMutex jarg1_);
  public final static native void _GRecMutex_i_set(long jarg1, _GRecMutex jarg1_, long jarg2);
  public final static native long _GRecMutex_i_get(long jarg1, _GRecMutex jarg1_);
  public final static native long new__GRecMutex();
  public final static native void delete__GRecMutex(long jarg1);
  public final static native void _GPrivate_p_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long _GPrivate_p_get(long jarg1, _GPrivate jarg1_);
  public final static native void _GPrivate_notify_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long _GPrivate_notify_get(long jarg1, _GPrivate jarg1_);
  public final static native void _GPrivate_flags_set(long jarg1, _GPrivate jarg1_, int jarg2);
  public final static native int _GPrivate_flags_get(long jarg1, _GPrivate jarg1_);
  public final static native void _GPrivate_future_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long _GPrivate_future_get(long jarg1, _GPrivate jarg1_);
  public final static native long new__GPrivate();
  public final static native void delete__GPrivate(long jarg1);
  public final static native void _GOnce_status_set(long jarg1, _GOnce jarg1_, int jarg2);
  public final static native int _GOnce_status_get(long jarg1, _GOnce jarg1_);
  public final static native void _GOnce_retval_set(long jarg1, _GOnce jarg1_, long jarg2);
  public final static native long _GOnce_retval_get(long jarg1, _GOnce jarg1_);
  public final static native long new__GOnce();
  public final static native void delete__GOnce(long jarg1);
  public final static native void _frida_glib_thread_callbacks_set(long jarg1, _GThreadCallbacks jarg1_);
  public final static native long _frida_glib_thread_callbacks_get();
  public final static native void _frida_g_thread_set_callbacks(long jarg1, _GThreadCallbacks jarg1_);
  public final static native void _frida_g_thread_set_garbage_handler(long jarg1, long jarg2);
  public final static native int _frida_g_thread_garbage_collect();
  public final static native long _frida_g_thread_ref(long jarg1, _GThread jarg1_);
  public final static native void _frida_g_thread_unref(long jarg1, _GThread jarg1_);
  public final static native long _frida_g_thread_new(String jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_thread_try_new(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_thread_self();
  public final static native void _frida_g_thread_exit(long jarg1);
  public final static native long _frida_g_thread_join(long jarg1, _GThread jarg1_);
  public final static native void _frida_g_thread_yield();
  public final static native void _frida_g_mutex_init(long jarg1, _GMutex jarg1_);
  public final static native void _frida_g_mutex_clear(long jarg1, _GMutex jarg1_);
  public final static native void _frida_g_mutex_lock(long jarg1, _GMutex jarg1_);
  public final static native int _frida_g_mutex_trylock(long jarg1, _GMutex jarg1_);
  public final static native void _frida_g_mutex_unlock(long jarg1, _GMutex jarg1_);
  public final static native void _frida_g_rw_lock_init(long jarg1, _GRWLock jarg1_);
  public final static native void _frida_g_rw_lock_clear(long jarg1, _GRWLock jarg1_);
  public final static native void _frida_g_rw_lock_writer_lock(long jarg1, _GRWLock jarg1_);
  public final static native int _frida_g_rw_lock_writer_trylock(long jarg1, _GRWLock jarg1_);
  public final static native void _frida_g_rw_lock_writer_unlock(long jarg1, _GRWLock jarg1_);
  public final static native void _frida_g_rw_lock_reader_lock(long jarg1, _GRWLock jarg1_);
  public final static native int _frida_g_rw_lock_reader_trylock(long jarg1, _GRWLock jarg1_);
  public final static native void _frida_g_rw_lock_reader_unlock(long jarg1, _GRWLock jarg1_);
  public final static native void _frida_g_rec_mutex_init(long jarg1, _GRecMutex jarg1_);
  public final static native void _frida_g_rec_mutex_clear(long jarg1, _GRecMutex jarg1_);
  public final static native void _frida_g_rec_mutex_lock(long jarg1, _GRecMutex jarg1_);
  public final static native int _frida_g_rec_mutex_trylock(long jarg1, _GRecMutex jarg1_);
  public final static native void _frida_g_rec_mutex_unlock(long jarg1, _GRecMutex jarg1_);
  public final static native void _frida_g_cond_init(long jarg1, _GCond jarg1_);
  public final static native void _frida_g_cond_clear(long jarg1, _GCond jarg1_);
  public final static native void _frida_g_cond_wait(long jarg1, _GCond jarg1_, long jarg2, _GMutex jarg2_);
  public final static native void _frida_g_cond_signal(long jarg1, _GCond jarg1_);
  public final static native void _frida_g_cond_broadcast(long jarg1, _GCond jarg1_);
  public final static native int _frida_g_cond_wait_until(long jarg1, _GCond jarg1_, long jarg2, _GMutex jarg2_, int jarg3);
  public final static native long _frida_g_private_get(long jarg1, _GPrivate jarg1_);
  public final static native void _frida_g_private_set(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native void _frida_g_private_replace(long jarg1, _GPrivate jarg1_, long jarg2);
  public final static native long _frida_g_once_impl(long jarg1, _GOnce jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_once_init_enter(long jarg1);
  public final static native void _frida_g_once_init_leave(long jarg1, long jarg2);
  public final static native long _frida_g_get_num_processors();
  public final static native long g_mutex_locker_new(long jarg1, _GMutex jarg1_);
  public final static native void g_mutex_locker_free(long jarg1);
  public final static native long g_rec_mutex_locker_new(long jarg1, _GRecMutex jarg1_);
  public final static native void g_rec_mutex_locker_free(long jarg1);
  public final static native long _frida_g_async_queue_new();
  public final static native long _frida_g_async_queue_new_full(long jarg1);
  public final static native void _frida_g_async_queue_lock(long jarg1);
  public final static native void _frida_g_async_queue_unlock(long jarg1);
  public final static native long _frida_g_async_queue_ref(long jarg1);
  public final static native void _frida_g_async_queue_unref(long jarg1);
  public final static native void _frida_g_async_queue_ref_unlocked(long jarg1);
  public final static native void _frida_g_async_queue_unref_and_unlock(long jarg1);
  public final static native void _frida_g_async_queue_push(long jarg1, long jarg2);
  public final static native void _frida_g_async_queue_push_unlocked(long jarg1, long jarg2);
  public final static native void _frida_g_async_queue_push_sorted(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_async_queue_push_sorted_unlocked(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_async_queue_pop(long jarg1);
  public final static native long _frida_g_async_queue_pop_unlocked(long jarg1);
  public final static native long _frida_g_async_queue_try_pop(long jarg1);
  public final static native long _frida_g_async_queue_try_pop_unlocked(long jarg1);
  public final static native long _frida_g_async_queue_timeout_pop(long jarg1, long jarg2);
  public final static native long _frida_g_async_queue_timeout_pop_unlocked(long jarg1, long jarg2);
  public final static native int _frida_g_async_queue_length(long jarg1);
  public final static native int _frida_g_async_queue_length_unlocked(long jarg1);
  public final static native void _frida_g_async_queue_sort(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_async_queue_sort_unlocked(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_async_queue_remove(long jarg1, long jarg2);
  public final static native int _frida_g_async_queue_remove_unlocked(long jarg1, long jarg2);
  public final static native void _frida_g_async_queue_push_front(long jarg1, long jarg2);
  public final static native void _frida_g_async_queue_push_front_unlocked(long jarg1, long jarg2);
  public final static native long _frida_g_async_queue_timed_pop(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native long _frida_g_async_queue_timed_pop_unlocked(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native void _frida_g_on_error_query(String jarg1);
  public final static native void _frida_g_on_error_stack_trace(String jarg1);
  public final static native long _frida_g_base64_encode_step(long jarg1, long jarg2, int jarg3, String jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_base64_encode_close(int jarg1, String jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_base64_encode(long jarg1, long jarg2);
  public final static native long _frida_g_base64_decode_step(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_base64_decode(String jarg1, long jarg2);
  public final static native long _frida_g_base64_decode_inplace(String jarg1, long jarg2);
  public final static native void _frida_g_bit_lock(long jarg1, int jarg2);
  public final static native int _frida_g_bit_trylock(long jarg1, int jarg2);
  public final static native void _frida_g_bit_unlock(long jarg1, int jarg2);
  public final static native void _frida_g_pointer_bit_lock(long jarg1, int jarg2);
  public final static native int _frida_g_pointer_bit_trylock(long jarg1, int jarg2);
  public final static native void _frida_g_pointer_bit_unlock(long jarg1, int jarg2);
  public final static native long _frida_g_bookmark_file_error_quark();
  public final static native long _frida_g_bookmark_file_new();
  public final static native void _frida_g_bookmark_file_free(long jarg1);
  public final static native int _frida_g_bookmark_file_load_from_file(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_bookmark_file_load_from_data(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_bookmark_file_load_from_data_dirs(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_bookmark_file_to_data(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_bookmark_file_to_file(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_bookmark_file_set_title(long jarg1, String jarg2, String jarg3);
  public final static native String _frida_g_bookmark_file_get_title(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_bookmark_file_set_description(long jarg1, String jarg2, String jarg3);
  public final static native String _frida_g_bookmark_file_get_description(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_bookmark_file_set_mime_type(long jarg1, String jarg2, String jarg3);
  public final static native String _frida_g_bookmark_file_get_mime_type(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_bookmark_file_set_groups(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_bookmark_file_add_group(long jarg1, String jarg2, String jarg3);
  public final static native int _frida_g_bookmark_file_has_group(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long _frida_g_bookmark_file_get_groups(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_bookmark_file_add_application(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native int _frida_g_bookmark_file_has_application(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long _frida_g_bookmark_file_get_applications(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_bookmark_file_set_app_info(long jarg1, String jarg2, String jarg3, String jarg4, int jarg5, long jarg6, long jarg7);
  public final static native int _frida_g_bookmark_file_get_app_info(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void _frida_g_bookmark_file_set_is_private(long jarg1, String jarg2, int jarg3);
  public final static native int _frida_g_bookmark_file_get_is_private(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_bookmark_file_set_icon(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native int _frida_g_bookmark_file_get_icon(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_bookmark_file_set_added(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_bookmark_file_get_added(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_bookmark_file_set_modified(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_bookmark_file_get_modified(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_bookmark_file_set_visited(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_bookmark_file_get_visited(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_bookmark_file_has_item(long jarg1, String jarg2);
  public final static native int _frida_g_bookmark_file_get_size(long jarg1);
  public final static native long _frida_g_bookmark_file_get_uris(long jarg1, long jarg2);
  public final static native int _frida_g_bookmark_file_remove_group(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int _frida_g_bookmark_file_remove_application(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int _frida_g_bookmark_file_remove_item(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_bookmark_file_move_item(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native long _frida_g_bytes_new(long jarg1, long jarg2);
  public final static native long _frida_g_bytes_new_take(long jarg1, long jarg2);
  public final static native long _frida_g_bytes_new_static(long jarg1, long jarg2);
  public final static native long _frida_g_bytes_new_with_free_func(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_bytes_new_from_bytes(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_bytes_get_data(long jarg1, long jarg2);
  public final static native long _frida_g_bytes_get_size(long jarg1);
  public final static native long _frida_g_bytes_ref(long jarg1);
  public final static native void _frida_g_bytes_unref(long jarg1);
  public final static native long _frida_g_bytes_unref_to_data(long jarg1, long jarg2);
  public final static native long _frida_g_bytes_unref_to_array(long jarg1);
  public final static native long _frida_g_bytes_hash(long jarg1);
  public final static native int _frida_g_bytes_equal(long jarg1, long jarg2);
  public final static native int _frida_g_bytes_compare(long jarg1, long jarg2);
  public final static native int _frida_g_get_charset(long jarg1);
  public final static native String _frida_g_get_codeset();
  public final static native long _frida_g_get_language_names();
  public final static native long _frida_g_get_language_names_with_category(String jarg1);
  public final static native long _frida_g_get_locale_variants(String jarg1);
  public final static native int _frida_g_checksum_type_get_length(int jarg1);
  public final static native long _frida_g_checksum_new(int jarg1);
  public final static native void _frida_g_checksum_reset(long jarg1);
  public final static native long _frida_g_checksum_copy(long jarg1);
  public final static native void _frida_g_checksum_free(long jarg1);
  public final static native void _frida_g_checksum_update(long jarg1, long jarg2, int jarg3);
  public final static native String _frida_g_checksum_get_string(long jarg1);
  public final static native void _frida_g_checksum_get_digest(long jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_compute_checksum_for_data(int jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_compute_checksum_for_string(int jarg1, String jarg2, int jarg3);
  public final static native String _frida_g_compute_checksum_for_bytes(int jarg1, long jarg2);
  public final static native long _frida_g_convert_error_quark();
  public final static native long _frida_g_iconv_open(String jarg1, String jarg2);
  public final static native long _frida_g_iconv(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_iconv_close(long jarg1);
  public final static native String _frida_g_convert(String jarg1, int jarg2, String jarg3, String jarg4, long jarg5, long jarg6, long jarg7);
  public final static native String _frida_g_convert_with_iconv(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native String _frida_g_convert_with_fallback(String jarg1, int jarg2, String jarg3, String jarg4, String jarg5, long jarg6, long jarg7, long jarg8);
  public final static native String _frida_g_locale_to_utf8(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String _frida_g_locale_from_utf8(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String _frida_g_filename_to_utf8(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String _frida_g_filename_from_utf8(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String _frida_g_filename_from_uri(String jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_filename_to_uri(String jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_filename_display_name(String jarg1);
  public final static native int _frida_g_get_filename_charsets(long jarg1);
  public final static native String _frida_g_filename_display_basename(String jarg1);
  public final static native long _frida_g_uri_list_extract_uris(String jarg1);
  public final static native void _frida_g_datalist_init(long jarg1);
  public final static native void _frida_g_datalist_clear(long jarg1);
  public final static native long _frida_g_datalist_id_get_data(long jarg1, long jarg2);
  public final static native void _frida_g_datalist_id_set_data_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_datalist_id_dup_data(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_datalist_id_replace_data(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_datalist_id_remove_no_notify(long jarg1, long jarg2);
  public final static native void _frida_g_datalist_foreach(long jarg1, long jarg2, long jarg3);
  public final static native int G_DATALIST_FLAGS_MASK_get();
  public final static native void _frida_g_datalist_set_flags(long jarg1, long jarg2);
  public final static native void _frida_g_datalist_unset_flags(long jarg1, long jarg2);
  public final static native long _frida_g_datalist_get_flags(long jarg1);
  public final static native void _frida_g_dataset_destroy(long jarg1);
  public final static native long _frida_g_dataset_id_get_data(long jarg1, long jarg2);
  public final static native long _frida_g_datalist_get_data(long jarg1, String jarg2);
  public final static native void _frida_g_dataset_id_set_data_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_dataset_id_remove_no_notify(long jarg1, long jarg2);
  public final static native void _frida_g_dataset_foreach(long jarg1, long jarg2, long jarg3);
  public final static native int G_DATE_DAY_get();
  public final static native int G_DATE_MONTH_get();
  public final static native int G_DATE_YEAR_get();
  public final static native int G_DATE_BAD_WEEKDAY_get();
  public final static native int G_DATE_MONDAY_get();
  public final static native int G_DATE_TUESDAY_get();
  public final static native int G_DATE_WEDNESDAY_get();
  public final static native int G_DATE_THURSDAY_get();
  public final static native int G_DATE_FRIDAY_get();
  public final static native int G_DATE_SATURDAY_get();
  public final static native int G_DATE_SUNDAY_get();
  public final static native int G_DATE_BAD_MONTH_get();
  public final static native int G_DATE_JANUARY_get();
  public final static native int G_DATE_FEBRUARY_get();
  public final static native int G_DATE_MARCH_get();
  public final static native int G_DATE_APRIL_get();
  public final static native int G_DATE_MAY_get();
  public final static native int G_DATE_JUNE_get();
  public final static native int G_DATE_JULY_get();
  public final static native int G_DATE_AUGUST_get();
  public final static native int G_DATE_SEPTEMBER_get();
  public final static native int G_DATE_OCTOBER_get();
  public final static native int G_DATE_NOVEMBER_get();
  public final static native int G_DATE_DECEMBER_get();
  public final static native long G_DATE_BAD_JULIAN_get();
  public final static native long G_DATE_BAD_DAY_get();
  public final static native long G_DATE_BAD_YEAR_get();
  public final static native void _GDate_julian_days_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_julian_days_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_julian_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_julian_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_dmy_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_dmy_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_day_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_day_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_month_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_month_get(long jarg1, _GDate jarg1_);
  public final static native void _GDate_year_set(long jarg1, _GDate jarg1_, long jarg2);
  public final static native long _GDate_year_get(long jarg1, _GDate jarg1_);
  public final static native long new__GDate();
  public final static native void delete__GDate(long jarg1);
  public final static native long _frida_g_date_new();
  public final static native long _frida_g_date_new_dmy(short jarg1, int jarg2, int jarg3);
  public final static native long _frida_g_date_new_julian(long jarg1);
  public final static native void _frida_g_date_free(long jarg1, _GDate jarg1_);
  public final static native long _frida_g_date_copy(long jarg1, _GDate jarg1_);
  public final static native int _frida_g_date_valid(long jarg1, _GDate jarg1_);
  public final static native int _frida_g_date_valid_day(short jarg1);
  public final static native int _frida_g_date_valid_month(int jarg1);
  public final static native int _frida_g_date_valid_year(int jarg1);
  public final static native int _frida_g_date_valid_weekday(int jarg1);
  public final static native int _frida_g_date_valid_julian(long jarg1);
  public final static native int _frida_g_date_valid_dmy(short jarg1, int jarg2, int jarg3);
  public final static native int _frida_g_date_get_weekday(long jarg1, _GDate jarg1_);
  public final static native int _frida_g_date_get_month(long jarg1, _GDate jarg1_);
  public final static native int _frida_g_date_get_year(long jarg1, _GDate jarg1_);
  public final static native short _frida_g_date_get_day(long jarg1, _GDate jarg1_);
  public final static native long _frida_g_date_get_julian(long jarg1, _GDate jarg1_);
  public final static native long _frida_g_date_get_day_of_year(long jarg1, _GDate jarg1_);
  public final static native long _frida_g_date_get_monday_week_of_year(long jarg1, _GDate jarg1_);
  public final static native long _frida_g_date_get_sunday_week_of_year(long jarg1, _GDate jarg1_);
  public final static native long _frida_g_date_get_iso8601_week_of_year(long jarg1, _GDate jarg1_);
  public final static native void _frida_g_date_clear(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_set_parse(long jarg1, _GDate jarg1_, String jarg2);
  public final static native void _frida_g_date_set_time_t(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_set_time_val(long jarg1, _GDate jarg1_, long jarg2, _GTimeVal jarg2_);
  public final static native void _frida_g_date_set_time(long jarg1, _GDate jarg1_, int jarg2);
  public final static native void _frida_g_date_set_month(long jarg1, _GDate jarg1_, int jarg2);
  public final static native void _frida_g_date_set_day(long jarg1, _GDate jarg1_, short jarg2);
  public final static native void _frida_g_date_set_year(long jarg1, _GDate jarg1_, int jarg2);
  public final static native void _frida_g_date_set_dmy(long jarg1, _GDate jarg1_, short jarg2, int jarg3, int jarg4);
  public final static native void _frida_g_date_set_julian(long jarg1, _GDate jarg1_, long jarg2);
  public final static native int _frida_g_date_is_first_of_month(long jarg1, _GDate jarg1_);
  public final static native int _frida_g_date_is_last_of_month(long jarg1, _GDate jarg1_);
  public final static native void _frida_g_date_add_days(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_subtract_days(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_add_months(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_subtract_months(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_add_years(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_subtract_years(long jarg1, _GDate jarg1_, long jarg2);
  public final static native int _frida_g_date_is_leap_year(int jarg1);
  public final static native short _frida_g_date_get_days_in_month(int jarg1, int jarg2);
  public final static native short _frida_g_date_get_monday_weeks_in_year(int jarg1);
  public final static native short _frida_g_date_get_sunday_weeks_in_year(int jarg1);
  public final static native int _frida_g_date_days_between(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_);
  public final static native int _frida_g_date_compare(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_);
  public final static native void _frida_g_date_to_struct_tm(long jarg1, _GDate jarg1_, long jarg2);
  public final static native void _frida_g_date_clamp(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_, long jarg3, _GDate jarg3_);
  public final static native void _frida_g_date_order(long jarg1, _GDate jarg1_, long jarg2, _GDate jarg2_);
  public final static native long _frida_g_date_strftime(String jarg1, long jarg2, String jarg3, long jarg4, _GDate jarg4_);
  public final static native long _frida_g_time_zone_new(String jarg1);
  public final static native long _frida_g_time_zone_new_utc();
  public final static native long _frida_g_time_zone_new_local();
  public final static native long _frida_g_time_zone_new_offset(int jarg1);
  public final static native long _frida_g_time_zone_ref(long jarg1);
  public final static native void _frida_g_time_zone_unref(long jarg1);
  public final static native int _frida_g_time_zone_find_interval(long jarg1, int jarg2, int jarg3);
  public final static native int _frida_g_time_zone_adjust_time(long jarg1, int jarg2, long jarg3);
  public final static native String _frida_g_time_zone_get_abbreviation(long jarg1, int jarg2);
  public final static native int _frida_g_time_zone_get_offset(long jarg1, int jarg2);
  public final static native int _frida_g_time_zone_is_dst(long jarg1, int jarg2);
  public final static native String _frida_g_time_zone_get_identifier(long jarg1);
  public final static native int G_TIME_SPAN_DAY_get();
  public final static native int G_TIME_SPAN_HOUR_get();
  public final static native int G_TIME_SPAN_MINUTE_get();
  public final static native int G_TIME_SPAN_SECOND_get();
  public final static native int G_TIME_SPAN_MILLISECOND_get();
  public final static native void _frida_g_date_time_unref(long jarg1);
  public final static native long _frida_g_date_time_ref(long jarg1);
  public final static native long _frida_g_date_time_new_now(long jarg1);
  public final static native long _frida_g_date_time_new_now_local();
  public final static native long _frida_g_date_time_new_now_utc();
  public final static native long _frida_g_date_time_new_from_unix_local(int jarg1);
  public final static native long _frida_g_date_time_new_from_unix_utc(int jarg1);
  public final static native long _frida_g_date_time_new_from_timeval_local(long jarg1, _GTimeVal jarg1_);
  public final static native long _frida_g_date_time_new_from_timeval_utc(long jarg1, _GTimeVal jarg1_);
  public final static native long _frida_g_date_time_new_from_iso8601(String jarg1, long jarg2);
  public final static native long _frida_g_date_time_new(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, double jarg7);
  public final static native long _frida_g_date_time_new_local(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6);
  public final static native long _frida_g_date_time_new_utc(int jarg1, int jarg2, int jarg3, int jarg4, int jarg5, double jarg6);
  public final static native long _frida_g_date_time_add(long jarg1, int jarg2);
  public final static native long _frida_g_date_time_add_years(long jarg1, int jarg2);
  public final static native long _frida_g_date_time_add_months(long jarg1, int jarg2);
  public final static native long _frida_g_date_time_add_weeks(long jarg1, int jarg2);
  public final static native long _frida_g_date_time_add_days(long jarg1, int jarg2);
  public final static native long _frida_g_date_time_add_hours(long jarg1, int jarg2);
  public final static native long _frida_g_date_time_add_minutes(long jarg1, int jarg2);
  public final static native long _frida_g_date_time_add_seconds(long jarg1, double jarg2);
  public final static native long _frida_g_date_time_add_full(long jarg1, int jarg2, int jarg3, int jarg4, int jarg5, int jarg6, double jarg7);
  public final static native int _frida_g_date_time_compare(long jarg1, long jarg2);
  public final static native int _frida_g_date_time_difference(long jarg1, long jarg2);
  public final static native long _frida_g_date_time_hash(long jarg1);
  public final static native int _frida_g_date_time_equal(long jarg1, long jarg2);
  public final static native void _frida_g_date_time_get_ymd(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_date_time_get_year(long jarg1);
  public final static native int _frida_g_date_time_get_month(long jarg1);
  public final static native int _frida_g_date_time_get_day_of_month(long jarg1);
  public final static native int _frida_g_date_time_get_week_numbering_year(long jarg1);
  public final static native int _frida_g_date_time_get_week_of_year(long jarg1);
  public final static native int _frida_g_date_time_get_day_of_week(long jarg1);
  public final static native int _frida_g_date_time_get_day_of_year(long jarg1);
  public final static native int _frida_g_date_time_get_hour(long jarg1);
  public final static native int _frida_g_date_time_get_minute(long jarg1);
  public final static native int _frida_g_date_time_get_second(long jarg1);
  public final static native int _frida_g_date_time_get_microsecond(long jarg1);
  public final static native double _frida_g_date_time_get_seconds(long jarg1);
  public final static native int _frida_g_date_time_to_unix(long jarg1);
  public final static native int _frida_g_date_time_to_timeval(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native int _frida_g_date_time_get_utc_offset(long jarg1);
  public final static native long _frida_g_date_time_get_timezone(long jarg1);
  public final static native String _frida_g_date_time_get_timezone_abbreviation(long jarg1);
  public final static native int _frida_g_date_time_is_daylight_savings(long jarg1);
  public final static native long _frida_g_date_time_to_timezone(long jarg1, long jarg2);
  public final static native long _frida_g_date_time_to_local(long jarg1);
  public final static native long _frida_g_date_time_to_utc(long jarg1);
  public final static native String _frida_g_date_time_format(long jarg1, String jarg2);
  public final static native long _frida_g_dir_open(String jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_dir_read_name(long jarg1);
  public final static native void _frida_g_dir_rewind(long jarg1);
  public final static native void _frida_g_dir_close(long jarg1);
  public final static native String _frida_g_getenv(String jarg1);
  public final static native int _frida_g_setenv(String jarg1, String jarg2, int jarg3);
  public final static native void _frida_g_unsetenv(String jarg1);
  public final static native long _frida_g_listenv();
  public final static native long _frida_g_get_environ();
  public final static native String _frida_g_environ_getenv(long jarg1, String jarg2);
  public final static native long _frida_g_environ_setenv(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native long _frida_g_environ_unsetenv(long jarg1, String jarg2);
  public final static native int G_FILE_TEST_IS_REGULAR_get();
  public final static native int G_FILE_TEST_IS_SYMLINK_get();
  public final static native int G_FILE_TEST_IS_DIR_get();
  public final static native int G_FILE_TEST_IS_EXECUTABLE_get();
  public final static native int G_FILE_TEST_EXISTS_get();
  public final static native long _frida_g_file_error_quark();
  public final static native int _frida_g_file_error_from_errno(int jarg1);
  public final static native int _frida_g_file_test(String jarg1, int jarg2);
  public final static native int _frida_g_file_get_contents(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_file_set_contents(String jarg1, String jarg2, int jarg3, long jarg4);
  public final static native String _frida_g_file_read_link(String jarg1, long jarg2);
  public final static native String _frida_g_mkdtemp(String jarg1);
  public final static native String _frida_g_mkdtemp_full(String jarg1, int jarg2);
  public final static native int _frida_g_mkstemp(String jarg1);
  public final static native int _frida_g_mkstemp_full(String jarg1, int jarg2, int jarg3);
  public final static native int _frida_g_file_open_tmp(String jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_dir_make_tmp(String jarg1, long jarg2);
  public final static native String _frida_g_build_path(String jarg1, String jarg2);
  public final static native String _frida_g_build_pathv(String jarg1, long jarg2);
  public final static native String _frida_g_build_filename(String jarg1);
  public final static native String _frida_g_build_filenamev(long jarg1);
  public final static native String _frida_g_build_filename_valist(String jarg1, long jarg2);
  public final static native int _frida_g_mkdir_with_parents(String jarg1, int jarg2);
  public final static native int _frida_g_path_is_absolute(String jarg1);
  public final static native String _frida_g_path_skip_root(String jarg1);
  public final static native String _frida_g_basename(String jarg1);
  public final static native String _frida_g_get_current_dir();
  public final static native String _frida_g_path_get_basename(String jarg1);
  public final static native String _frida_g_path_get_dirname(String jarg1);
  public final static native String _frida_g_canonicalize_filename(String jarg1, String jarg2);
  public final static native String _frida_g_strip_context(String jarg1, String jarg2);
  public final static native String _frida_g_dgettext(String jarg1, String jarg2);
  public final static native String _frida_g_dcgettext(String jarg1, String jarg2, int jarg3);
  public final static native String _frida_g_dngettext(String jarg1, String jarg2, String jarg3, long jarg4);
  public final static native String _frida_g_dpgettext(String jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_dpgettext2(String jarg1, String jarg2, String jarg3);
  public final static native int G_MEM_ALIGN_get();
  public final static native void _frida_g_free(long jarg1);
  public final static native void _frida_g_clear_pointer(long jarg1, long jarg2);
  public final static native long _frida_g_malloc(long jarg1);
  public final static native long _frida_g_malloc0(long jarg1);
  public final static native long _frida_g_realloc(long jarg1, long jarg2);
  public final static native long _frida_g_try_malloc(long jarg1);
  public final static native long _frida_g_try_malloc0(long jarg1);
  public final static native long _frida_g_try_realloc(long jarg1, long jarg2);
  public final static native long _frida_g_malloc_n(long jarg1, long jarg2);
  public final static native long _frida_g_malloc0_n(long jarg1, long jarg2);
  public final static native long _frida_g_realloc_n(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_try_malloc_n(long jarg1, long jarg2);
  public final static native long _frida_g_try_malloc0_n(long jarg1, long jarg2);
  public final static native long _frida_g_try_realloc_n(long jarg1, long jarg2, long jarg3);
  public final static native void _GMemVTable_malloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_malloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_realloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_realloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_free_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_free_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_calloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_calloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_try_malloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_try_malloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native void _GMemVTable_try_realloc_set(long jarg1, _GMemVTable jarg1_, long jarg2);
  public final static native long _GMemVTable_try_realloc_get(long jarg1, _GMemVTable jarg1_);
  public final static native long new__GMemVTable();
  public final static native void delete__GMemVTable(long jarg1);
  public final static native void _frida_glib_mem_table_set(long jarg1, _GMemVTable jarg1_);
  public final static native long _frida_glib_mem_table_get();
  public final static native void _frida_g_mem_set_vtable(long jarg1, _GMemVTable jarg1_);
  public final static native int _frida_g_mem_is_system_malloc();
  public final static native void _frida_g_mem_gc_friendly_set(int jarg1);
  public final static native int _frida_g_mem_gc_friendly_get();
  public final static native void _frida_glib_mem_profiler_table_set(long jarg1, _GMemVTable jarg1_);
  public final static native long _frida_glib_mem_profiler_table_get();
  public final static native void _frida_g_mem_profile();
  public final static native int G_TRAVERSE_LEAVES_get();
  public final static native int G_TRAVERSE_NON_LEAVES_get();
  public final static native int G_TRAVERSE_ALL_get();
  public final static native int G_TRAVERSE_MASK_get();
  public final static native int G_TRAVERSE_LEAFS_get();
  public final static native int G_TRAVERSE_NON_LEAFS_get();
  public final static native void _GNode_data_set(long jarg1, _GNode jarg1_, long jarg2);
  public final static native long _GNode_data_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_next_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_next_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_prev_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_prev_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_parent_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_parent_get(long jarg1, _GNode jarg1_);
  public final static native void _GNode_children_set(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _GNode_children_get(long jarg1, _GNode jarg1_);
  public final static native long new__GNode();
  public final static native void delete__GNode(long jarg1);
  public final static native long _frida_g_node_new(long jarg1);
  public final static native void _frida_g_node_destroy(long jarg1, _GNode jarg1_);
  public final static native void _frida_g_node_unlink(long jarg1, _GNode jarg1_);
  public final static native long _frida_g_node_copy_deep(long jarg1, _GNode jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_node_copy(long jarg1, _GNode jarg1_);
  public final static native long _frida_g_node_insert(long jarg1, _GNode jarg1_, int jarg2, long jarg3, _GNode jarg3_);
  public final static native long _frida_g_node_insert_before(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_, long jarg3, _GNode jarg3_);
  public final static native long _frida_g_node_insert_after(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_, long jarg3, _GNode jarg3_);
  public final static native long _frida_g_node_prepend(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _frida_g_node_n_nodes(long jarg1, _GNode jarg1_, int jarg2);
  public final static native long _frida_g_node_get_root(long jarg1, _GNode jarg1_);
  public final static native int _frida_g_node_is_ancestor(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native long _frida_g_node_depth(long jarg1, _GNode jarg1_);
  public final static native long _frida_g_node_find(long jarg1, _GNode jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native void _frida_g_node_traverse(long jarg1, _GNode jarg1_, int jarg2, int jarg3, int jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_node_max_height(long jarg1, _GNode jarg1_);
  public final static native void _frida_g_node_children_foreach(long jarg1, _GNode jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_node_reverse_children(long jarg1, _GNode jarg1_);
  public final static native long _frida_g_node_n_children(long jarg1, _GNode jarg1_);
  public final static native long _frida_g_node_nth_child(long jarg1, _GNode jarg1_, long jarg2);
  public final static native long _frida_g_node_last_child(long jarg1, _GNode jarg1_);
  public final static native long _frida_g_node_find_child(long jarg1, _GNode jarg1_, int jarg2, long jarg3);
  public final static native int _frida_g_node_child_position(long jarg1, _GNode jarg1_, long jarg2, _GNode jarg2_);
  public final static native int _frida_g_node_child_index(long jarg1, _GNode jarg1_, long jarg2);
  public final static native long _frida_g_node_first_sibling(long jarg1, _GNode jarg1_);
  public final static native long _frida_g_node_last_sibling(long jarg1, _GNode jarg1_);
  public final static native void _GList_data_set(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _GList_data_get(long jarg1, _GList jarg1_);
  public final static native void _GList_next_set(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GList_next_get(long jarg1, _GList jarg1_);
  public final static native void _GList_prev_set(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GList_prev_get(long jarg1, _GList jarg1_);
  public final static native long new__GList();
  public final static native void delete__GList(long jarg1);
  public final static native long _frida_g_list_alloc();
  public final static native void _frida_g_list_free(long jarg1, _GList jarg1_);
  public final static native void _frida_g_list_free_1(long jarg1, _GList jarg1_);
  public final static native void _frida_g_list_free_full(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_append(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_prepend(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_insert(long jarg1, _GList jarg1_, long jarg2, int jarg3);
  public final static native long _frida_g_list_insert_sorted(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_list_insert_sorted_with_data(long jarg1, _GList jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_list_insert_before(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_, long jarg3);
  public final static native long _frida_g_list_concat(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long _frida_g_list_remove(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_remove_all(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_remove_link(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long _frida_g_list_delete_link(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native long _frida_g_list_reverse(long jarg1, _GList jarg1_);
  public final static native long _frida_g_list_copy(long jarg1, _GList jarg1_);
  public final static native long _frida_g_list_copy_deep(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_list_nth(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_nth_prev(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_find(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_find_custom(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_list_position(long jarg1, _GList jarg1_, long jarg2, _GList jarg2_);
  public final static native int _frida_g_list_index(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_last(long jarg1, _GList jarg1_);
  public final static native long _frida_g_list_first(long jarg1, _GList jarg1_);
  public final static native long _frida_g_list_length(long jarg1, _GList jarg1_);
  public final static native void _frida_g_list_foreach(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_list_sort(long jarg1, _GList jarg1_, long jarg2);
  public final static native long _frida_g_list_sort_with_data(long jarg1, _GList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_list_nth_data(long jarg1, _GList jarg1_, long jarg2);
  public final static native void _GHashTableIter_dummy1_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy1_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy2_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy2_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy3_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy3_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy4_set(long jarg1, _GHashTableIter jarg1_, int jarg2);
  public final static native int _GHashTableIter_dummy4_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy5_set(long jarg1, _GHashTableIter jarg1_, int jarg2);
  public final static native int _GHashTableIter_dummy5_get(long jarg1, _GHashTableIter jarg1_);
  public final static native void _GHashTableIter_dummy6_set(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native long _GHashTableIter_dummy6_get(long jarg1, _GHashTableIter jarg1_);
  public final static native long new__GHashTableIter();
  public final static native void delete__GHashTableIter(long jarg1);
  public final static native long _frida_g_hash_table_new(long jarg1, long jarg2);
  public final static native long _frida_g_hash_table_new_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_hash_table_destroy(long jarg1);
  public final static native int _frida_g_hash_table_insert(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_hash_table_replace(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_hash_table_add(long jarg1, long jarg2);
  public final static native int _frida_g_hash_table_remove(long jarg1, long jarg2);
  public final static native void _frida_g_hash_table_remove_all(long jarg1);
  public final static native int _frida_g_hash_table_steal(long jarg1, long jarg2);
  public final static native int _frida_g_hash_table_steal_extended(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_hash_table_steal_all(long jarg1);
  public final static native long _frida_g_hash_table_lookup(long jarg1, long jarg2);
  public final static native int _frida_g_hash_table_contains(long jarg1, long jarg2);
  public final static native int _frida_g_hash_table_lookup_extended(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_hash_table_foreach(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_hash_table_find(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_hash_table_foreach_remove(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_hash_table_foreach_steal(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_hash_table_size(long jarg1);
  public final static native long _frida_g_hash_table_get_keys(long jarg1);
  public final static native long _frida_g_hash_table_get_values(long jarg1);
  public final static native long _frida_g_hash_table_get_keys_as_array(long jarg1, long jarg2);
  public final static native void _frida_g_hash_table_iter_init(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native int _frida_g_hash_table_iter_next(long jarg1, _GHashTableIter jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_hash_table_iter_get_hash_table(long jarg1, _GHashTableIter jarg1_);
  public final static native void _frida_g_hash_table_iter_remove(long jarg1, _GHashTableIter jarg1_);
  public final static native void _frida_g_hash_table_iter_replace(long jarg1, _GHashTableIter jarg1_, long jarg2);
  public final static native void _frida_g_hash_table_iter_steal(long jarg1, _GHashTableIter jarg1_);
  public final static native long _frida_g_hash_table_ref(long jarg1);
  public final static native void _frida_g_hash_table_unref(long jarg1);
  public final static native int _frida_g_str_equal(long jarg1, long jarg2);
  public final static native long _frida_g_str_hash(long jarg1);
  public final static native int _frida_g_int_equal(long jarg1, long jarg2);
  public final static native long _frida_g_int_hash(long jarg1);
  public final static native int _frida_g_int64_equal(long jarg1, long jarg2);
  public final static native long _frida_g_int64_hash(long jarg1);
  public final static native int _frida_g_double_equal(long jarg1, long jarg2);
  public final static native long _frida_g_double_hash(long jarg1);
  public final static native long _frida_g_direct_hash(long jarg1);
  public final static native int _frida_g_direct_equal(long jarg1, long jarg2);
  public final static native long _frida_g_hmac_new(int jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_hmac_copy(long jarg1);
  public final static native long _frida_g_hmac_ref(long jarg1);
  public final static native void _frida_g_hmac_unref(long jarg1);
  public final static native void _frida_g_hmac_update(long jarg1, long jarg2, int jarg3);
  public final static native String _frida_g_hmac_get_string(long jarg1);
  public final static native void _frida_g_hmac_get_digest(long jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_compute_hmac_for_data(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String _frida_g_compute_hmac_for_string(int jarg1, long jarg2, long jarg3, String jarg4, int jarg5);
  public final static native String _frida_g_compute_hmac_for_bytes(int jarg1, long jarg2, long jarg3);
  public final static native int G_HOOK_FLAG_ACTIVE_get();
  public final static native int G_HOOK_FLAG_IN_CALL_get();
  public final static native int G_HOOK_FLAG_MASK_get();
  public final static native int G_HOOK_FLAG_USER_SHIFT_get();
  public final static native void _GHookList_seq_id_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_seq_id_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_hook_size_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_hook_size_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_is_setup_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_is_setup_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_hooks_set(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native long _GHookList_hooks_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_dummy3_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_dummy3_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_finalize_hook_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_finalize_hook_get(long jarg1, _GHookList jarg1_);
  public final static native void _GHookList_dummy_set(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _GHookList_dummy_get(long jarg1, _GHookList jarg1_);
  public final static native long new__GHookList();
  public final static native void delete__GHookList(long jarg1);
  public final static native void _GHook_data_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_data_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_next_set(long jarg1, _GHook jarg1_, long jarg2, _GHook jarg2_);
  public final static native long _GHook_next_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_prev_set(long jarg1, _GHook jarg1_, long jarg2, _GHook jarg2_);
  public final static native long _GHook_prev_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_ref_count_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_ref_count_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_hook_id_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_hook_id_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_flags_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_flags_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_func_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_func_get(long jarg1, _GHook jarg1_);
  public final static native void _GHook_destroy_set(long jarg1, _GHook jarg1_, long jarg2);
  public final static native long _GHook_destroy_get(long jarg1, _GHook jarg1_);
  public final static native long new__GHook();
  public final static native void delete__GHook(long jarg1);
  public final static native void _frida_g_hook_list_init(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native void _frida_g_hook_list_clear(long jarg1, _GHookList jarg1_);
  public final static native long _frida_g_hook_alloc(long jarg1, _GHookList jarg1_);
  public final static native void _frida_g_hook_free(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native long _frida_g_hook_ref(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native void _frida_g_hook_unref(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native int _frida_g_hook_destroy(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native void _frida_g_hook_destroy_link(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native void _frida_g_hook_prepend(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_);
  public final static native void _frida_g_hook_insert_before(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_, long jarg3, _GHook jarg3_);
  public final static native void _frida_g_hook_insert_sorted(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_, long jarg3);
  public final static native long _frida_g_hook_get(long jarg1, _GHookList jarg1_, long jarg2);
  public final static native long _frida_g_hook_find(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_hook_find_data(long jarg1, _GHookList jarg1_, int jarg2, long jarg3);
  public final static native long _frida_g_hook_find_func(long jarg1, _GHookList jarg1_, int jarg2, long jarg3);
  public final static native long _frida_g_hook_find_func_data(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_hook_first_valid(long jarg1, _GHookList jarg1_, int jarg2);
  public final static native long _frida_g_hook_next_valid(long jarg1, _GHookList jarg1_, long jarg2, _GHook jarg2_, int jarg3);
  public final static native int _frida_g_hook_compare_ids(long jarg1, _GHook jarg1_, long jarg2, _GHook jarg2_);
  public final static native void _frida_g_hook_list_invoke(long jarg1, _GHookList jarg1_, int jarg2);
  public final static native void _frida_g_hook_list_invoke_check(long jarg1, _GHookList jarg1_, int jarg2);
  public final static native void _frida_g_hook_list_marshal(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_hook_list_marshal_check(long jarg1, _GHookList jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_hostname_is_non_ascii(String jarg1);
  public final static native int _frida_g_hostname_is_ascii_encoded(String jarg1);
  public final static native int _frida_g_hostname_is_ip_address(String jarg1);
  public final static native String _frida_g_hostname_to_ascii(String jarg1);
  public final static native String _frida_g_hostname_to_unicode(String jarg1);
  public final static native void _GPollFD_fd_set(long jarg1, _GPollFD jarg1_, int jarg2);
  public final static native int _GPollFD_fd_get(long jarg1, _GPollFD jarg1_);
  public final static native void _GPollFD_events_set(long jarg1, _GPollFD jarg1_, int jarg2);
  public final static native int _GPollFD_events_get(long jarg1, _GPollFD jarg1_);
  public final static native void _GPollFD_revents_set(long jarg1, _GPollFD jarg1_, int jarg2);
  public final static native int _GPollFD_revents_get(long jarg1, _GPollFD jarg1_);
  public final static native long new__GPollFD();
  public final static native void delete__GPollFD(long jarg1);
  public final static native int _frida_g_poll(long jarg1, _GPollFD jarg1_, long jarg2, int jarg3);
  public final static native void _GSList_data_set(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _GSList_data_get(long jarg1, _GSList jarg1_);
  public final static native void _GSList_next_set(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GSList_next_get(long jarg1, _GSList jarg1_);
  public final static native long new__GSList();
  public final static native void delete__GSList(long jarg1);
  public final static native long _frida_g_slist_alloc();
  public final static native void _frida_g_slist_free(long jarg1, _GSList jarg1_);
  public final static native void _frida_g_slist_free_1(long jarg1, _GSList jarg1_);
  public final static native void _frida_g_slist_free_full(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_append(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_prepend(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_insert(long jarg1, _GSList jarg1_, long jarg2, int jarg3);
  public final static native long _frida_g_slist_insert_sorted(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_slist_insert_sorted_with_data(long jarg1, _GSList jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_slist_insert_before(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_, long jarg3);
  public final static native long _frida_g_slist_concat(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _frida_g_slist_remove(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_remove_all(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_remove_link(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _frida_g_slist_delete_link(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _frida_g_slist_reverse(long jarg1, _GSList jarg1_);
  public final static native long _frida_g_slist_copy(long jarg1, _GSList jarg1_);
  public final static native long _frida_g_slist_copy_deep(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_slist_nth(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_find(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_find_custom(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_slist_position(long jarg1, _GSList jarg1_, long jarg2, _GSList jarg2_);
  public final static native int _frida_g_slist_index(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_last(long jarg1, _GSList jarg1_);
  public final static native long _frida_g_slist_length(long jarg1, _GSList jarg1_);
  public final static native void _frida_g_slist_foreach(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_slist_sort(long jarg1, _GSList jarg1_, long jarg2);
  public final static native long _frida_g_slist_sort_with_data(long jarg1, _GSList jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_slist_nth_data(long jarg1, _GSList jarg1_, long jarg2);
  public final static native int G_IO_IN_get();
  public final static native int G_IO_OUT_get();
  public final static native int G_IO_PRI_get();
  public final static native int G_IO_ERR_get();
  public final static native int G_IO_HUP_get();
  public final static native int G_IO_NVAL_get();
  public final static native void _GSource_callback_data_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_callback_data_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_callback_funcs_set(long jarg1, _GSource jarg1_, long jarg2, _GSourceCallbackFuncs jarg2_);
  public final static native long _GSource_callback_funcs_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_source_funcs_set(long jarg1, _GSource jarg1_, long jarg2, _GSourceFuncs jarg2_);
  public final static native long _GSource_source_funcs_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_ref_count_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_ref_count_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_context_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_context_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_priority_set(long jarg1, _GSource jarg1_, int jarg2);
  public final static native int _GSource_priority_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_flags_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_flags_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_source_id_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_source_id_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_poll_fds_set(long jarg1, _GSource jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GSource_poll_fds_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_prev_set(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native long _GSource_prev_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_next_set(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native long _GSource_next_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_name_set(long jarg1, _GSource jarg1_, String jarg2);
  public final static native String _GSource_name_get(long jarg1, _GSource jarg1_);
  public final static native void _GSource_priv_set(long jarg1, _GSource jarg1_, long jarg2);
  public final static native long _GSource_priv_get(long jarg1, _GSource jarg1_);
  public final static native long new__GSource();
  public final static native void delete__GSource(long jarg1);
  public final static native void _GSourceCallbackFuncs_ref_set(long jarg1, _GSourceCallbackFuncs jarg1_, long jarg2);
  public final static native long _GSourceCallbackFuncs_ref_get(long jarg1, _GSourceCallbackFuncs jarg1_);
  public final static native void _GSourceCallbackFuncs_unref_set(long jarg1, _GSourceCallbackFuncs jarg1_, long jarg2);
  public final static native long _GSourceCallbackFuncs_unref_get(long jarg1, _GSourceCallbackFuncs jarg1_);
  public final static native void _GSourceCallbackFuncs_get_set(long jarg1, _GSourceCallbackFuncs jarg1_, long jarg2);
  public final static native long _GSourceCallbackFuncs_get_get(long jarg1, _GSourceCallbackFuncs jarg1_);
  public final static native long new__GSourceCallbackFuncs();
  public final static native void delete__GSourceCallbackFuncs(long jarg1);
  public final static native void _GSourceFuncs_prepare_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_prepare_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_check_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_check_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_dispatch_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_dispatch_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_finalize_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_finalize_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_closure_callback_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_closure_callback_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native void _GSourceFuncs_closure_marshal_set(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _GSourceFuncs_closure_marshal_get(long jarg1, _GSourceFuncs jarg1_);
  public final static native long new__GSourceFuncs();
  public final static native void delete__GSourceFuncs(long jarg1);
  public final static native int G_PRIORITY_HIGH_get();
  public final static native int G_PRIORITY_DEFAULT_get();
  public final static native int G_PRIORITY_HIGH_IDLE_get();
  public final static native int G_PRIORITY_DEFAULT_IDLE_get();
  public final static native int G_PRIORITY_LOW_get();
  public final static native int G_SOURCE_REMOVE_get();
  public final static native int G_SOURCE_CONTINUE_get();
  public final static native long _frida_g_main_context_new();
  public final static native long _frida_g_main_context_ref(long jarg1);
  public final static native void _frida_g_main_context_unref(long jarg1);
  public final static native long _frida_g_main_context_default();
  public final static native int _frida_g_main_context_iteration(long jarg1, int jarg2);
  public final static native int _frida_g_main_context_pending(long jarg1);
  public final static native long _frida_g_main_context_find_source_by_id(long jarg1, long jarg2);
  public final static native long _frida_g_main_context_find_source_by_user_data(long jarg1, long jarg2);
  public final static native long _frida_g_main_context_find_source_by_funcs_user_data(long jarg1, long jarg2, _GSourceFuncs jarg2_, long jarg3);
  public final static native void _frida_g_main_context_wakeup(long jarg1);
  public final static native int _frida_g_main_context_acquire(long jarg1);
  public final static native void _frida_g_main_context_release(long jarg1);
  public final static native int _frida_g_main_context_is_owner(long jarg1);
  public final static native int _frida_g_main_context_wait(long jarg1, long jarg2, _GCond jarg2_, long jarg3, _GMutex jarg3_);
  public final static native int _frida_g_main_context_prepare(long jarg1, long jarg2);
  public final static native int _frida_g_main_context_query(long jarg1, int jarg2, long jarg3, long jarg4, _GPollFD jarg4_, int jarg5);
  public final static native int _frida_g_main_context_check(long jarg1, int jarg2, long jarg3, _GPollFD jarg3_, int jarg4);
  public final static native void _frida_g_main_context_dispatch(long jarg1);
  public final static native void _frida_g_main_context_set_poll_func(long jarg1, long jarg2);
  public final static native long _frida_g_main_context_get_poll_func(long jarg1);
  public final static native void _frida_g_main_context_add_poll(long jarg1, long jarg2, _GPollFD jarg2_, int jarg3);
  public final static native void _frida_g_main_context_remove_poll(long jarg1, long jarg2, _GPollFD jarg2_);
  public final static native int _frida_g_main_depth();
  public final static native long _frida_g_main_current_source();
  public final static native void _frida_g_main_context_push_thread_default(long jarg1);
  public final static native void _frida_g_main_context_pop_thread_default(long jarg1);
  public final static native long _frida_g_main_context_get_thread_default();
  public final static native long _frida_g_main_context_ref_thread_default();
  public final static native long _frida_g_main_loop_new(long jarg1, int jarg2);
  public final static native void _frida_g_main_loop_run(long jarg1);
  public final static native void _frida_g_main_loop_quit(long jarg1);
  public final static native long _frida_g_main_loop_ref(long jarg1);
  public final static native void _frida_g_main_loop_unref(long jarg1);
  public final static native int _frida_g_main_loop_is_running(long jarg1);
  public final static native long _frida_g_main_loop_get_context(long jarg1);
  public final static native long _frida_g_source_new(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native long _frida_g_source_ref(long jarg1, _GSource jarg1_);
  public final static native void _frida_g_source_unref(long jarg1, _GSource jarg1_);
  public final static native long _frida_g_source_attach(long jarg1, _GSource jarg1_, long jarg2);
  public final static native void _frida_g_source_destroy(long jarg1, _GSource jarg1_);
  public final static native void _frida_g_source_set_priority(long jarg1, _GSource jarg1_, int jarg2);
  public final static native int _frida_g_source_get_priority(long jarg1, _GSource jarg1_);
  public final static native void _frida_g_source_set_can_recurse(long jarg1, _GSource jarg1_, int jarg2);
  public final static native int _frida_g_source_get_can_recurse(long jarg1, _GSource jarg1_);
  public final static native long _frida_g_source_get_id(long jarg1, _GSource jarg1_);
  public final static native long _frida_g_source_get_context(long jarg1, _GSource jarg1_);
  public final static native void _frida_g_source_set_callback(long jarg1, _GSource jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_source_set_funcs(long jarg1, _GSource jarg1_, long jarg2, _GSourceFuncs jarg2_);
  public final static native int _frida_g_source_is_destroyed(long jarg1, _GSource jarg1_);
  public final static native void _frida_g_source_set_name(long jarg1, _GSource jarg1_, String jarg2);
  public final static native String _frida_g_source_get_name(long jarg1, _GSource jarg1_);
  public final static native void _frida_g_source_set_name_by_id(long jarg1, String jarg2);
  public final static native void _frida_g_source_set_ready_time(long jarg1, _GSource jarg1_, int jarg2);
  public final static native int _frida_g_source_get_ready_time(long jarg1, _GSource jarg1_);
  public final static native long _frida_g_source_add_unix_fd(long jarg1, _GSource jarg1_, int jarg2, int jarg3);
  public final static native void _frida_g_source_modify_unix_fd(long jarg1, _GSource jarg1_, long jarg2, int jarg3);
  public final static native void _frida_g_source_remove_unix_fd(long jarg1, _GSource jarg1_, long jarg2);
  public final static native int _frida_g_source_query_unix_fd(long jarg1, _GSource jarg1_, long jarg2);
  public final static native void _frida_g_source_set_callback_indirect(long jarg1, _GSource jarg1_, long jarg2, long jarg3, _GSourceCallbackFuncs jarg3_);
  public final static native void _frida_g_source_add_poll(long jarg1, _GSource jarg1_, long jarg2, _GPollFD jarg2_);
  public final static native void _frida_g_source_remove_poll(long jarg1, _GSource jarg1_, long jarg2, _GPollFD jarg2_);
  public final static native void _frida_g_source_add_child_source(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native void _frida_g_source_remove_child_source(long jarg1, _GSource jarg1_, long jarg2, _GSource jarg2_);
  public final static native void _frida_g_source_get_current_time(long jarg1, _GSource jarg1_, long jarg2, _GTimeVal jarg2_);
  public final static native int _frida_g_source_get_time(long jarg1, _GSource jarg1_);
  public final static native long _frida_g_idle_source_new();
  public final static native long _frida_g_child_watch_source_new(int jarg1);
  public final static native long _frida_g_timeout_source_new(long jarg1);
  public final static native long _frida_g_timeout_source_new_seconds(long jarg1);
  public final static native void _frida_g_get_current_time(long jarg1, _GTimeVal jarg1_);
  public final static native int _frida_g_get_monotonic_time();
  public final static native int _frida_g_get_real_time();
  public final static native int _frida_g_source_remove(long jarg1);
  public final static native int _frida_g_source_remove_by_user_data(long jarg1);
  public final static native int _frida_g_source_remove_by_funcs_user_data(long jarg1, _GSourceFuncs jarg1_, long jarg2);
  public final static native void _frida_g_clear_handle_id(long jarg1, long jarg2);
  public final static native long _frida_g_timeout_add_full(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_timeout_add(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_timeout_add_seconds_full(int jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_timeout_add_seconds(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_child_watch_add_full(int jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_child_watch_add(int jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_idle_add(long jarg1, long jarg2);
  public final static native long _frida_g_idle_add_full(int jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_idle_remove_by_data(long jarg1);
  public final static native void _frida_g_main_context_invoke_full(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_main_context_invoke(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_timeout_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long _frida_g_timeout_funcs_get();
  public final static native void _frida_g_child_watch_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long _frida_g_child_watch_funcs_get();
  public final static native void _frida_g_idle_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long _frida_g_idle_funcs_get();
  public final static native void _frida_g_unix_signal_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long _frida_g_unix_signal_funcs_get();
  public final static native void _frida_g_unix_fd_source_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long _frida_g_unix_fd_source_funcs_get();
  public final static native int G_UNICODE_SCRIPT_INVALID_CODE_get();
  public final static native int G_UNICODE_SCRIPT_COMMON_get();
  public final static native long _frida_g_unicode_script_to_iso15924(int jarg1);
  public final static native int _frida_g_unicode_script_from_iso15924(long jarg1);
  public final static native int _frida_g_unichar_isalnum(long jarg1);
  public final static native int _frida_g_unichar_isalpha(long jarg1);
  public final static native int _frida_g_unichar_iscntrl(long jarg1);
  public final static native int _frida_g_unichar_isdigit(long jarg1);
  public final static native int _frida_g_unichar_isgraph(long jarg1);
  public final static native int _frida_g_unichar_islower(long jarg1);
  public final static native int _frida_g_unichar_isprint(long jarg1);
  public final static native int _frida_g_unichar_ispunct(long jarg1);
  public final static native int _frida_g_unichar_isspace(long jarg1);
  public final static native int _frida_g_unichar_isupper(long jarg1);
  public final static native int _frida_g_unichar_isxdigit(long jarg1);
  public final static native int _frida_g_unichar_istitle(long jarg1);
  public final static native int _frida_g_unichar_isdefined(long jarg1);
  public final static native int _frida_g_unichar_iswide(long jarg1);
  public final static native int _frida_g_unichar_iswide_cjk(long jarg1);
  public final static native int _frida_g_unichar_iszerowidth(long jarg1);
  public final static native int _frida_g_unichar_ismark(long jarg1);
  public final static native long _frida_g_unichar_toupper(long jarg1);
  public final static native long _frida_g_unichar_tolower(long jarg1);
  public final static native long _frida_g_unichar_totitle(long jarg1);
  public final static native int _frida_g_unichar_digit_value(long jarg1);
  public final static native int _frida_g_unichar_xdigit_value(long jarg1);
  public final static native int _frida_g_unichar_type(long jarg1);
  public final static native int _frida_g_unichar_break_type(long jarg1);
  public final static native int _frida_g_unichar_combining_class(long jarg1);
  public final static native int _frida_g_unichar_get_mirror_char(long jarg1, long jarg2);
  public final static native int _frida_g_unichar_get_script(long jarg1);
  public final static native int _frida_g_unichar_validate(long jarg1);
  public final static native int _frida_g_unichar_compose(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_unichar_decompose(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_unichar_fully_decompose(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native int G_UNICHAR_MAX_DECOMPOSITION_LENGTH_get();
  public final static native void _frida_g_unicode_canonical_ordering(long jarg1, long jarg2);
  public final static native long _frida_g_unicode_canonical_decomposition(long jarg1, long jarg2);
  public final static native String _frida_g_utf8_skip_get();
  public final static native long _frida_g_utf8_get_char(String jarg1);
  public final static native long _frida_g_utf8_get_char_validated(String jarg1, int jarg2);
  public final static native String _frida_g_utf8_offset_to_pointer(String jarg1, int jarg2);
  public final static native int _frida_g_utf8_pointer_to_offset(String jarg1, String jarg2);
  public final static native String _frida_g_utf8_prev_char(String jarg1);
  public final static native String _frida_g_utf8_find_next_char(String jarg1, String jarg2);
  public final static native String _frida_g_utf8_find_prev_char(String jarg1, String jarg2);
  public final static native int _frida_g_utf8_strlen(String jarg1, int jarg2);
  public final static native String _frida_g_utf8_substring(String jarg1, int jarg2, int jarg3);
  public final static native String _frida_g_utf8_strncpy(String jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_utf8_strchr(String jarg1, int jarg2, long jarg3);
  public final static native String _frida_g_utf8_strrchr(String jarg1, int jarg2, long jarg3);
  public final static native String _frida_g_utf8_strreverse(String jarg1, int jarg2);
  public final static native long _frida_g_utf8_to_utf16(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_utf8_to_ucs4(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_utf8_to_ucs4_fast(String jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_utf16_to_ucs4(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String _frida_g_utf16_to_utf8(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_ucs4_to_utf16(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native String _frida_g_ucs4_to_utf8(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_unichar_to_utf8(long jarg1, String jarg2);
  public final static native int _frida_g_utf8_validate(String jarg1, int jarg2, long jarg3);
  public final static native int _frida_g_utf8_validate_len(String jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_utf8_strup(String jarg1, int jarg2);
  public final static native String _frida_g_utf8_strdown(String jarg1, int jarg2);
  public final static native String _frida_g_utf8_casefold(String jarg1, int jarg2);
  public final static native int G_NORMALIZE_NFD_get();
  public final static native int G_NORMALIZE_NFC_get();
  public final static native int G_NORMALIZE_NFKD_get();
  public final static native int G_NORMALIZE_NFKC_get();
  public final static native String _frida_g_utf8_normalize(String jarg1, int jarg2, int jarg3);
  public final static native int _frida_g_utf8_collate(String jarg1, String jarg2);
  public final static native String _frida_g_utf8_collate_key(String jarg1, int jarg2);
  public final static native String _frida_g_utf8_collate_key_for_filename(String jarg1, int jarg2);
  public final static native String _frida_g_utf8_make_valid(String jarg1, int jarg2);
  public final static native void _GString_str_set(long jarg1, _GString jarg1_, String jarg2);
  public final static native String _GString_str_get(long jarg1, _GString jarg1_);
  public final static native void _GString_len_set(long jarg1, _GString jarg1_, long jarg2);
  public final static native long _GString_len_get(long jarg1, _GString jarg1_);
  public final static native void _GString_allocated_len_set(long jarg1, _GString jarg1_, long jarg2);
  public final static native long _GString_allocated_len_get(long jarg1, _GString jarg1_);
  public final static native long new__GString();
  public final static native void delete__GString(long jarg1);
  public final static native long _frida_g_string_new(String jarg1);
  public final static native long _frida_g_string_new_len(String jarg1, int jarg2);
  public final static native long _frida_g_string_sized_new(long jarg1);
  public final static native String _frida_g_string_free(long jarg1, _GString jarg1_, int jarg2);
  public final static native long _frida_g_string_free_to_bytes(long jarg1, _GString jarg1_);
  public final static native int _frida_g_string_equal(long jarg1, _GString jarg1_, long jarg2, _GString jarg2_);
  public final static native long _frida_g_string_hash(long jarg1, _GString jarg1_);
  public final static native long _frida_g_string_assign(long jarg1, _GString jarg1_, String jarg2);
  public final static native long _frida_g_string_truncate(long jarg1, _GString jarg1_, long jarg2);
  public final static native long _frida_g_string_set_size(long jarg1, _GString jarg1_, long jarg2);
  public final static native long _frida_g_string_insert_len(long jarg1, _GString jarg1_, int jarg2, String jarg3, int jarg4);
  public final static native long _frida_g_string_append(long jarg1, _GString jarg1_, String jarg2);
  public final static native long _frida_g_string_append_len(long jarg1, _GString jarg1_, String jarg2, int jarg3);
  public final static native long _frida_g_string_append_c(long jarg1, _GString jarg1_, char jarg2);
  public final static native long _frida_g_string_append_unichar(long jarg1, _GString jarg1_, long jarg2);
  public final static native long _frida_g_string_prepend(long jarg1, _GString jarg1_, String jarg2);
  public final static native long _frida_g_string_prepend_c(long jarg1, _GString jarg1_, char jarg2);
  public final static native long _frida_g_string_prepend_unichar(long jarg1, _GString jarg1_, long jarg2);
  public final static native long _frida_g_string_prepend_len(long jarg1, _GString jarg1_, String jarg2, int jarg3);
  public final static native long _frida_g_string_insert(long jarg1, _GString jarg1_, int jarg2, String jarg3);
  public final static native long _frida_g_string_insert_c(long jarg1, _GString jarg1_, int jarg2, char jarg3);
  public final static native long _frida_g_string_insert_unichar(long jarg1, _GString jarg1_, int jarg2, long jarg3);
  public final static native long _frida_g_string_overwrite(long jarg1, _GString jarg1_, long jarg2, String jarg3);
  public final static native long _frida_g_string_overwrite_len(long jarg1, _GString jarg1_, long jarg2, String jarg3, int jarg4);
  public final static native long _frida_g_string_erase(long jarg1, _GString jarg1_, int jarg2, int jarg3);
  public final static native long _frida_g_string_ascii_down(long jarg1, _GString jarg1_);
  public final static native long _frida_g_string_ascii_up(long jarg1, _GString jarg1_);
  public final static native void _frida_g_string_printf(long jarg1, _GString jarg1_, String jarg2);
  public final static native void _frida_g_string_append_printf(long jarg1, _GString jarg1_, String jarg2);
  public final static native long _frida_g_string_append_uri_escaped(long jarg1, _GString jarg1_, String jarg2, String jarg3, int jarg4);
  public final static native long g_string_append_c_inline(long jarg1, _GString jarg1_, char jarg2);
  public final static native long _frida_g_string_down(long jarg1, _GString jarg1_);
  public final static native long _frida_g_string_up(long jarg1, _GString jarg1_);
  public final static native int G_IO_FLAG_APPEND_get();
  public final static native int G_IO_FLAG_NONBLOCK_get();
  public final static native int G_IO_FLAG_IS_READABLE_get();
  public final static native int G_IO_FLAG_IS_WRITABLE_get();
  public final static native int G_IO_FLAG_IS_WRITEABLE_get();
  public final static native int G_IO_FLAG_IS_SEEKABLE_get();
  public final static native int G_IO_FLAG_MASK_get();
  public final static native int G_IO_FLAG_GET_MASK_get();
  public final static native int G_IO_FLAG_SET_MASK_get();
  public final static native void _GIOChannel_ref_count_set(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native int _GIOChannel_ref_count_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_funcs_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GIOFuncs jarg2_);
  public final static native long _GIOChannel_funcs_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_encoding_set(long jarg1, _GIOChannel jarg1_, String jarg2);
  public final static native String _GIOChannel_encoding_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_read_cd_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_read_cd_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_write_cd_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_write_cd_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_line_term_set(long jarg1, _GIOChannel jarg1_, String jarg2);
  public final static native String _GIOChannel_line_term_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_line_term_len_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_line_term_len_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_buf_size_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_buf_size_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_read_buf_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_);
  public final static native long _GIOChannel_read_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_encoded_read_buf_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_);
  public final static native long _GIOChannel_encoded_read_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_write_buf_set(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_);
  public final static native long _GIOChannel_write_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_partial_write_buf_set(long jarg1, _GIOChannel jarg1_, String jarg2);
  public final static native String _GIOChannel_partial_write_buf_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_use_buffer_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_use_buffer_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_do_encode_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_do_encode_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_close_on_unref_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_close_on_unref_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_is_readable_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_is_readable_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_is_writeable_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_is_writeable_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_is_seekable_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_is_seekable_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_close_converters_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_close_converters_get(long jarg1, _GIOChannel jarg1_);
  public final static native void _GIOChannel_reset_converters_set(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _GIOChannel_reset_converters_get(long jarg1, _GIOChannel jarg1_);
  public final static native long new__GIOChannel();
  public final static native void delete__GIOChannel(long jarg1);
  public final static native void _GIOFuncs_io_read_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_read_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_write_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_write_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_seek_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_seek_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_close_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_close_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_create_watch_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_create_watch_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_free_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_free_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_set_flags_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_set_flags_get(long jarg1, _GIOFuncs jarg1_);
  public final static native void _GIOFuncs_io_get_flags_set(long jarg1, _GIOFuncs jarg1_, long jarg2);
  public final static native long _GIOFuncs_io_get_flags_get(long jarg1, _GIOFuncs jarg1_);
  public final static native long new__GIOFuncs();
  public final static native void delete__GIOFuncs(long jarg1);
  public final static native void _frida_g_io_channel_init(long jarg1, _GIOChannel jarg1_);
  public final static native long _frida_g_io_channel_ref(long jarg1, _GIOChannel jarg1_);
  public final static native void _frida_g_io_channel_unref(long jarg1, _GIOChannel jarg1_);
  public final static native int _frida_g_io_channel_read(long jarg1, _GIOChannel jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_io_channel_write(long jarg1, _GIOChannel jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_io_channel_seek(long jarg1, _GIOChannel jarg1_, int jarg2, int jarg3);
  public final static native void _frida_g_io_channel_close(long jarg1, _GIOChannel jarg1_);
  public final static native int _frida_g_io_channel_shutdown(long jarg1, _GIOChannel jarg1_, int jarg2, long jarg3);
  public final static native long _frida_g_io_add_watch_full(long jarg1, _GIOChannel jarg1_, int jarg2, int jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_io_create_watch(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native long _frida_g_io_add_watch(long jarg1, _GIOChannel jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_io_channel_set_buffer_size(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native long _frida_g_io_channel_get_buffer_size(long jarg1, _GIOChannel jarg1_);
  public final static native int _frida_g_io_channel_get_buffer_condition(long jarg1, _GIOChannel jarg1_);
  public final static native int _frida_g_io_channel_set_flags(long jarg1, _GIOChannel jarg1_, int jarg2, long jarg3);
  public final static native int _frida_g_io_channel_get_flags(long jarg1, _GIOChannel jarg1_);
  public final static native void _frida_g_io_channel_set_line_term(long jarg1, _GIOChannel jarg1_, String jarg2, int jarg3);
  public final static native String _frida_g_io_channel_get_line_term(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native void _frida_g_io_channel_set_buffered(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native int _frida_g_io_channel_get_buffered(long jarg1, _GIOChannel jarg1_);
  public final static native int _frida_g_io_channel_set_encoding(long jarg1, _GIOChannel jarg1_, String jarg2, long jarg3);
  public final static native String _frida_g_io_channel_get_encoding(long jarg1, _GIOChannel jarg1_);
  public final static native void _frida_g_io_channel_set_close_on_unref(long jarg1, _GIOChannel jarg1_, int jarg2);
  public final static native int _frida_g_io_channel_get_close_on_unref(long jarg1, _GIOChannel jarg1_);
  public final static native int _frida_g_io_channel_flush(long jarg1, _GIOChannel jarg1_, long jarg2);
  public final static native int _frida_g_io_channel_read_line(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_io_channel_read_line_string(long jarg1, _GIOChannel jarg1_, long jarg2, _GString jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_io_channel_read_to_end(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_io_channel_read_chars(long jarg1, _GIOChannel jarg1_, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_io_channel_read_unichar(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_io_channel_write_chars(long jarg1, _GIOChannel jarg1_, String jarg2, int jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_io_channel_write_unichar(long jarg1, _GIOChannel jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_io_channel_seek_position(long jarg1, _GIOChannel jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_io_channel_new_file(String jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_io_channel_error_quark();
  public final static native int _frida_g_io_channel_error_from_errno(int jarg1);
  public final static native long _frida_g_io_channel_unix_new(int jarg1);
  public final static native int _frida_g_io_channel_unix_get_fd(long jarg1, _GIOChannel jarg1_);
  public final static native void _frida_g_io_watch_funcs_set(long jarg1, _GSourceFuncs jarg1_);
  public final static native long _frida_g_io_watch_funcs_get();
  public final static native long _frida_g_key_file_error_quark();
  public final static native int G_KEY_FILE_NONE_get();
  public final static native int G_KEY_FILE_KEEP_COMMENTS_get();
  public final static native int G_KEY_FILE_KEEP_TRANSLATIONS_get();
  public final static native long _frida_g_key_file_new();
  public final static native long _frida_g_key_file_ref(long jarg1);
  public final static native void _frida_g_key_file_unref(long jarg1);
  public final static native void _frida_g_key_file_free(long jarg1);
  public final static native void _frida_g_key_file_set_list_separator(long jarg1, char jarg2);
  public final static native int _frida_g_key_file_load_from_file(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_key_file_load_from_data(long jarg1, String jarg2, long jarg3, int jarg4, long jarg5);
  public final static native int _frida_g_key_file_load_from_bytes(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_key_file_load_from_dirs(long jarg1, String jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native int _frida_g_key_file_load_from_data_dirs(long jarg1, String jarg2, long jarg3, int jarg4, long jarg5);
  public final static native String _frida_g_key_file_to_data(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_key_file_save_to_file(long jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_key_file_get_start_group(long jarg1);
  public final static native long _frida_g_key_file_get_groups(long jarg1, long jarg2);
  public final static native long _frida_g_key_file_get_keys(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_key_file_has_group(long jarg1, String jarg2);
  public final static native int _frida_g_key_file_has_key(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native String _frida_g_key_file_get_value(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_key_file_set_value(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native String _frida_g_key_file_get_string(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_key_file_set_string(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native String _frida_g_key_file_get_locale_string(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5);
  public final static native String _frida_g_key_file_get_locale_for_key(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native void _frida_g_key_file_set_locale_string(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5);
  public final static native int _frida_g_key_file_get_boolean(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_key_file_set_boolean(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native int _frida_g_key_file_get_integer(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_key_file_set_integer(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native int _frida_g_key_file_get_int64(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_key_file_set_int64(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native long _frida_g_key_file_get_uint64(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_key_file_set_uint64(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native double _frida_g_key_file_get_double(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_key_file_set_double(long jarg1, String jarg2, String jarg3, double jarg4);
  public final static native long _frida_g_key_file_get_string_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_key_file_set_string_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_key_file_get_locale_string_list(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_key_file_set_locale_string_list(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_key_file_get_boolean_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_key_file_set_boolean_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_key_file_get_integer_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_key_file_set_double_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_key_file_get_double_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_key_file_set_integer_list(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_key_file_set_comment(long jarg1, String jarg2, String jarg3, String jarg4, long jarg5);
  public final static native String _frida_g_key_file_get_comment(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int _frida_g_key_file_remove_comment(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int _frida_g_key_file_remove_key(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native int _frida_g_key_file_remove_group(long jarg1, String jarg2, long jarg3);
  public final static native String G_KEY_FILE_DESKTOP_GROUP_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_TYPE_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_VERSION_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_NAME_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_GENERIC_NAME_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_NO_DISPLAY_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_COMMENT_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_ICON_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_HIDDEN_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_ONLY_SHOW_IN_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_NOT_SHOW_IN_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_TRY_EXEC_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_EXEC_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_PATH_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_TERMINAL_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_MIME_TYPE_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_CATEGORIES_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_STARTUP_NOTIFY_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_STARTUP_WM_CLASS_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_URL_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_DBUS_ACTIVATABLE_get();
  public final static native String G_KEY_FILE_DESKTOP_KEY_ACTIONS_get();
  public final static native String G_KEY_FILE_DESKTOP_TYPE_APPLICATION_get();
  public final static native String G_KEY_FILE_DESKTOP_TYPE_LINK_get();
  public final static native String G_KEY_FILE_DESKTOP_TYPE_DIRECTORY_get();
  public final static native long _frida_g_mapped_file_new(String jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_mapped_file_new_from_fd(int jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_mapped_file_get_length(long jarg1);
  public final static native String _frida_g_mapped_file_get_contents(long jarg1);
  public final static native long _frida_g_mapped_file_get_bytes(long jarg1);
  public final static native long _frida_g_mapped_file_ref(long jarg1);
  public final static native void _frida_g_mapped_file_unref(long jarg1);
  public final static native void _frida_g_mapped_file_free(long jarg1);
  public final static native long _frida_g_markup_error_quark();
  public final static native int G_MARKUP_DO_NOT_USE_THIS_UNSUPPORTED_FLAG_get();
  public final static native int G_MARKUP_TREAT_CDATA_AS_TEXT_get();
  public final static native int G_MARKUP_PREFIX_ERROR_POSITION_get();
  public final static native int G_MARKUP_IGNORE_QUALIFIED_get();
  public final static native void _GMarkupParser_start_element_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_start_element_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_end_element_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_end_element_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_text_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_text_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_passthrough_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_passthrough_get(long jarg1, _GMarkupParser jarg1_);
  public final static native void _GMarkupParser_error_set(long jarg1, _GMarkupParser jarg1_, long jarg2);
  public final static native long _GMarkupParser_error_get(long jarg1, _GMarkupParser jarg1_);
  public final static native long new__GMarkupParser();
  public final static native void delete__GMarkupParser(long jarg1);
  public final static native long _frida_g_markup_parse_context_new(long jarg1, _GMarkupParser jarg1_, int jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_markup_parse_context_ref(long jarg1);
  public final static native void _frida_g_markup_parse_context_unref(long jarg1);
  public final static native void _frida_g_markup_parse_context_free(long jarg1);
  public final static native int _frida_g_markup_parse_context_parse(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native void _frida_g_markup_parse_context_push(long jarg1, long jarg2, _GMarkupParser jarg2_, long jarg3);
  public final static native long _frida_g_markup_parse_context_pop(long jarg1);
  public final static native int _frida_g_markup_parse_context_end_parse(long jarg1, long jarg2);
  public final static native String _frida_g_markup_parse_context_get_element(long jarg1);
  public final static native long _frida_g_markup_parse_context_get_element_stack(long jarg1);
  public final static native void _frida_g_markup_parse_context_get_position(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_markup_parse_context_get_user_data(long jarg1);
  public final static native String _frida_g_markup_escape_text(String jarg1, int jarg2);
  public final static native String _frida_g_markup_printf_escaped(String jarg1);
  public final static native int G_MARKUP_COLLECT_OPTIONAL_get();
  public final static native int _frida_g_markup_collect_attributes(String jarg1, long jarg2, long jarg3, long jarg4, int jarg5, String jarg6);
  public final static native int _frida_g_variant_type_string_is_valid(String jarg1);
  public final static native int _frida_g_variant_type_string_scan(String jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_variant_type_free(long jarg1);
  public final static native long _frida_g_variant_type_copy(long jarg1);
  public final static native long _frida_g_variant_type_new(String jarg1);
  public final static native long _frida_g_variant_type_get_string_length(long jarg1);
  public final static native String _frida_g_variant_type_peek_string(long jarg1);
  public final static native String _frida_g_variant_type_dup_string(long jarg1);
  public final static native int _frida_g_variant_type_is_definite(long jarg1);
  public final static native int _frida_g_variant_type_is_container(long jarg1);
  public final static native int _frida_g_variant_type_is_basic(long jarg1);
  public final static native int _frida_g_variant_type_is_maybe(long jarg1);
  public final static native int _frida_g_variant_type_is_array(long jarg1);
  public final static native int _frida_g_variant_type_is_tuple(long jarg1);
  public final static native int _frida_g_variant_type_is_dict_entry(long jarg1);
  public final static native int _frida_g_variant_type_is_variant(long jarg1);
  public final static native long _frida_g_variant_type_hash(long jarg1);
  public final static native int _frida_g_variant_type_equal(long jarg1, long jarg2);
  public final static native int _frida_g_variant_type_is_subtype_of(long jarg1, long jarg2);
  public final static native long _frida_g_variant_type_element(long jarg1);
  public final static native long _frida_g_variant_type_first(long jarg1);
  public final static native long _frida_g_variant_type_next(long jarg1);
  public final static native long _frida_g_variant_type_n_items(long jarg1);
  public final static native long _frida_g_variant_type_key(long jarg1);
  public final static native long _frida_g_variant_type_value(long jarg1);
  public final static native long _frida_g_variant_type_new_array(long jarg1);
  public final static native long _frida_g_variant_type_new_maybe(long jarg1);
  public final static native long _frida_g_variant_type_new_tuple(long jarg1, int jarg2);
  public final static native long _frida_g_variant_type_new_dict_entry(long jarg1, long jarg2);
  public final static native long _frida_g_variant_type_checked_(String jarg1);
  public final static native long _frida_g_variant_type_string_get_depth_(String jarg1);
  public final static native int G_VARIANT_CLASS_BOOLEAN_get();
  public final static native int G_VARIANT_CLASS_BYTE_get();
  public final static native int G_VARIANT_CLASS_INT16_get();
  public final static native int G_VARIANT_CLASS_UINT16_get();
  public final static native int G_VARIANT_CLASS_INT32_get();
  public final static native int G_VARIANT_CLASS_UINT32_get();
  public final static native int G_VARIANT_CLASS_INT64_get();
  public final static native int G_VARIANT_CLASS_UINT64_get();
  public final static native int G_VARIANT_CLASS_HANDLE_get();
  public final static native int G_VARIANT_CLASS_DOUBLE_get();
  public final static native int G_VARIANT_CLASS_STRING_get();
  public final static native int G_VARIANT_CLASS_OBJECT_PATH_get();
  public final static native int G_VARIANT_CLASS_SIGNATURE_get();
  public final static native int G_VARIANT_CLASS_VARIANT_get();
  public final static native int G_VARIANT_CLASS_MAYBE_get();
  public final static native int G_VARIANT_CLASS_ARRAY_get();
  public final static native int G_VARIANT_CLASS_TUPLE_get();
  public final static native int G_VARIANT_CLASS_DICT_ENTRY_get();
  public final static native void _frida_g_variant_unref(long jarg1);
  public final static native long _frida_g_variant_ref(long jarg1);
  public final static native long _frida_g_variant_ref_sink(long jarg1);
  public final static native int _frida_g_variant_is_floating(long jarg1);
  public final static native long _frida_g_variant_take_ref(long jarg1);
  public final static native long _frida_g_variant_get_type(long jarg1);
  public final static native String _frida_g_variant_get_type_string(long jarg1);
  public final static native int _frida_g_variant_is_of_type(long jarg1, long jarg2);
  public final static native int _frida_g_variant_is_container(long jarg1);
  public final static native int _frida_g_variant_classify(long jarg1);
  public final static native long _frida_g_variant_new_boolean(int jarg1);
  public final static native long _frida_g_variant_new_byte(short jarg1);
  public final static native long _frida_g_variant_new_int16(short jarg1);
  public final static native long _frida_g_variant_new_uint16(int jarg1);
  public final static native long _frida_g_variant_new_int32(int jarg1);
  public final static native long _frida_g_variant_new_uint32(long jarg1);
  public final static native long _frida_g_variant_new_int64(int jarg1);
  public final static native long _frida_g_variant_new_uint64(long jarg1);
  public final static native long _frida_g_variant_new_handle(int jarg1);
  public final static native long _frida_g_variant_new_double(double jarg1);
  public final static native long _frida_g_variant_new_string(String jarg1);
  public final static native long _frida_g_variant_new_take_string(String jarg1);
  public final static native long _frida_g_variant_new_printf(String jarg1);
  public final static native long _frida_g_variant_new_object_path(String jarg1);
  public final static native int _frida_g_variant_is_object_path(String jarg1);
  public final static native long _frida_g_variant_new_signature(String jarg1);
  public final static native int _frida_g_variant_is_signature(String jarg1);
  public final static native long _frida_g_variant_new_variant(long jarg1);
  public final static native long _frida_g_variant_new_strv(long jarg1, int jarg2);
  public final static native long _frida_g_variant_new_objv(long jarg1, int jarg2);
  public final static native long _frida_g_variant_new_bytestring(String jarg1);
  public final static native long _frida_g_variant_new_bytestring_array(long jarg1, int jarg2);
  public final static native long _frida_g_variant_new_fixed_array(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_variant_get_boolean(long jarg1);
  public final static native short _frida_g_variant_get_byte(long jarg1);
  public final static native short _frida_g_variant_get_int16(long jarg1);
  public final static native int _frida_g_variant_get_uint16(long jarg1);
  public final static native int _frida_g_variant_get_int32(long jarg1);
  public final static native long _frida_g_variant_get_uint32(long jarg1);
  public final static native int _frida_g_variant_get_int64(long jarg1);
  public final static native long _frida_g_variant_get_uint64(long jarg1);
  public final static native int _frida_g_variant_get_handle(long jarg1);
  public final static native double _frida_g_variant_get_double(long jarg1);
  public final static native long _frida_g_variant_get_variant(long jarg1);
  public final static native String _frida_g_variant_get_string(long jarg1, long jarg2);
  public final static native String _frida_g_variant_dup_string(long jarg1, long jarg2);
  public final static native long _frida_g_variant_get_strv(long jarg1, long jarg2);
  public final static native long _frida_g_variant_dup_strv(long jarg1, long jarg2);
  public final static native long _frida_g_variant_get_objv(long jarg1, long jarg2);
  public final static native long _frida_g_variant_dup_objv(long jarg1, long jarg2);
  public final static native String _frida_g_variant_get_bytestring(long jarg1);
  public final static native String _frida_g_variant_dup_bytestring(long jarg1, long jarg2);
  public final static native long _frida_g_variant_get_bytestring_array(long jarg1, long jarg2);
  public final static native long _frida_g_variant_dup_bytestring_array(long jarg1, long jarg2);
  public final static native long _frida_g_variant_new_maybe(long jarg1, long jarg2);
  public final static native long _frida_g_variant_new_array(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_variant_new_tuple(long jarg1, long jarg2);
  public final static native long _frida_g_variant_new_dict_entry(long jarg1, long jarg2);
  public final static native long _frida_g_variant_get_maybe(long jarg1);
  public final static native long _frida_g_variant_n_children(long jarg1);
  public final static native void _frida_g_variant_get_child(long jarg1, long jarg2, String jarg3);
  public final static native long _frida_g_variant_get_child_value(long jarg1, long jarg2);
  public final static native int _frida_g_variant_lookup(long jarg1, String jarg2, String jarg3);
  public final static native long _frida_g_variant_lookup_value(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_variant_get_fixed_array(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_variant_get_size(long jarg1);
  public final static native long _frida_g_variant_get_data(long jarg1);
  public final static native long _frida_g_variant_get_data_as_bytes(long jarg1);
  public final static native void _frida_g_variant_store(long jarg1, long jarg2);
  public final static native String _frida_g_variant_print(long jarg1, int jarg2);
  public final static native long _frida_g_variant_print_string(long jarg1, long jarg2, _GString jarg2_, int jarg3);
  public final static native long _frida_g_variant_hash(long jarg1);
  public final static native int _frida_g_variant_equal(long jarg1, long jarg2);
  public final static native long _frida_g_variant_get_normal_form(long jarg1);
  public final static native int _frida_g_variant_is_normal_form(long jarg1);
  public final static native long _frida_g_variant_byteswap(long jarg1);
  public final static native long _frida_g_variant_new_from_bytes(long jarg1, long jarg2, int jarg3);
  public final static native long _frida_g_variant_new_from_data(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6);
  public final static native void _GVariantIter_x_set(long jarg1, _GVariantIter jarg1_, long jarg2);
  public final static native long _GVariantIter_x_get(long jarg1, _GVariantIter jarg1_);
  public final static native long new__GVariantIter();
  public final static native void delete__GVariantIter(long jarg1);
  public final static native long _frida_g_variant_iter_new(long jarg1);
  public final static native long _frida_g_variant_iter_init(long jarg1, _GVariantIter jarg1_, long jarg2);
  public final static native long _frida_g_variant_iter_copy(long jarg1, _GVariantIter jarg1_);
  public final static native long _frida_g_variant_iter_n_children(long jarg1, _GVariantIter jarg1_);
  public final static native void _frida_g_variant_iter_free(long jarg1, _GVariantIter jarg1_);
  public final static native long _frida_g_variant_iter_next_value(long jarg1, _GVariantIter jarg1_);
  public final static native int _frida_g_variant_iter_next(long jarg1, _GVariantIter jarg1_, String jarg2);
  public final static native int _frida_g_variant_iter_loop(long jarg1, _GVariantIter jarg1_, String jarg2);
  public final static native long new__GVariantBuilder();
  public final static native void delete__GVariantBuilder(long jarg1);
  public final static native long _frida_g_variant_parser_get_error_quark();
  public final static native long _frida_g_variant_parse_error_quark();
  public final static native long _frida_g_variant_builder_new(long jarg1);
  public final static native void _frida_g_variant_builder_unref(long jarg1, _GVariantBuilder jarg1_);
  public final static native long _frida_g_variant_builder_ref(long jarg1, _GVariantBuilder jarg1_);
  public final static native void _frida_g_variant_builder_init(long jarg1, _GVariantBuilder jarg1_, long jarg2);
  public final static native long _frida_g_variant_builder_end(long jarg1, _GVariantBuilder jarg1_);
  public final static native void _frida_g_variant_builder_clear(long jarg1, _GVariantBuilder jarg1_);
  public final static native void _frida_g_variant_builder_open(long jarg1, _GVariantBuilder jarg1_, long jarg2);
  public final static native void _frida_g_variant_builder_close(long jarg1, _GVariantBuilder jarg1_);
  public final static native void _frida_g_variant_builder_add_value(long jarg1, _GVariantBuilder jarg1_, long jarg2);
  public final static native void _frida_g_variant_builder_add(long jarg1, _GVariantBuilder jarg1_, String jarg2);
  public final static native void _frida_g_variant_builder_add_parsed(long jarg1, _GVariantBuilder jarg1_, String jarg2);
  public final static native long _frida_g_variant_new(String jarg1);
  public final static native void _frida_g_variant_get(long jarg1, String jarg2);
  public final static native long _frida_g_variant_new_va(String jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_variant_get_va(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_variant_check_format_string(long jarg1, String jarg2, int jarg3);
  public final static native long _frida_g_variant_parse(long jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_variant_new_parsed(String jarg1);
  public final static native long _frida_g_variant_new_parsed_va(String jarg1, long jarg2);
  public final static native String _frida_g_variant_parse_error_print_context(long jarg1, _GError jarg1_, String jarg2);
  public final static native int _frida_g_variant_compare(long jarg1, long jarg2);
  public final static native long new__GVariantDict();
  public final static native void delete__GVariantDict(long jarg1);
  public final static native long _frida_g_variant_dict_new(long jarg1);
  public final static native void _frida_g_variant_dict_init(long jarg1, _GVariantDict jarg1_, long jarg2);
  public final static native int _frida_g_variant_dict_lookup(long jarg1, _GVariantDict jarg1_, String jarg2, String jarg3);
  public final static native long _frida_g_variant_dict_lookup_value(long jarg1, _GVariantDict jarg1_, String jarg2, long jarg3);
  public final static native int _frida_g_variant_dict_contains(long jarg1, _GVariantDict jarg1_, String jarg2);
  public final static native void _frida_g_variant_dict_insert(long jarg1, _GVariantDict jarg1_, String jarg2, String jarg3);
  public final static native void _frida_g_variant_dict_insert_value(long jarg1, _GVariantDict jarg1_, String jarg2, long jarg3);
  public final static native int _frida_g_variant_dict_remove(long jarg1, _GVariantDict jarg1_, String jarg2);
  public final static native void _frida_g_variant_dict_clear(long jarg1, _GVariantDict jarg1_);
  public final static native long _frida_g_variant_dict_end(long jarg1, _GVariantDict jarg1_);
  public final static native long _frida_g_variant_dict_ref(long jarg1, _GVariantDict jarg1_);
  public final static native void _frida_g_variant_dict_unref(long jarg1, _GVariantDict jarg1_);
  public final static native int G_LOG_LEVEL_USER_SHIFT_get();
  public final static native int G_LOG_FLAG_RECURSION_get();
  public final static native int G_LOG_FLAG_FATAL_get();
  public final static native int G_LOG_LEVEL_ERROR_get();
  public final static native int G_LOG_LEVEL_CRITICAL_get();
  public final static native int G_LOG_LEVEL_WARNING_get();
  public final static native int G_LOG_LEVEL_MESSAGE_get();
  public final static native int G_LOG_LEVEL_INFO_get();
  public final static native int G_LOG_LEVEL_DEBUG_get();
  public final static native int G_LOG_LEVEL_MASK_get();
  public final static native long _frida_g_log_set_handler(String jarg1, int jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_log_set_handler_full(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_log_remove_handler(String jarg1, long jarg2);
  public final static native void _frida_g_log_default_handler(String jarg1, int jarg2, String jarg3, long jarg4);
  public final static native long _frida_g_log_set_default_handler(long jarg1, long jarg2);
  public final static native void _frida_g_log(String jarg1, int jarg2, String jarg3);
  public final static native int _frida_g_log_set_fatal_mask(String jarg1, int jarg2);
  public final static native int _frida_g_log_set_always_fatal(int jarg1);
  public final static native int G_LOG_WRITER_HANDLED_get();
  public final static native int G_LOG_WRITER_UNHANDLED_get();
  public final static native void _GLogField_key_set(long jarg1, _GLogField jarg1_, String jarg2);
  public final static native String _GLogField_key_get(long jarg1, _GLogField jarg1_);
  public final static native void _GLogField_value_set(long jarg1, _GLogField jarg1_, long jarg2);
  public final static native long _GLogField_value_get(long jarg1, _GLogField jarg1_);
  public final static native void _GLogField_length_set(long jarg1, _GLogField jarg1_, int jarg2);
  public final static native int _GLogField_length_get(long jarg1, _GLogField jarg1_);
  public final static native long new__GLogField();
  public final static native void delete__GLogField(long jarg1);
  public final static native void _frida_g_log_structured(String jarg1, int jarg2);
  public final static native void _frida_g_log_structured_array(int jarg1, long jarg2, _GLogField jarg2_, long jarg3);
  public final static native void _frida_g_log_variant(String jarg1, int jarg2, long jarg3);
  public final static native void _frida_g_log_set_writer_func(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_log_writer_supports_color(int jarg1);
  public final static native int _frida_g_log_writer_is_journald(int jarg1);
  public final static native String _frida_g_log_writer_format_fields(int jarg1, long jarg2, _GLogField jarg2_, long jarg3, int jarg4);
  public final static native int _frida_g_log_writer_journald(int jarg1, long jarg2, _GLogField jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_log_writer_standard_streams(int jarg1, long jarg2, _GLogField jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_log_writer_default(int jarg1, long jarg2, _GLogField jarg2_, long jarg3, long jarg4);
  public final static native void _g_log_fallback_handler(String jarg1, int jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_return_if_fail_warning(String jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_warn_message(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void _frida_g_assert_warning(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void _frida_g_log_structured_standard(String jarg1, int jarg2, String jarg3, String jarg4, String jarg5, String jarg6);
  public final static native void _frida_g_print(String jarg1);
  public final static native long _frida_g_set_print_handler(long jarg1);
  public final static native void _frida_g_printerr(String jarg1);
  public final static native long _frida_g_set_printerr_handler(long jarg1);
  public final static native int G_OPTION_FLAG_NONE_get();
  public final static native int G_OPTION_FLAG_HIDDEN_get();
  public final static native int G_OPTION_FLAG_IN_MAIN_get();
  public final static native int G_OPTION_FLAG_REVERSE_get();
  public final static native int G_OPTION_FLAG_NO_ARG_get();
  public final static native int G_OPTION_FLAG_FILENAME_get();
  public final static native int G_OPTION_FLAG_OPTIONAL_ARG_get();
  public final static native int G_OPTION_FLAG_NOALIAS_get();
  public final static native long _frida_g_option_error_quark();
  public final static native void _GOptionEntry_long_name_set(long jarg1, _GOptionEntry jarg1_, String jarg2);
  public final static native String _GOptionEntry_long_name_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_short_name_set(long jarg1, _GOptionEntry jarg1_, char jarg2);
  public final static native char _GOptionEntry_short_name_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_flags_set(long jarg1, _GOptionEntry jarg1_, int jarg2);
  public final static native int _GOptionEntry_flags_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_arg_set(long jarg1, _GOptionEntry jarg1_, int jarg2);
  public final static native int _GOptionEntry_arg_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_arg_data_set(long jarg1, _GOptionEntry jarg1_, long jarg2);
  public final static native long _GOptionEntry_arg_data_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_description_set(long jarg1, _GOptionEntry jarg1_, String jarg2);
  public final static native String _GOptionEntry_description_get(long jarg1, _GOptionEntry jarg1_);
  public final static native void _GOptionEntry_arg_description_set(long jarg1, _GOptionEntry jarg1_, String jarg2);
  public final static native String _GOptionEntry_arg_description_get(long jarg1, _GOptionEntry jarg1_);
  public final static native long new__GOptionEntry();
  public final static native void delete__GOptionEntry(long jarg1);
  public final static native String G_OPTION_REMAINING_get();
  public final static native long _frida_g_option_context_new(String jarg1);
  public final static native void _frida_g_option_context_set_summary(long jarg1, String jarg2);
  public final static native String _frida_g_option_context_get_summary(long jarg1);
  public final static native void _frida_g_option_context_set_description(long jarg1, String jarg2);
  public final static native String _frida_g_option_context_get_description(long jarg1);
  public final static native void _frida_g_option_context_free(long jarg1);
  public final static native void _frida_g_option_context_set_help_enabled(long jarg1, int jarg2);
  public final static native int _frida_g_option_context_get_help_enabled(long jarg1);
  public final static native void _frida_g_option_context_set_ignore_unknown_options(long jarg1, int jarg2);
  public final static native int _frida_g_option_context_get_ignore_unknown_options(long jarg1);
  public final static native void _frida_g_option_context_set_strict_posix(long jarg1, int jarg2);
  public final static native int _frida_g_option_context_get_strict_posix(long jarg1);
  public final static native void _frida_g_option_context_add_main_entries(long jarg1, long jarg2, _GOptionEntry jarg2_, String jarg3);
  public final static native int _frida_g_option_context_parse(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_option_context_parse_strv(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_option_context_set_translate_func(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_option_context_set_translation_domain(long jarg1, String jarg2);
  public final static native void _frida_g_option_context_add_group(long jarg1, long jarg2);
  public final static native void _frida_g_option_context_set_main_group(long jarg1, long jarg2);
  public final static native long _frida_g_option_context_get_main_group(long jarg1);
  public final static native String _frida_g_option_context_get_help(long jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_option_group_new(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_option_group_set_parse_hooks(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_option_group_set_error_hook(long jarg1, long jarg2);
  public final static native void _frida_g_option_group_free(long jarg1);
  public final static native long _frida_g_option_group_ref(long jarg1);
  public final static native void _frida_g_option_group_unref(long jarg1);
  public final static native void _frida_g_option_group_add_entries(long jarg1, long jarg2, _GOptionEntry jarg2_);
  public final static native void _frida_g_option_group_set_translate_func(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_option_group_set_translation_domain(long jarg1, String jarg2);
  public final static native long _frida_g_pattern_spec_new(String jarg1);
  public final static native void _frida_g_pattern_spec_free(long jarg1);
  public final static native int _frida_g_pattern_spec_equal(long jarg1, long jarg2);
  public final static native int _frida_g_pattern_match(long jarg1, long jarg2, String jarg3, String jarg4);
  public final static native int _frida_g_pattern_match_string(long jarg1, String jarg2);
  public final static native int _frida_g_pattern_match_simple(String jarg1, String jarg2);
  public final static native void _GFDCallbacks_on_fd_opened_set(long jarg1, _GFDCallbacks jarg1_, long jarg2);
  public final static native long _GFDCallbacks_on_fd_opened_get(long jarg1, _GFDCallbacks jarg1_);
  public final static native void _GFDCallbacks_on_fd_closed_set(long jarg1, _GFDCallbacks jarg1_, long jarg2);
  public final static native long _GFDCallbacks_on_fd_closed_get(long jarg1, _GFDCallbacks jarg1_);
  public final static native long new__GFDCallbacks();
  public final static native void delete__GFDCallbacks(long jarg1);
  public final static native void _frida_glib_fd_callbacks_set(long jarg1, _GFDCallbacks jarg1_);
  public final static native long _frida_glib_fd_callbacks_get();
  public final static native void _frida_g_platform_audit_set_fd_callbacks(long jarg1, _GFDCallbacks jarg1_);
  public final static native long _frida_g_spaced_primes_closest(long jarg1);
  public final static native void _frida_g_qsort_with_data(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _GQueue_head_set(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GQueue_head_get(long jarg1, _GQueue jarg1_);
  public final static native void _GQueue_tail_set(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GQueue_tail_get(long jarg1, _GQueue jarg1_);
  public final static native void _GQueue_length_set(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long _GQueue_length_get(long jarg1, _GQueue jarg1_);
  public final static native long new__GQueue();
  public final static native void delete__GQueue(long jarg1);
  public final static native long _frida_g_queue_new();
  public final static native void _frida_g_queue_free(long jarg1, _GQueue jarg1_);
  public final static native void _frida_g_queue_free_full(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void _frida_g_queue_init(long jarg1, _GQueue jarg1_);
  public final static native void _frida_g_queue_clear(long jarg1, _GQueue jarg1_);
  public final static native int _frida_g_queue_is_empty(long jarg1, _GQueue jarg1_);
  public final static native void _frida_g_queue_clear_full(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long _frida_g_queue_get_length(long jarg1, _GQueue jarg1_);
  public final static native void _frida_g_queue_reverse(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_copy(long jarg1, _GQueue jarg1_);
  public final static native void _frida_g_queue_foreach(long jarg1, _GQueue jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_queue_find(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long _frida_g_queue_find_custom(long jarg1, _GQueue jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_queue_sort(long jarg1, _GQueue jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_queue_push_head(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void _frida_g_queue_push_tail(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void _frida_g_queue_push_nth(long jarg1, _GQueue jarg1_, long jarg2, int jarg3);
  public final static native long _frida_g_queue_pop_head(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_pop_tail(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_pop_nth(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long _frida_g_queue_peek_head(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_peek_tail(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_peek_nth(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native int _frida_g_queue_index(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native int _frida_g_queue_remove(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long _frida_g_queue_remove_all(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native void _frida_g_queue_insert_before(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_, long jarg3);
  public final static native void _frida_g_queue_insert_after(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_, long jarg3);
  public final static native void _frida_g_queue_insert_sorted(long jarg1, _GQueue jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_queue_push_head_link(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void _frida_g_queue_push_tail_link(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void _frida_g_queue_push_nth_link(long jarg1, _GQueue jarg1_, int jarg2, long jarg3, _GList jarg3_);
  public final static native long _frida_g_queue_pop_head_link(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_pop_tail_link(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_pop_nth_link(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native long _frida_g_queue_peek_head_link(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_peek_tail_link(long jarg1, _GQueue jarg1_);
  public final static native long _frida_g_queue_peek_nth_link(long jarg1, _GQueue jarg1_, long jarg2);
  public final static native int _frida_g_queue_link_index(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void _frida_g_queue_unlink(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native void _frida_g_queue_delete_link(long jarg1, _GQueue jarg1_, long jarg2, _GList jarg2_);
  public final static native long _frida_g_rand_new_with_seed(long jarg1);
  public final static native long _frida_g_rand_new_with_seed_array(long jarg1, long jarg2);
  public final static native long _frida_g_rand_new();
  public final static native void _frida_g_rand_free(long jarg1);
  public final static native long _frida_g_rand_copy(long jarg1);
  public final static native void _frida_g_rand_set_seed(long jarg1, long jarg2);
  public final static native void _frida_g_rand_set_seed_array(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_rand_int(long jarg1);
  public final static native int _frida_g_rand_int_range(long jarg1, int jarg2, int jarg3);
  public final static native double _frida_g_rand_double(long jarg1);
  public final static native double _frida_g_rand_double_range(long jarg1, double jarg2, double jarg3);
  public final static native void _frida_g_random_set_seed(long jarg1);
  public final static native long _frida_g_random_int();
  public final static native int _frida_g_random_int_range(int jarg1, int jarg2);
  public final static native double _frida_g_random_double();
  public final static native double _frida_g_random_double_range(double jarg1, double jarg2);
  public final static native long _frida_g_rc_box_alloc(long jarg1);
  public final static native long _frida_g_rc_box_alloc0(long jarg1);
  public final static native long _frida_g_rc_box_dup(long jarg1, long jarg2);
  public final static native long _frida_g_rc_box_acquire(long jarg1);
  public final static native void _frida_g_rc_box_release(long jarg1);
  public final static native void _frida_g_rc_box_release_full(long jarg1, long jarg2);
  public final static native long _frida_g_rc_box_get_size(long jarg1);
  public final static native long _frida_g_atomic_rc_box_alloc(long jarg1);
  public final static native long _frida_g_atomic_rc_box_alloc0(long jarg1);
  public final static native long _frida_g_atomic_rc_box_dup(long jarg1, long jarg2);
  public final static native long _frida_g_atomic_rc_box_acquire(long jarg1);
  public final static native void _frida_g_atomic_rc_box_release(long jarg1);
  public final static native void _frida_g_atomic_rc_box_release_full(long jarg1, long jarg2);
  public final static native long _frida_g_atomic_rc_box_get_size(long jarg1);
  public final static native void _frida_g_ref_count_init(long jarg1);
  public final static native void _frida_g_ref_count_inc(long jarg1);
  public final static native int _frida_g_ref_count_dec(long jarg1);
  public final static native int _frida_g_ref_count_compare(long jarg1, int jarg2);
  public final static native void _frida_g_atomic_ref_count_init(long jarg1);
  public final static native void _frida_g_atomic_ref_count_inc(long jarg1);
  public final static native int _frida_g_atomic_ref_count_dec(long jarg1);
  public final static native int _frida_g_atomic_ref_count_compare(long jarg1, int jarg2);
  public final static native String _frida_g_ref_string_new(String jarg1);
  public final static native String _frida_g_ref_string_new_len(String jarg1, int jarg2);
  public final static native String _frida_g_ref_string_new_intern(String jarg1);
  public final static native String _frida_g_ref_string_acquire(String jarg1);
  public final static native void _frida_g_ref_string_release(String jarg1);
  public final static native long _frida_g_ref_string_length(String jarg1);
  public final static native int G_REGEX_ERROR_STRAY_BACKSLASH_get();
  public final static native int G_REGEX_ERROR_MISSING_CONTROL_CHAR_get();
  public final static native int G_REGEX_ERROR_UNRECOGNIZED_ESCAPE_get();
  public final static native int G_REGEX_ERROR_QUANTIFIERS_OUT_OF_ORDER_get();
  public final static native int G_REGEX_ERROR_QUANTIFIER_TOO_BIG_get();
  public final static native int G_REGEX_ERROR_UNTERMINATED_CHARACTER_CLASS_get();
  public final static native int G_REGEX_ERROR_INVALID_ESCAPE_IN_CHARACTER_CLASS_get();
  public final static native int G_REGEX_ERROR_RANGE_OUT_OF_ORDER_get();
  public final static native int G_REGEX_ERROR_NOTHING_TO_REPEAT_get();
  public final static native int G_REGEX_ERROR_UNRECOGNIZED_CHARACTER_get();
  public final static native int G_REGEX_ERROR_POSIX_NAMED_CLASS_OUTSIDE_CLASS_get();
  public final static native int G_REGEX_ERROR_UNMATCHED_PARENTHESIS_get();
  public final static native int G_REGEX_ERROR_INEXISTENT_SUBPATTERN_REFERENCE_get();
  public final static native int G_REGEX_ERROR_UNTERMINATED_COMMENT_get();
  public final static native int G_REGEX_ERROR_EXPRESSION_TOO_LARGE_get();
  public final static native int G_REGEX_ERROR_MEMORY_ERROR_get();
  public final static native int G_REGEX_ERROR_VARIABLE_LENGTH_LOOKBEHIND_get();
  public final static native int G_REGEX_ERROR_MALFORMED_CONDITION_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_CONDITIONAL_BRANCHES_get();
  public final static native int G_REGEX_ERROR_ASSERTION_EXPECTED_get();
  public final static native int G_REGEX_ERROR_UNKNOWN_POSIX_CLASS_NAME_get();
  public final static native int G_REGEX_ERROR_POSIX_COLLATING_ELEMENTS_NOT_SUPPORTED_get();
  public final static native int G_REGEX_ERROR_HEX_CODE_TOO_LARGE_get();
  public final static native int G_REGEX_ERROR_INVALID_CONDITION_get();
  public final static native int G_REGEX_ERROR_SINGLE_BYTE_MATCH_IN_LOOKBEHIND_get();
  public final static native int G_REGEX_ERROR_INFINITE_LOOP_get();
  public final static native int G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_TERMINATOR_get();
  public final static native int G_REGEX_ERROR_DUPLICATE_SUBPATTERN_NAME_get();
  public final static native int G_REGEX_ERROR_MALFORMED_PROPERTY_get();
  public final static native int G_REGEX_ERROR_UNKNOWN_PROPERTY_get();
  public final static native int G_REGEX_ERROR_SUBPATTERN_NAME_TOO_LONG_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_SUBPATTERNS_get();
  public final static native int G_REGEX_ERROR_INVALID_OCTAL_VALUE_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_BRANCHES_IN_DEFINE_get();
  public final static native int G_REGEX_ERROR_DEFINE_REPETION_get();
  public final static native int G_REGEX_ERROR_INCONSISTENT_NEWLINE_OPTIONS_get();
  public final static native int G_REGEX_ERROR_MISSING_BACK_REFERENCE_get();
  public final static native int G_REGEX_ERROR_INVALID_RELATIVE_REFERENCE_get();
  public final static native int G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_FORBIDDEN_get();
  public final static native int G_REGEX_ERROR_UNKNOWN_BACKTRACKING_CONTROL_VERB_get();
  public final static native int G_REGEX_ERROR_NUMBER_TOO_BIG_get();
  public final static native int G_REGEX_ERROR_MISSING_SUBPATTERN_NAME_get();
  public final static native int G_REGEX_ERROR_MISSING_DIGIT_get();
  public final static native int G_REGEX_ERROR_INVALID_DATA_CHARACTER_get();
  public final static native int G_REGEX_ERROR_EXTRA_SUBPATTERN_NAME_get();
  public final static native int G_REGEX_ERROR_BACKTRACKING_CONTROL_VERB_ARGUMENT_REQUIRED_get();
  public final static native int G_REGEX_ERROR_INVALID_CONTROL_CHAR_get();
  public final static native int G_REGEX_ERROR_MISSING_NAME_get();
  public final static native int G_REGEX_ERROR_NOT_SUPPORTED_IN_CLASS_get();
  public final static native int G_REGEX_ERROR_TOO_MANY_FORWARD_REFERENCES_get();
  public final static native int G_REGEX_ERROR_NAME_TOO_LONG_get();
  public final static native int G_REGEX_ERROR_CHARACTER_VALUE_TOO_LARGE_get();
  public final static native long _frida_g_regex_error_quark();
  public final static native int G_REGEX_CASELESS_get();
  public final static native int G_REGEX_MULTILINE_get();
  public final static native int G_REGEX_DOTALL_get();
  public final static native int G_REGEX_EXTENDED_get();
  public final static native int G_REGEX_ANCHORED_get();
  public final static native int G_REGEX_DOLLAR_ENDONLY_get();
  public final static native int G_REGEX_UNGREEDY_get();
  public final static native int G_REGEX_RAW_get();
  public final static native int G_REGEX_NO_AUTO_CAPTURE_get();
  public final static native int G_REGEX_OPTIMIZE_get();
  public final static native int G_REGEX_FIRSTLINE_get();
  public final static native int G_REGEX_DUPNAMES_get();
  public final static native int G_REGEX_NEWLINE_CR_get();
  public final static native int G_REGEX_NEWLINE_LF_get();
  public final static native int G_REGEX_NEWLINE_CRLF_get();
  public final static native int G_REGEX_NEWLINE_ANYCRLF_get();
  public final static native int G_REGEX_BSR_ANYCRLF_get();
  public final static native int G_REGEX_JAVASCRIPT_COMPAT_get();
  public final static native int G_REGEX_MATCH_ANCHORED_get();
  public final static native int G_REGEX_MATCH_NOTBOL_get();
  public final static native int G_REGEX_MATCH_NOTEOL_get();
  public final static native int G_REGEX_MATCH_NOTEMPTY_get();
  public final static native int G_REGEX_MATCH_PARTIAL_get();
  public final static native int G_REGEX_MATCH_NEWLINE_CR_get();
  public final static native int G_REGEX_MATCH_NEWLINE_LF_get();
  public final static native int G_REGEX_MATCH_NEWLINE_CRLF_get();
  public final static native int G_REGEX_MATCH_NEWLINE_ANY_get();
  public final static native int G_REGEX_MATCH_NEWLINE_ANYCRLF_get();
  public final static native int G_REGEX_MATCH_BSR_ANYCRLF_get();
  public final static native int G_REGEX_MATCH_BSR_ANY_get();
  public final static native int G_REGEX_MATCH_PARTIAL_SOFT_get();
  public final static native int G_REGEX_MATCH_PARTIAL_HARD_get();
  public final static native int G_REGEX_MATCH_NOTEMPTY_ATSTART_get();
  public final static native long _frida_g_regex_new(String jarg1, int jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_regex_ref(long jarg1);
  public final static native void _frida_g_regex_unref(long jarg1);
  public final static native String _frida_g_regex_get_pattern(long jarg1);
  public final static native int _frida_g_regex_get_max_backref(long jarg1);
  public final static native int _frida_g_regex_get_capture_count(long jarg1);
  public final static native int _frida_g_regex_get_has_cr_or_lf(long jarg1);
  public final static native int _frida_g_regex_get_max_lookbehind(long jarg1);
  public final static native int _frida_g_regex_get_string_number(long jarg1, String jarg2);
  public final static native String _frida_g_regex_escape_string(String jarg1, int jarg2);
  public final static native String _frida_g_regex_escape_nul(String jarg1, int jarg2);
  public final static native int _frida_g_regex_get_compile_flags(long jarg1);
  public final static native int _frida_g_regex_get_match_flags(long jarg1);
  public final static native int _frida_g_regex_match_simple(String jarg1, String jarg2, int jarg3, int jarg4);
  public final static native int _frida_g_regex_match(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_regex_match_full(long jarg1, String jarg2, int jarg3, int jarg4, int jarg5, long jarg6, long jarg7);
  public final static native int _frida_g_regex_match_all(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_regex_match_all_full(long jarg1, String jarg2, int jarg3, int jarg4, int jarg5, long jarg6, long jarg7);
  public final static native long _frida_g_regex_split_simple(String jarg1, String jarg2, int jarg3, int jarg4);
  public final static native long _frida_g_regex_split(long jarg1, String jarg2, int jarg3);
  public final static native long _frida_g_regex_split_full(long jarg1, String jarg2, int jarg3, int jarg4, int jarg5, int jarg6, long jarg7);
  public final static native String _frida_g_regex_replace(long jarg1, String jarg2, int jarg3, int jarg4, String jarg5, int jarg6, long jarg7);
  public final static native String _frida_g_regex_replace_literal(long jarg1, String jarg2, int jarg3, int jarg4, String jarg5, int jarg6, long jarg7);
  public final static native String _frida_g_regex_replace_eval(long jarg1, String jarg2, int jarg3, int jarg4, int jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int _frida_g_regex_check_replacement(String jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_match_info_get_regex(long jarg1);
  public final static native String _frida_g_match_info_get_string(long jarg1);
  public final static native long _frida_g_match_info_ref(long jarg1);
  public final static native void _frida_g_match_info_unref(long jarg1);
  public final static native void _frida_g_match_info_free(long jarg1);
  public final static native int _frida_g_match_info_next(long jarg1, long jarg2);
  public final static native int _frida_g_match_info_matches(long jarg1);
  public final static native int _frida_g_match_info_get_match_count(long jarg1);
  public final static native int _frida_g_match_info_is_partial_match(long jarg1);
  public final static native String _frida_g_match_info_expand_references(long jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_match_info_fetch(long jarg1, int jarg2);
  public final static native int _frida_g_match_info_fetch_pos(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_match_info_fetch_named(long jarg1, String jarg2);
  public final static native int _frida_g_match_info_fetch_named_pos(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_match_info_fetch_all(long jarg1);
  public final static native String G_CSET_A_2_Z_get();
  public final static native String G_CSET_a_2_z_get();
  public final static native String G_CSET_DIGITS_get();
  public final static native String G_CSET_LATINC_get();
  public final static native String G_CSET_LATINS_get();
  public final static native int G_TOKEN_EOF_get();
  public final static native int G_TOKEN_LEFT_PAREN_get();
  public final static native int G_TOKEN_RIGHT_PAREN_get();
  public final static native int G_TOKEN_LEFT_CURLY_get();
  public final static native int G_TOKEN_RIGHT_CURLY_get();
  public final static native int G_TOKEN_LEFT_BRACE_get();
  public final static native int G_TOKEN_RIGHT_BRACE_get();
  public final static native int G_TOKEN_EQUAL_SIGN_get();
  public final static native int G_TOKEN_COMMA_get();
  public final static native int G_TOKEN_NONE_get();
  public final static native void _GTokenValue_v_symbol_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_symbol_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_identifier_set(long jarg1, _GTokenValue jarg1_, String jarg2);
  public final static native String _GTokenValue_v_identifier_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_binary_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_binary_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_octal_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_octal_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_int_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_int_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_int64_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_int64_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_float_set(long jarg1, _GTokenValue jarg1_, double jarg2);
  public final static native double _GTokenValue_v_float_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_hex_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_hex_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_string_set(long jarg1, _GTokenValue jarg1_, String jarg2);
  public final static native String _GTokenValue_v_string_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_comment_set(long jarg1, _GTokenValue jarg1_, String jarg2);
  public final static native String _GTokenValue_v_comment_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_char_set(long jarg1, _GTokenValue jarg1_, short jarg2);
  public final static native short _GTokenValue_v_char_get(long jarg1, _GTokenValue jarg1_);
  public final static native void _GTokenValue_v_error_set(long jarg1, _GTokenValue jarg1_, long jarg2);
  public final static native long _GTokenValue_v_error_get(long jarg1, _GTokenValue jarg1_);
  public final static native long new__GTokenValue();
  public final static native void delete__GTokenValue(long jarg1);
  public final static native void _GScannerConfig_cset_skip_characters_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cset_skip_characters_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_cset_identifier_first_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cset_identifier_first_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_cset_identifier_nth_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cset_identifier_nth_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_cpair_comment_single_set(long jarg1, _GScannerConfig jarg1_, String jarg2);
  public final static native String _GScannerConfig_cpair_comment_single_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_case_sensitive_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_case_sensitive_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_skip_comment_multi_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_skip_comment_multi_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_skip_comment_single_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_skip_comment_single_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_comment_multi_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_comment_multi_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_identifier_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_identifier_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_identifier_1char_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_identifier_1char_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_identifier_NULL_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_identifier_NULL_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_symbols_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_symbols_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_binary_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_binary_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_octal_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_octal_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_float_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_float_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_hex_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_hex_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_hex_dollar_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_hex_dollar_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_string_sq_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_string_sq_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scan_string_dq_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scan_string_dq_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_numbers_2_int_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_numbers_2_int_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_int_2_float_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_int_2_float_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_identifier_2_string_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_identifier_2_string_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_char_2_token_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_char_2_token_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_symbol_2_token_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_symbol_2_token_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_scope_0_fallback_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_scope_0_fallback_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_store_int64_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_store_int64_get(long jarg1, _GScannerConfig jarg1_);
  public final static native void _GScannerConfig_padding_dummy_set(long jarg1, _GScannerConfig jarg1_, long jarg2);
  public final static native long _GScannerConfig_padding_dummy_get(long jarg1, _GScannerConfig jarg1_);
  public final static native long new__GScannerConfig();
  public final static native void delete__GScannerConfig(long jarg1);
  public final static native void _GScanner_user_data_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_user_data_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_max_parse_errors_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_max_parse_errors_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_parse_errors_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_parse_errors_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_input_name_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_input_name_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_qdata_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_qdata_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_config_set(long jarg1, _GScanner jarg1_, long jarg2, _GScannerConfig jarg2_);
  public final static native long _GScanner_config_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_token_set(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native int _GScanner_token_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_value_set(long jarg1, _GScanner jarg1_, long jarg2, _GTokenValue jarg2_);
  public final static native long _GScanner_value_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_line_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_line_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_position_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_position_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_token_set(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native int _GScanner_next_token_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_value_set(long jarg1, _GScanner jarg1_, long jarg2, _GTokenValue jarg2_);
  public final static native long _GScanner_next_value_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_line_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_next_line_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_next_position_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_next_position_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_symbol_table_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_symbol_table_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_input_fd_set(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native int _GScanner_input_fd_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_text_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_text_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_text_end_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_text_end_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_buffer_set(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native String _GScanner_buffer_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_scope_id_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_scope_id_get(long jarg1, _GScanner jarg1_);
  public final static native void _GScanner_msg_handler_set(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native long _GScanner_msg_handler_get(long jarg1, _GScanner jarg1_);
  public final static native long new__GScanner();
  public final static native void delete__GScanner(long jarg1);
  public final static native long _frida_g_scanner_new(long jarg1, _GScannerConfig jarg1_);
  public final static native void _frida_g_scanner_destroy(long jarg1, _GScanner jarg1_);
  public final static native void _frida_g_scanner_input_file(long jarg1, _GScanner jarg1_, int jarg2);
  public final static native void _frida_g_scanner_sync_file_offset(long jarg1, _GScanner jarg1_);
  public final static native void _frida_g_scanner_input_text(long jarg1, _GScanner jarg1_, String jarg2, long jarg3);
  public final static native int _frida_g_scanner_get_next_token(long jarg1, _GScanner jarg1_);
  public final static native int _frida_g_scanner_peek_next_token(long jarg1, _GScanner jarg1_);
  public final static native int _frida_g_scanner_cur_token(long jarg1, _GScanner jarg1_);
  public final static native long _frida_g_scanner_cur_value(long jarg1, _GScanner jarg1_);
  public final static native long _frida_g_scanner_cur_line(long jarg1, _GScanner jarg1_);
  public final static native long _frida_g_scanner_cur_position(long jarg1, _GScanner jarg1_);
  public final static native int _frida_g_scanner_eof(long jarg1, _GScanner jarg1_);
  public final static native long _frida_g_scanner_set_scope(long jarg1, _GScanner jarg1_, long jarg2);
  public final static native void _frida_g_scanner_scope_add_symbol(long jarg1, _GScanner jarg1_, long jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_scanner_scope_remove_symbol(long jarg1, _GScanner jarg1_, long jarg2, String jarg3);
  public final static native long _frida_g_scanner_scope_lookup_symbol(long jarg1, _GScanner jarg1_, long jarg2, String jarg3);
  public final static native void _frida_g_scanner_scope_foreach_symbol(long jarg1, _GScanner jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_scanner_lookup_symbol(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native void _frida_g_scanner_unexp_token(long jarg1, _GScanner jarg1_, int jarg2, String jarg3, String jarg4, String jarg5, String jarg6, int jarg7);
  public final static native void _frida_g_scanner_error(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native void _frida_g_scanner_warn(long jarg1, _GScanner jarg1_, String jarg2);
  public final static native long _frida_g_sequence_new(long jarg1);
  public final static native void _frida_g_sequence_free(long jarg1);
  public final static native int _frida_g_sequence_get_length(long jarg1);
  public final static native void _frida_g_sequence_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_sequence_foreach_range(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_sequence_sort(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_sequence_sort_iter(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_sequence_is_empty(long jarg1);
  public final static native long _frida_g_sequence_get_begin_iter(long jarg1);
  public final static native long _frida_g_sequence_get_end_iter(long jarg1);
  public final static native long _frida_g_sequence_get_iter_at_pos(long jarg1, int jarg2);
  public final static native long _frida_g_sequence_append(long jarg1, long jarg2);
  public final static native long _frida_g_sequence_prepend(long jarg1, long jarg2);
  public final static native long _frida_g_sequence_insert_before(long jarg1, long jarg2);
  public final static native void _frida_g_sequence_move(long jarg1, long jarg2);
  public final static native void _frida_g_sequence_swap(long jarg1, long jarg2);
  public final static native long _frida_g_sequence_insert_sorted(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_sequence_insert_sorted_iter(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_sequence_sort_changed(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_sequence_sort_changed_iter(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_sequence_remove(long jarg1);
  public final static native void _frida_g_sequence_remove_range(long jarg1, long jarg2);
  public final static native void _frida_g_sequence_move_range(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_sequence_search(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_sequence_search_iter(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_sequence_lookup(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_sequence_lookup_iter(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_sequence_get(long jarg1);
  public final static native void _frida_g_sequence_set(long jarg1, long jarg2);
  public final static native int _frida_g_sequence_iter_is_begin(long jarg1);
  public final static native int _frida_g_sequence_iter_is_end(long jarg1);
  public final static native long _frida_g_sequence_iter_next(long jarg1);
  public final static native long _frida_g_sequence_iter_prev(long jarg1);
  public final static native int _frida_g_sequence_iter_get_position(long jarg1);
  public final static native long _frida_g_sequence_iter_move(long jarg1, int jarg2);
  public final static native long _frida_g_sequence_iter_get_sequence(long jarg1);
  public final static native int _frida_g_sequence_iter_compare(long jarg1, long jarg2);
  public final static native long _frida_g_sequence_range_get_midpoint(long jarg1, long jarg2);
  public final static native long _frida_g_shell_error_quark();
  public final static native String _frida_g_shell_quote(String jarg1);
  public final static native String _frida_g_shell_unquote(String jarg1, long jarg2);
  public final static native int _frida_g_shell_parse_argv(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_slice_alloc(long jarg1);
  public final static native long _frida_g_slice_alloc0(long jarg1);
  public final static native long _frida_g_slice_copy(long jarg1, long jarg2);
  public final static native void _frida_g_slice_free1(long jarg1, long jarg2);
  public final static native void _frida_g_slice_free_chain_with_offset(long jarg1, long jarg2, long jarg3);
  public final static native int G_SLICE_CONFIG_ALWAYS_MALLOC_get();
  public final static native void _frida_g_slice_set_config(int jarg1, int jarg2);
  public final static native int _frida_g_slice_get_config(int jarg1);
  public final static native long _frida_g_slice_get_config_state(int jarg1, int jarg2, long jarg3);
  public final static native int G_SPAWN_ERROR_2BIG_get();
  public final static native int G_SPAWN_DEFAULT_get();
  public final static native int G_SPAWN_LEAVE_DESCRIPTORS_OPEN_get();
  public final static native int G_SPAWN_DO_NOT_REAP_CHILD_get();
  public final static native int G_SPAWN_SEARCH_PATH_get();
  public final static native int G_SPAWN_STDOUT_TO_DEV_NULL_get();
  public final static native int G_SPAWN_STDERR_TO_DEV_NULL_get();
  public final static native int G_SPAWN_CHILD_INHERITS_STDIN_get();
  public final static native int G_SPAWN_FILE_AND_ARGV_ZERO_get();
  public final static native int G_SPAWN_SEARCH_PATH_FROM_ENVP_get();
  public final static native int G_SPAWN_CLOEXEC_PIPES_get();
  public final static native long _frida_g_spawn_error_quark();
  public final static native long _frida_g_spawn_exit_error_quark();
  public final static native int _frida_g_spawn_async(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int _frida_g_spawn_async_with_pipes(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, long jarg11);
  public final static native int _frida_g_spawn_async_with_fds(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10, long jarg11);
  public final static native int _frida_g_spawn_sync(String jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10);
  public final static native int _frida_g_spawn_command_line_sync(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_spawn_command_line_async(String jarg1, long jarg2);
  public final static native int _frida_g_spawn_check_exit_status(int jarg1, long jarg2);
  public final static native void _frida_g_spawn_close_pid(int jarg1);
  public final static native int G_ASCII_ALNUM_get();
  public final static native int G_ASCII_ALPHA_get();
  public final static native int G_ASCII_CNTRL_get();
  public final static native int G_ASCII_DIGIT_get();
  public final static native int G_ASCII_GRAPH_get();
  public final static native int G_ASCII_LOWER_get();
  public final static native int G_ASCII_PRINT_get();
  public final static native int G_ASCII_PUNCT_get();
  public final static native int G_ASCII_SPACE_get();
  public final static native int G_ASCII_UPPER_get();
  public final static native int G_ASCII_XDIGIT_get();
  public final static native long _frida_g_ascii_table_get();
  public final static native char _frida_g_ascii_tolower(char jarg1);
  public final static native char _frida_g_ascii_toupper(char jarg1);
  public final static native int _frida_g_ascii_digit_value(char jarg1);
  public final static native int _frida_g_ascii_xdigit_value(char jarg1);
  public final static native String G_STR_DELIMITERS_get();
  public final static native String _frida_g_strdelimit(String jarg1, String jarg2, char jarg3);
  public final static native String _frida_g_strcanon(String jarg1, String jarg2, char jarg3);
  public final static native String _frida_g_strerror(int jarg1);
  public final static native String _frida_g_strsignal(int jarg1);
  public final static native String _frida_g_strreverse(String jarg1);
  public final static native long _frida_g_strlcpy(String jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_strlcat(String jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_strstr_len(String jarg1, int jarg2, String jarg3);
  public final static native String _frida_g_strrstr(String jarg1, String jarg2);
  public final static native String _frida_g_strrstr_len(String jarg1, int jarg2, String jarg3);
  public final static native int _frida_g_str_has_suffix(String jarg1, String jarg2);
  public final static native int _frida_g_str_has_prefix(String jarg1, String jarg2);
  public final static native double _frida_g_strtod(String jarg1, long jarg2);
  public final static native double _frida_g_ascii_strtod(String jarg1, long jarg2);
  public final static native long _frida_g_ascii_strtoull(String jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_ascii_strtoll(String jarg1, long jarg2, long jarg3);
  public final static native int G_ASCII_DTOSTR_BUF_SIZE_get();
  public final static native String _frida_g_ascii_dtostr(String jarg1, int jarg2, double jarg3);
  public final static native String _frida_g_ascii_formatd(String jarg1, int jarg2, String jarg3, double jarg4);
  public final static native String _frida_g_strchug(String jarg1);
  public final static native String _frida_g_strchomp(String jarg1);
  public final static native int _frida_g_ascii_strcasecmp(String jarg1, String jarg2);
  public final static native int _frida_g_ascii_strncasecmp(String jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_ascii_strdown(String jarg1, int jarg2);
  public final static native String _frida_g_ascii_strup(String jarg1, int jarg2);
  public final static native int _frida_g_str_is_ascii(String jarg1);
  public final static native int _frida_g_strcasecmp(String jarg1, String jarg2);
  public final static native int _frida_g_strncasecmp(String jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_strdown(String jarg1);
  public final static native String _frida_g_strup(String jarg1);
  public final static native String _frida_g_strdup(String jarg1);
  public final static native String _frida_g_strdup_printf(String jarg1);
  public final static native String _frida_g_strndup(String jarg1, long jarg2);
  public final static native String _frida_g_strnfill(long jarg1, char jarg2);
  public final static native String _frida_g_strconcat(String jarg1);
  public final static native String _frida_g_strjoin(String jarg1);
  public final static native String _frida_g_strcompress(String jarg1);
  public final static native String _frida_g_strescape(String jarg1, String jarg2);
  public final static native long _frida_g_memdup(long jarg1, long jarg2);
  public final static native long _frida_g_strsplit(String jarg1, String jarg2, int jarg3);
  public final static native long _frida_g_strsplit_set(String jarg1, String jarg2, int jarg3);
  public final static native String _frida_g_strjoinv(String jarg1, long jarg2);
  public final static native void _frida_g_strfreev(long jarg1);
  public final static native long _frida_g_strdupv(long jarg1);
  public final static native long _frida_g_strv_length(long jarg1);
  public final static native String _frida_g_stpcpy(String jarg1, String jarg2);
  public final static native String _frida_g_str_to_ascii(String jarg1, String jarg2);
  public final static native long _frida_g_str_tokenize_and_fold(String jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_str_match_string(String jarg1, String jarg2, int jarg3);
  public final static native int _frida_g_strv_contains(long jarg1, String jarg2);
  public final static native int _frida_g_strv_equal(long jarg1, long jarg2);
  public final static native long _frida_g_number_parser_error_quark();
  public final static native int _frida_g_ascii_string_to_signed(String jarg1, long jarg2, int jarg3, int jarg4, long jarg5, long jarg6);
  public final static native int _frida_g_ascii_string_to_unsigned(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_string_chunk_new(long jarg1);
  public final static native void _frida_g_string_chunk_free(long jarg1);
  public final static native void _frida_g_string_chunk_clear(long jarg1);
  public final static native String _frida_g_string_chunk_insert(long jarg1, String jarg2);
  public final static native String _frida_g_string_chunk_insert_len(long jarg1, String jarg2, int jarg3);
  public final static native String _frida_g_string_chunk_insert_const(long jarg1, String jarg2);
  public final static native void _frida_g_assertion_set_handler(long jarg1, long jarg2);
  public final static native int _frida_g_strcmp0(String jarg1, String jarg2);
  public final static native void _frida_g_test_minimized_result(double jarg1, String jarg2);
  public final static native void _frida_g_test_maximized_result(double jarg1, String jarg2);
  public final static native void _frida_g_test_init(long jarg1, long jarg2);
  public final static native String G_TEST_OPTION_ISOLATE_DIRS_get();
  public final static native int _frida_g_test_subprocess();
  public final static native int _frida_g_test_run();
  public final static native void _frida_g_test_add_func(String jarg1, long jarg2);
  public final static native void _frida_g_test_add_data_func(String jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_test_add_data_func_full(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_test_fail();
  public final static native void _frida_g_test_incomplete(String jarg1);
  public final static native void _frida_g_test_skip(String jarg1);
  public final static native int _frida_g_test_failed();
  public final static native void _frida_g_test_set_nonfatal_assertions();
  public final static native void _frida_g_test_message(String jarg1);
  public final static native void _frida_g_test_bug_base(String jarg1);
  public final static native void _frida_g_test_bug(String jarg1);
  public final static native void _frida_g_test_timer_start();
  public final static native double _frida_g_test_timer_elapsed();
  public final static native double _frida_g_test_timer_last();
  public final static native void _frida_g_test_queue_free(long jarg1);
  public final static native void _frida_g_test_queue_destroy(long jarg1, long jarg2);
  public final static native int G_TEST_TRAP_SILENCE_STDOUT_get();
  public final static native int G_TEST_TRAP_SILENCE_STDERR_get();
  public final static native int G_TEST_TRAP_INHERIT_STDIN_get();
  public final static native int _frida_g_test_trap_fork(long jarg1, int jarg2);
  public final static native int G_TEST_SUBPROCESS_INHERIT_STDIN_get();
  public final static native int G_TEST_SUBPROCESS_INHERIT_STDOUT_get();
  public final static native int G_TEST_SUBPROCESS_INHERIT_STDERR_get();
  public final static native void _frida_g_test_trap_subprocess(String jarg1, long jarg2, int jarg3);
  public final static native int _frida_g_test_trap_has_passed();
  public final static native int _frida_g_test_trap_reached_timeout();
  public final static native int _frida_g_test_rand_int();
  public final static native int _frida_g_test_rand_int_range(int jarg1, int jarg2);
  public final static native double _frida_g_test_rand_double();
  public final static native double _frida_g_test_rand_double_range(double jarg1, double jarg2);
  public final static native long _frida_g_test_create_case(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_test_create_suite(String jarg1);
  public final static native long _frida_g_test_get_root();
  public final static native void _frida_g_test_suite_add(long jarg1, long jarg2);
  public final static native void _frida_g_test_suite_add_suite(long jarg1, long jarg2);
  public final static native int _frida_g_test_run_suite(long jarg1);
  public final static native void _frida_g_test_trap_assertions(String jarg1, String jarg2, int jarg3, String jarg4, long jarg5, String jarg6);
  public final static native void _frida_g_assertion_message(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void _frida_g_assertion_message_expr(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5);
  public final static native void _frida_g_assertion_message_cmpstr(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5, String jarg6, String jarg7, String jarg8);
  public final static native void _frida_g_assertion_message_cmpnum(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5, long jarg6, String jarg7, long jarg8, char jarg9);
  public final static native void _frida_g_assertion_message_error(String jarg1, String jarg2, int jarg3, String jarg4, String jarg5, long jarg6, _GError jarg6_, long jarg7, int jarg8);
  public final static native void _frida_g_test_add_vtable(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void GTestConfig_test_initialized_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_initialized_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_quick_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_quick_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_perf_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_perf_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_verbose_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_verbose_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_quiet_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_quiet_get(long jarg1, GTestConfig jarg1_);
  public final static native void GTestConfig_test_undefined_set(long jarg1, GTestConfig jarg1_, int jarg2);
  public final static native int GTestConfig_test_undefined_get(long jarg1, GTestConfig jarg1_);
  public final static native long new_GTestConfig();
  public final static native void delete_GTestConfig(long jarg1);
  public final static native long _frida_g_test_config_vars_get();
  public final static native void GTestLogMsg_log_type_set(long jarg1, GTestLogMsg jarg1_, int jarg2);
  public final static native int GTestLogMsg_log_type_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_n_strings_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_n_strings_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_strings_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_strings_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_n_nums_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_n_nums_get(long jarg1, GTestLogMsg jarg1_);
  public final static native void GTestLogMsg_nums_set(long jarg1, GTestLogMsg jarg1_, long jarg2);
  public final static native long GTestLogMsg_nums_get(long jarg1, GTestLogMsg jarg1_);
  public final static native long new_GTestLogMsg();
  public final static native void delete_GTestLogMsg(long jarg1);
  public final static native void GTestLogBuffer_data_set(long jarg1, GTestLogBuffer jarg1_, long jarg2, _GString jarg2_);
  public final static native long GTestLogBuffer_data_get(long jarg1, GTestLogBuffer jarg1_);
  public final static native void GTestLogBuffer_msgs_set(long jarg1, GTestLogBuffer jarg1_, long jarg2, _GSList jarg2_);
  public final static native long GTestLogBuffer_msgs_get(long jarg1, GTestLogBuffer jarg1_);
  public final static native long new_GTestLogBuffer();
  public final static native void delete_GTestLogBuffer(long jarg1);
  public final static native String _frida_g_test_log_type_name(int jarg1);
  public final static native long _frida_g_test_log_buffer_new();
  public final static native void _frida_g_test_log_buffer_free(long jarg1, GTestLogBuffer jarg1_);
  public final static native void _frida_g_test_log_buffer_push(long jarg1, GTestLogBuffer jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_test_log_buffer_pop(long jarg1, GTestLogBuffer jarg1_);
  public final static native void _frida_g_test_log_msg_free(long jarg1, GTestLogMsg jarg1_);
  public final static native void _frida_g_test_log_set_fatal_handler(long jarg1, long jarg2);
  public final static native void _frida_g_test_expect_message(String jarg1, int jarg2, String jarg3);
  public final static native void _frida_g_test_assert_expected_messages_internal(String jarg1, String jarg2, int jarg3, String jarg4);
  public final static native String _frida_g_test_build_filename(int jarg1, String jarg2);
  public final static native String _frida_g_test_get_dir(int jarg1);
  public final static native String _frida_g_test_get_filename(int jarg1, String jarg2);
  public final static native void _GThreadPool_func_set(long jarg1, _GThreadPool jarg1_, long jarg2);
  public final static native long _GThreadPool_func_get(long jarg1, _GThreadPool jarg1_);
  public final static native void _GThreadPool_user_data_set(long jarg1, _GThreadPool jarg1_, long jarg2);
  public final static native long _GThreadPool_user_data_get(long jarg1, _GThreadPool jarg1_);
  public final static native void _GThreadPool_exclusive_set(long jarg1, _GThreadPool jarg1_, int jarg2);
  public final static native int _GThreadPool_exclusive_get(long jarg1, _GThreadPool jarg1_);
  public final static native long new__GThreadPool();
  public final static native void delete__GThreadPool(long jarg1);
  public final static native long _frida_g_thread_pool_new(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void _frida_g_thread_pool_free(long jarg1, _GThreadPool jarg1_, int jarg2, int jarg3);
  public final static native int _frida_g_thread_pool_push(long jarg1, _GThreadPool jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_thread_pool_unprocessed(long jarg1, _GThreadPool jarg1_);
  public final static native void _frida_g_thread_pool_set_sort_function(long jarg1, _GThreadPool jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_thread_pool_move_to_front(long jarg1, _GThreadPool jarg1_, long jarg2);
  public final static native int _frida_g_thread_pool_set_max_threads(long jarg1, _GThreadPool jarg1_, int jarg2, long jarg3);
  public final static native int _frida_g_thread_pool_get_max_threads(long jarg1, _GThreadPool jarg1_);
  public final static native long _frida_g_thread_pool_get_num_threads(long jarg1, _GThreadPool jarg1_);
  public final static native void _frida_g_thread_pool_set_max_unused_threads(int jarg1);
  public final static native int _frida_g_thread_pool_get_max_unused_threads();
  public final static native long _frida_g_thread_pool_get_num_unused_threads();
  public final static native void _frida_g_thread_pool_stop_unused_threads();
  public final static native void _frida_g_thread_pool_set_max_idle_time(long jarg1);
  public final static native long _frida_g_thread_pool_get_max_idle_time();
  public final static native int G_USEC_PER_SEC_get();
  public final static native long _frida_g_timer_new();
  public final static native void _frida_g_timer_destroy(long jarg1);
  public final static native void _frida_g_timer_start(long jarg1);
  public final static native void _frida_g_timer_stop(long jarg1);
  public final static native void _frida_g_timer_reset(long jarg1);
  public final static native void _frida_g_timer_continue(long jarg1);
  public final static native double _frida_g_timer_elapsed(long jarg1, long jarg2);
  public final static native void _frida_g_usleep(long jarg1);
  public final static native void _frida_g_time_val_add(long jarg1, _GTimeVal jarg1_, int jarg2);
  public final static native int _frida_g_time_val_from_iso8601(String jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native String _frida_g_time_val_to_iso8601(long jarg1, _GTimeVal jarg1_);
  public final static native void _GTrashStack_next_set(long jarg1, _GTrashStack jarg1_, long jarg2, _GTrashStack jarg2_);
  public final static native long _GTrashStack_next_get(long jarg1, _GTrashStack jarg1_);
  public final static native long new__GTrashStack();
  public final static native void delete__GTrashStack(long jarg1);
  public final static native void _frida_g_trash_stack_push(long jarg1, long jarg2);
  public final static native long _frida_g_trash_stack_pop(long jarg1);
  public final static native long _frida_g_trash_stack_peek(long jarg1);
  public final static native long _frida_g_trash_stack_height(long jarg1);
  public final static native long _frida_g_tree_new(long jarg1);
  public final static native long _frida_g_tree_new_with_data(long jarg1, long jarg2);
  public final static native long _frida_g_tree_new_full(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_tree_ref(long jarg1);
  public final static native void _frida_g_tree_unref(long jarg1);
  public final static native void _frida_g_tree_destroy(long jarg1);
  public final static native void _frida_g_tree_insert(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_tree_replace(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_tree_remove(long jarg1, long jarg2);
  public final static native int _frida_g_tree_steal(long jarg1, long jarg2);
  public final static native long _frida_g_tree_lookup(long jarg1, long jarg2);
  public final static native int _frida_g_tree_lookup_extended(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_tree_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_tree_traverse(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_tree_search(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_tree_height(long jarg1);
  public final static native int _frida_g_tree_nnodes(long jarg1);
  public final static native String G_URI_RESERVED_CHARS_GENERIC_DELIMITERS_get();
  public final static native String G_URI_RESERVED_CHARS_SUBCOMPONENT_DELIMITERS_get();
  public final static native String G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_ELEMENT_get();
  public final static native String G_URI_RESERVED_CHARS_ALLOWED_IN_PATH_get();
  public final static native String G_URI_RESERVED_CHARS_ALLOWED_IN_USERINFO_get();
  public final static native String _frida_g_uri_unescape_string(String jarg1, String jarg2);
  public final static native String _frida_g_uri_unescape_segment(String jarg1, String jarg2, String jarg3);
  public final static native String _frida_g_uri_parse_scheme(String jarg1);
  public final static native String _frida_g_uri_escape_string(String jarg1, String jarg2, int jarg3);
  public final static native int _frida_g_uuid_string_is_valid(String jarg1);
  public final static native String _frida_g_uuid_string_random();
  public final static native long _frida_glib_major_version_get();
  public final static native long _frida_glib_minor_version_get();
  public final static native long _frida_glib_micro_version_get();
  public final static native long _frida_glib_interface_age_get();
  public final static native long _frida_glib_binary_age_get();
  public final static native String _frida_glib_check_version(long jarg1, long jarg2, long jarg3);
  public final static native int G_ALLOC_ONLY_get();
  public final static native int G_ALLOC_AND_FREE_get();
  public final static native int G_ALLOCATOR_LIST_get();
  public final static native int G_ALLOCATOR_SLIST_get();
  public final static native int G_ALLOCATOR_NODE_get();
  public final static native long _frida_g_mem_chunk_new(String jarg1, int jarg2, long jarg3, int jarg4);
  public final static native void _frida_g_mem_chunk_destroy(long jarg1);
  public final static native long _frida_g_mem_chunk_alloc(long jarg1);
  public final static native long _frida_g_mem_chunk_alloc0(long jarg1);
  public final static native void _frida_g_mem_chunk_free(long jarg1, long jarg2);
  public final static native void _frida_g_mem_chunk_clean(long jarg1);
  public final static native void _frida_g_mem_chunk_reset(long jarg1);
  public final static native void _frida_g_mem_chunk_print(long jarg1);
  public final static native void _frida_g_mem_chunk_info();
  public final static native void _frida_g_blow_chunks();
  public final static native long _frida_g_allocator_new(String jarg1, long jarg2);
  public final static native void _frida_g_allocator_free(long jarg1);
  public final static native void _frida_g_list_push_allocator(long jarg1);
  public final static native void _frida_g_list_pop_allocator();
  public final static native void _frida_g_slist_push_allocator(long jarg1);
  public final static native void _frida_g_slist_pop_allocator();
  public final static native void _frida_g_node_push_allocator(long jarg1);
  public final static native void _frida_g_node_pop_allocator();
  public final static native long _frida_g_cache_new(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void _frida_g_cache_destroy(long jarg1);
  public final static native long _frida_g_cache_insert(long jarg1, long jarg2);
  public final static native void _frida_g_cache_remove(long jarg1, long jarg2);
  public final static native void _frida_g_cache_key_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_cache_value_foreach(long jarg1, long jarg2, long jarg3);
  public final static native void _GCompletion_items_set(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GCompletion_items_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_func_set(long jarg1, _GCompletion jarg1_, long jarg2);
  public final static native long _GCompletion_func_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_prefix_set(long jarg1, _GCompletion jarg1_, String jarg2);
  public final static native String _GCompletion_prefix_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_cache_set(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native long _GCompletion_cache_get(long jarg1, _GCompletion jarg1_);
  public final static native void _GCompletion_strncmp_func_set(long jarg1, _GCompletion jarg1_, long jarg2);
  public final static native long _GCompletion_strncmp_func_get(long jarg1, _GCompletion jarg1_);
  public final static native long new__GCompletion();
  public final static native void delete__GCompletion(long jarg1);
  public final static native long _frida_g_completion_new(long jarg1);
  public final static native void _frida_g_completion_add_items(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native void _frida_g_completion_remove_items(long jarg1, _GCompletion jarg1_, long jarg2, _GList jarg2_);
  public final static native void _frida_g_completion_clear_items(long jarg1, _GCompletion jarg1_);
  public final static native long _frida_g_completion_complete(long jarg1, _GCompletion jarg1_, String jarg2, long jarg3);
  public final static native long _frida_g_completion_complete_utf8(long jarg1, _GCompletion jarg1_, String jarg2, long jarg3);
  public final static native void _frida_g_completion_set_compare(long jarg1, _GCompletion jarg1_, long jarg2);
  public final static native void _frida_g_completion_free(long jarg1, _GCompletion jarg1_);
  public final static native void _GTuples_len_set(long jarg1, _GTuples jarg1_, long jarg2);
  public final static native long _GTuples_len_get(long jarg1, _GTuples jarg1_);
  public final static native long new__GTuples();
  public final static native void delete__GTuples(long jarg1);
  public final static native long _frida_g_relation_new(int jarg1);
  public final static native void _frida_g_relation_destroy(long jarg1);
  public final static native void _frida_g_relation_index(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_relation_insert(long jarg1);
  public final static native int _frida_g_relation_delete(long jarg1, long jarg2, int jarg3);
  public final static native long _frida_g_relation_select(long jarg1, long jarg2, int jarg3);
  public final static native int _frida_g_relation_count(long jarg1, long jarg2, int jarg3);
  public final static native int _frida_g_relation_exists(long jarg1);
  public final static native void _frida_g_relation_print(long jarg1);
  public final static native void _frida_g_tuples_destroy(long jarg1, _GTuples jarg1_);
  public final static native long _frida_g_tuples_index(long jarg1, _GTuples jarg1_, int jarg2, int jarg3);
  public final static native void _GThread_func_set(long jarg1, _GThread jarg1_, long jarg2);
  public final static native long _GThread_func_get(long jarg1, _GThread jarg1_);
  public final static native void _GThread_data_set(long jarg1, _GThread jarg1_, long jarg2);
  public final static native long _GThread_data_get(long jarg1, _GThread jarg1_);
  public final static native void _GThread_joinable_set(long jarg1, _GThread jarg1_, int jarg2);
  public final static native int _GThread_joinable_get(long jarg1, _GThread jarg1_);
  public final static native void _GThread_priority_set(long jarg1, _GThread jarg1_, int jarg2);
  public final static native int _GThread_priority_get(long jarg1, _GThread jarg1_);
  public final static native long new__GThread();
  public final static native void delete__GThread(long jarg1);
  public final static native void _GThreadFunctions_mutex_new_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_new_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_lock_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_lock_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_trylock_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_trylock_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_unlock_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_unlock_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_mutex_free_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_mutex_free_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_new_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_new_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_signal_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_signal_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_broadcast_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_broadcast_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_wait_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_wait_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_timed_wait_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_timed_wait_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_cond_free_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_cond_free_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_private_new_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_private_new_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_private_get_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_private_get_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_private_set_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_private_set_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_create_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_create_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_yield_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_yield_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_join_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_join_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_exit_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_exit_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_set_priority_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_set_priority_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_self_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_self_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native void _GThreadFunctions_thread_equal_set(long jarg1, _GThreadFunctions jarg1_, long jarg2);
  public final static native long _GThreadFunctions_thread_equal_get(long jarg1, _GThreadFunctions jarg1_);
  public final static native long new__GThreadFunctions();
  public final static native void delete__GThreadFunctions(long jarg1);
  public final static native void _frida_g_thread_functions_for_glib_use_set(long jarg1, _GThreadFunctions jarg1_);
  public final static native long _frida_g_thread_functions_for_glib_use_get();
  public final static native void _frida_g_thread_use_default_impl_set(int jarg1);
  public final static native int _frida_g_thread_use_default_impl_get();
  public final static native void _frida_g_thread_gettime_set(long jarg1);
  public final static native long _frida_g_thread_gettime_get();
  public final static native long _frida_g_thread_create(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_thread_create_full(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6, long jarg7);
  public final static native void _frida_g_thread_set_priority(long jarg1, _GThread jarg1_, int jarg2);
  public final static native void _frida_g_thread_foreach(long jarg1, long jarg2);
  public final static native void GStaticMutex_mutex_set(long jarg1, GStaticMutex jarg1_, long jarg2, _GMutex jarg2_);
  public final static native long GStaticMutex_mutex_get(long jarg1, GStaticMutex jarg1_);
  public final static native void GStaticMutex_unused_set(long jarg1, GStaticMutex jarg1_, long jarg2);
  public final static native long GStaticMutex_unused_get(long jarg1, GStaticMutex jarg1_);
  public final static native long new_GStaticMutex();
  public final static native void delete_GStaticMutex(long jarg1);
  public final static native void _frida_g_static_mutex_init(long jarg1, GStaticMutex jarg1_);
  public final static native void _frida_g_static_mutex_free(long jarg1, GStaticMutex jarg1_);
  public final static native long _frida_g_static_mutex_get_mutex_impl(long jarg1, GStaticMutex jarg1_);
  public final static native void _GStaticRecMutex_mutex_set(long jarg1, _GStaticRecMutex jarg1_, long jarg2, GStaticMutex jarg2_);
  public final static native long _GStaticRecMutex_mutex_get(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _GStaticRecMutex_depth_set(long jarg1, _GStaticRecMutex jarg1_, long jarg2);
  public final static native long _GStaticRecMutex_depth_get(long jarg1, _GStaticRecMutex jarg1_);
  public final static native long new__GStaticRecMutex();
  public final static native void delete__GStaticRecMutex(long jarg1);
  public final static native void _frida_g_static_rec_mutex_init(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _frida_g_static_rec_mutex_lock(long jarg1, _GStaticRecMutex jarg1_);
  public final static native int _frida_g_static_rec_mutex_trylock(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _frida_g_static_rec_mutex_unlock(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _frida_g_static_rec_mutex_lock_full(long jarg1, _GStaticRecMutex jarg1_, long jarg2);
  public final static native long _frida_g_static_rec_mutex_unlock_full(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _frida_g_static_rec_mutex_free(long jarg1, _GStaticRecMutex jarg1_);
  public final static native void _GStaticRWLock_mutex_set(long jarg1, _GStaticRWLock jarg1_, long jarg2, GStaticMutex jarg2_);
  public final static native long _GStaticRWLock_mutex_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_read_cond_set(long jarg1, _GStaticRWLock jarg1_, long jarg2, _GCond jarg2_);
  public final static native long _GStaticRWLock_read_cond_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_write_cond_set(long jarg1, _GStaticRWLock jarg1_, long jarg2, _GCond jarg2_);
  public final static native long _GStaticRWLock_write_cond_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_read_counter_set(long jarg1, _GStaticRWLock jarg1_, long jarg2);
  public final static native long _GStaticRWLock_read_counter_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_have_writer_set(long jarg1, _GStaticRWLock jarg1_, int jarg2);
  public final static native int _GStaticRWLock_have_writer_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_want_to_read_set(long jarg1, _GStaticRWLock jarg1_, long jarg2);
  public final static native long _GStaticRWLock_want_to_read_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _GStaticRWLock_want_to_write_set(long jarg1, _GStaticRWLock jarg1_, long jarg2);
  public final static native long _GStaticRWLock_want_to_write_get(long jarg1, _GStaticRWLock jarg1_);
  public final static native long new__GStaticRWLock();
  public final static native void delete__GStaticRWLock(long jarg1);
  public final static native void _frida_g_static_rw_lock_init(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _frida_g_static_rw_lock_reader_lock(long jarg1, _GStaticRWLock jarg1_);
  public final static native int _frida_g_static_rw_lock_reader_trylock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _frida_g_static_rw_lock_reader_unlock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _frida_g_static_rw_lock_writer_lock(long jarg1, _GStaticRWLock jarg1_);
  public final static native int _frida_g_static_rw_lock_writer_trylock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _frida_g_static_rw_lock_writer_unlock(long jarg1, _GStaticRWLock jarg1_);
  public final static native void _frida_g_static_rw_lock_free(long jarg1, _GStaticRWLock jarg1_);
  public final static native long _frida_g_private_new(long jarg1);
  public final static native void _GStaticPrivate_index_set(long jarg1, _GStaticPrivate jarg1_, long jarg2);
  public final static native long _GStaticPrivate_index_get(long jarg1, _GStaticPrivate jarg1_);
  public final static native long new__GStaticPrivate();
  public final static native void delete__GStaticPrivate(long jarg1);
  public final static native void _frida_g_static_private_init(long jarg1, _GStaticPrivate jarg1_);
  public final static native long _frida_g_static_private_get(long jarg1, _GStaticPrivate jarg1_);
  public final static native void _frida_g_static_private_set(long jarg1, _GStaticPrivate jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_static_private_free(long jarg1, _GStaticPrivate jarg1_);
  public final static native int _frida_g_once_init_enter_impl(long jarg1);
  public final static native void g_thread_init(long jarg1);
  public final static native void g_thread_init_with_errorcheck_mutexes(long jarg1);
  public final static native int _frida_g_thread_get_initialized();
  public final static native void _frida_g_threads_got_initialized_set(int jarg1);
  public final static native int _frida_g_threads_got_initialized_get();
  public final static native long _frida_g_mutex_new();
  public final static native void _frida_g_mutex_free(long jarg1, _GMutex jarg1_);
  public final static native long _frida_g_cond_new();
  public final static native void _frida_g_cond_free(long jarg1, _GCond jarg1_);
  public final static native int _frida_g_cond_timed_wait(long jarg1, _GCond jarg1_, long jarg2, _GMutex jarg2_, long jarg3, _GTimeVal jarg3_);
  public final static native void g_autoptr_cleanup_generic_gfree(long jarg1);
  public final static native void g_autoptr_cleanup_gstring_free(long jarg1, _GString jarg1_);
  public final static native void _frida_glib_init();
  public final static native void _frida_glib_shutdown();
  public final static native void _frida_glib_deinit();
  public final static native void _frida_glib_prepare_to_fork();
  public final static native void _frida_glib_recover_from_fork_in_parent();
  public final static native void _frida_glib_recover_from_fork_in_child();
  public final static native int G_TYPE_FUNDAMENTAL_SHIFT_get();
  public final static native int G_TYPE_RESERVED_GLIB_FIRST_get();
  public final static native int G_TYPE_RESERVED_GLIB_LAST_get();
  public final static native int G_TYPE_RESERVED_BSE_FIRST_get();
  public final static native int G_TYPE_RESERVED_BSE_LAST_get();
  public final static native int G_TYPE_RESERVED_USER_FIRST_get();
  public final static native void _GTypeClass_g_type_set(long jarg1, _GTypeClass jarg1_, long jarg2);
  public final static native long _GTypeClass_g_type_get(long jarg1, _GTypeClass jarg1_);
  public final static native long new__GTypeClass();
  public final static native void delete__GTypeClass(long jarg1);
  public final static native void _GTypeInstance_g_class_set(long jarg1, _GTypeInstance jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GTypeInstance_g_class_get(long jarg1, _GTypeInstance jarg1_);
  public final static native long new__GTypeInstance();
  public final static native void delete__GTypeInstance(long jarg1);
  public final static native void _GTypeInterface_g_type_set(long jarg1, _GTypeInterface jarg1_, long jarg2);
  public final static native long _GTypeInterface_g_type_get(long jarg1, _GTypeInterface jarg1_);
  public final static native void _GTypeInterface_g_instance_type_set(long jarg1, _GTypeInterface jarg1_, long jarg2);
  public final static native long _GTypeInterface_g_instance_type_get(long jarg1, _GTypeInterface jarg1_);
  public final static native long new__GTypeInterface();
  public final static native void delete__GTypeInterface(long jarg1);
  public final static native void _GTypeQuery_type_set(long jarg1, _GTypeQuery jarg1_, long jarg2);
  public final static native long _GTypeQuery_type_get(long jarg1, _GTypeQuery jarg1_);
  public final static native void _GTypeQuery_type_name_set(long jarg1, _GTypeQuery jarg1_, String jarg2);
  public final static native String _GTypeQuery_type_name_get(long jarg1, _GTypeQuery jarg1_);
  public final static native void _GTypeQuery_class_size_set(long jarg1, _GTypeQuery jarg1_, long jarg2);
  public final static native long _GTypeQuery_class_size_get(long jarg1, _GTypeQuery jarg1_);
  public final static native void _GTypeQuery_instance_size_set(long jarg1, _GTypeQuery jarg1_, long jarg2);
  public final static native long _GTypeQuery_instance_size_get(long jarg1, _GTypeQuery jarg1_);
  public final static native long new__GTypeQuery();
  public final static native void delete__GTypeQuery(long jarg1);
  public final static native int G_TYPE_DEBUG_NONE_get();
  public final static native int G_TYPE_DEBUG_OBJECTS_get();
  public final static native int G_TYPE_DEBUG_SIGNALS_get();
  public final static native int G_TYPE_DEBUG_INSTANCE_COUNT_get();
  public final static native int G_TYPE_DEBUG_MASK_get();
  public final static native void _frida_g_type_init();
  public final static native void _frida_g_type_init_with_debug_flags(int jarg1);
  public final static native String _frida_g_type_name(long jarg1);
  public final static native long _frida_g_type_qname(long jarg1);
  public final static native long _frida_g_type_from_name(String jarg1);
  public final static native long _frida_g_type_parent(long jarg1);
  public final static native long _frida_g_type_depth(long jarg1);
  public final static native long _frida_g_type_next_base(long jarg1, long jarg2);
  public final static native int _frida_g_type_is_a(long jarg1, long jarg2);
  public final static native long _frida_g_type_class_ref(long jarg1);
  public final static native long _frida_g_type_class_peek(long jarg1);
  public final static native long _frida_g_type_class_peek_static(long jarg1);
  public final static native void _frida_g_type_class_unref(long jarg1);
  public final static native long _frida_g_type_class_peek_parent(long jarg1);
  public final static native long _frida_g_type_interface_peek(long jarg1, long jarg2);
  public final static native long _frida_g_type_interface_peek_parent(long jarg1);
  public final static native long _frida_g_type_default_interface_ref(long jarg1);
  public final static native long _frida_g_type_default_interface_peek(long jarg1);
  public final static native void _frida_g_type_default_interface_unref(long jarg1);
  public final static native long _frida_g_type_children(long jarg1, long jarg2);
  public final static native long _frida_g_type_interfaces(long jarg1, long jarg2);
  public final static native void _frida_g_type_set_qdata(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_type_get_qdata(long jarg1, long jarg2);
  public final static native void _frida_g_type_query(long jarg1, long jarg2, _GTypeQuery jarg2_);
  public final static native int _frida_g_type_get_instance_count(long jarg1);
  public final static native int G_TYPE_FLAG_CLASSED_get();
  public final static native int G_TYPE_FLAG_INSTANTIATABLE_get();
  public final static native int G_TYPE_FLAG_DERIVABLE_get();
  public final static native int G_TYPE_FLAG_DEEP_DERIVABLE_get();
  public final static native int G_TYPE_FLAG_ABSTRACT_get();
  public final static native int G_TYPE_FLAG_VALUE_ABSTRACT_get();
  public final static native void _GTypeInfo_class_size_set(long jarg1, _GTypeInfo jarg1_, int jarg2);
  public final static native int _GTypeInfo_class_size_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_base_init_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_base_init_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_base_finalize_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_base_finalize_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_class_init_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_class_init_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_class_finalize_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_class_finalize_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_class_data_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_class_data_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_instance_size_set(long jarg1, _GTypeInfo jarg1_, int jarg2);
  public final static native int _GTypeInfo_instance_size_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_n_preallocs_set(long jarg1, _GTypeInfo jarg1_, int jarg2);
  public final static native int _GTypeInfo_n_preallocs_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_instance_init_set(long jarg1, _GTypeInfo jarg1_, long jarg2);
  public final static native long _GTypeInfo_instance_init_get(long jarg1, _GTypeInfo jarg1_);
  public final static native void _GTypeInfo_value_table_set(long jarg1, _GTypeInfo jarg1_, long jarg2, _GTypeValueTable jarg2_);
  public final static native long _GTypeInfo_value_table_get(long jarg1, _GTypeInfo jarg1_);
  public final static native long new__GTypeInfo();
  public final static native void delete__GTypeInfo(long jarg1);
  public final static native void _GTypeFundamentalInfo_type_flags_set(long jarg1, _GTypeFundamentalInfo jarg1_, int jarg2);
  public final static native int _GTypeFundamentalInfo_type_flags_get(long jarg1, _GTypeFundamentalInfo jarg1_);
  public final static native long new__GTypeFundamentalInfo();
  public final static native void delete__GTypeFundamentalInfo(long jarg1);
  public final static native void _GInterfaceInfo_interface_init_set(long jarg1, _GInterfaceInfo jarg1_, long jarg2);
  public final static native long _GInterfaceInfo_interface_init_get(long jarg1, _GInterfaceInfo jarg1_);
  public final static native void _GInterfaceInfo_interface_finalize_set(long jarg1, _GInterfaceInfo jarg1_, long jarg2);
  public final static native long _GInterfaceInfo_interface_finalize_get(long jarg1, _GInterfaceInfo jarg1_);
  public final static native void _GInterfaceInfo_interface_data_set(long jarg1, _GInterfaceInfo jarg1_, long jarg2);
  public final static native long _GInterfaceInfo_interface_data_get(long jarg1, _GInterfaceInfo jarg1_);
  public final static native long new__GInterfaceInfo();
  public final static native void delete__GInterfaceInfo(long jarg1);
  public final static native void _GTypeValueTable_value_init_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_init_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_value_free_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_free_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_value_copy_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_copy_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_value_peek_pointer_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_value_peek_pointer_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_collect_format_set(long jarg1, _GTypeValueTable jarg1_, String jarg2);
  public final static native String _GTypeValueTable_collect_format_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_collect_value_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_collect_value_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_lcopy_format_set(long jarg1, _GTypeValueTable jarg1_, String jarg2);
  public final static native String _GTypeValueTable_lcopy_format_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native void _GTypeValueTable_lcopy_value_set(long jarg1, _GTypeValueTable jarg1_, long jarg2);
  public final static native long _GTypeValueTable_lcopy_value_get(long jarg1, _GTypeValueTable jarg1_);
  public final static native long new__GTypeValueTable();
  public final static native void delete__GTypeValueTable(long jarg1);
  public final static native long _frida_g_type_register_static(long jarg1, String jarg2, long jarg3, _GTypeInfo jarg3_, int jarg4);
  public final static native long _frida_g_type_register_static_simple(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long _frida_g_type_register_dynamic(long jarg1, String jarg2, long jarg3, int jarg4);
  public final static native long _frida_g_type_register_fundamental(long jarg1, String jarg2, long jarg3, _GTypeInfo jarg3_, long jarg4, _GTypeFundamentalInfo jarg4_, int jarg5);
  public final static native void _frida_g_type_add_interface_static(long jarg1, long jarg2, long jarg3, _GInterfaceInfo jarg3_);
  public final static native void _frida_g_type_add_interface_dynamic(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_type_interface_add_prerequisite(long jarg1, long jarg2);
  public final static native long _frida_g_type_interface_prerequisites(long jarg1, long jarg2);
  public final static native void _frida_g_type_class_add_private(long jarg1, long jarg2);
  public final static native int _frida_g_type_add_instance_private(long jarg1, long jarg2);
  public final static native long _frida_g_type_instance_get_private(long jarg1, _GTypeInstance jarg1_, long jarg2);
  public final static native void _frida_g_type_class_adjust_private_offset(long jarg1, long jarg2);
  public final static native void _frida_g_type_add_class_private(long jarg1, long jarg2);
  public final static native long _frida_g_type_class_get_private(long jarg1, _GTypeClass jarg1_, long jarg2);
  public final static native int _frida_g_type_class_get_instance_private_offset(long jarg1);
  public final static native void _frida_g_type_ensure(long jarg1);
  public final static native long _frida_g_type_get_type_registration_serial();
  public final static native long _frida_g_type_get_plugin(long jarg1);
  public final static native long _frida_g_type_interface_get_plugin(long jarg1, long jarg2);
  public final static native long _frida_g_type_fundamental_next();
  public final static native long _frida_g_type_fundamental(long jarg1);
  public final static native long _frida_g_type_create_instance(long jarg1);
  public final static native void _frida_g_type_free_instance(long jarg1, _GTypeInstance jarg1_);
  public final static native void _frida_g_type_add_class_cache_func(long jarg1, long jarg2);
  public final static native void _frida_g_type_remove_class_cache_func(long jarg1, long jarg2);
  public final static native void _frida_g_type_class_unref_uncached(long jarg1);
  public final static native void _frida_g_type_add_interface_check(long jarg1, long jarg2);
  public final static native void _frida_g_type_remove_interface_check(long jarg1, long jarg2);
  public final static native long _frida_g_type_value_table_peek(long jarg1);
  public final static native int _frida_g_type_check_instance(long jarg1, _GTypeInstance jarg1_);
  public final static native long _frida_g_type_check_instance_cast(long jarg1, _GTypeInstance jarg1_, long jarg2);
  public final static native int _frida_g_type_check_instance_is_a(long jarg1, _GTypeInstance jarg1_, long jarg2);
  public final static native int _frida_g_type_check_instance_is_fundamentally_a(long jarg1, _GTypeInstance jarg1_, long jarg2);
  public final static native long _frida_g_type_check_class_cast(long jarg1, _GTypeClass jarg1_, long jarg2);
  public final static native int _frida_g_type_check_class_is_a(long jarg1, _GTypeClass jarg1_, long jarg2);
  public final static native int _frida_g_type_check_is_value_type(long jarg1);
  public final static native int _frida_g_type_check_value(long jarg1, _GValue jarg1_);
  public final static native int _frida_g_type_check_value_holds(long jarg1, _GValue jarg1_, long jarg2);
  public final static native int _frida_g_type_test_flags(long jarg1, long jarg2);
  public final static native String _frida_g_type_name_from_instance(long jarg1, _GTypeInstance jarg1_);
  public final static native String _frida_g_type_name_from_class(long jarg1, _GTypeClass jarg1_);
  public final static native void _GValue_g_type_set(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _GValue_g_type_get(long jarg1, _GValue jarg1_);
  public final static native long new__GValue();
  public final static native void delete__GValue(long jarg1);
  public final static native long _frida_g_value_init(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void _frida_g_value_copy(long jarg1, _GValue jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _frida_g_value_reset(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_unset(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_instance(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void _frida_g_value_init_from_instance(long jarg1, _GValue jarg1_, long jarg2);
  public final static native int _frida_g_value_fits_pointer(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_value_peek_pointer(long jarg1, _GValue jarg1_);
  public final static native int _frida_g_value_type_compatible(long jarg1, long jarg2);
  public final static native int _frida_g_value_type_transformable(long jarg1, long jarg2);
  public final static native int _frida_g_value_transform(long jarg1, _GValue jarg1_, long jarg2, _GValue jarg2_);
  public final static native void _frida_g_value_register_transform_func(long jarg1, long jarg2, long jarg3);
  public final static native int G_VALUE_NOCOPY_CONTENTS_get();
  public final static native int G_PARAM_READABLE_get();
  public final static native int G_PARAM_WRITABLE_get();
  public final static native int G_PARAM_READWRITE_get();
  public final static native int G_PARAM_CONSTRUCT_get();
  public final static native int G_PARAM_CONSTRUCT_ONLY_get();
  public final static native int G_PARAM_LAX_VALIDATION_get();
  public final static native int G_PARAM_STATIC_NAME_get();
  public final static native int G_PARAM_PRIVATE_get();
  public final static native int G_PARAM_STATIC_NICK_get();
  public final static native int G_PARAM_STATIC_BLURB_get();
  public final static native int G_PARAM_EXPLICIT_NOTIFY_get();
  public final static native int G_PARAM_DEPRECATED_get();
  public final static native int G_PARAM_MASK_get();
  public final static native int G_PARAM_USER_SHIFT_get();
  public final static native void _GParamSpec_g_type_instance_set(long jarg1, _GParamSpec jarg1_, long jarg2, _GTypeInstance jarg2_);
  public final static native long _GParamSpec_g_type_instance_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_name_set(long jarg1, _GParamSpec jarg1_, String jarg2);
  public final static native String _GParamSpec_name_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_flags_set(long jarg1, _GParamSpec jarg1_, int jarg2);
  public final static native int _GParamSpec_flags_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_value_type_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_value_type_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_owner_type_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_owner_type_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec__nick_set(long jarg1, _GParamSpec jarg1_, String jarg2);
  public final static native String _GParamSpec__nick_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec__blurb_set(long jarg1, _GParamSpec jarg1_, String jarg2);
  public final static native String _GParamSpec__blurb_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_qdata_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_qdata_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_ref_count_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_ref_count_get(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpec_param_id_set(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _GParamSpec_param_id_get(long jarg1, _GParamSpec jarg1_);
  public final static native long new__GParamSpec();
  public final static native void delete__GParamSpec(long jarg1);
  public final static native void _GParamSpecClass_g_type_class_set(long jarg1, _GParamSpecClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GParamSpecClass_g_type_class_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_value_type_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_value_type_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_finalize_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_finalize_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_value_set_default_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_value_set_default_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_value_validate_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_value_validate_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_values_cmp_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_values_cmp_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native void _GParamSpecClass_dummy_set(long jarg1, _GParamSpecClass jarg1_, long jarg2);
  public final static native long _GParamSpecClass_dummy_get(long jarg1, _GParamSpecClass jarg1_);
  public final static native long new__GParamSpecClass();
  public final static native void delete__GParamSpecClass(long jarg1);
  public final static native void _GParameter_name_set(long jarg1, _GParameter jarg1_, String jarg2);
  public final static native String _GParameter_name_get(long jarg1, _GParameter jarg1_);
  public final static native void _GParameter_value_set(long jarg1, _GParameter jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _GParameter_value_get(long jarg1, _GParameter jarg1_);
  public final static native long new__GParameter();
  public final static native void delete__GParameter(long jarg1);
  public final static native long _frida_g_param_spec_ref(long jarg1, _GParamSpec jarg1_);
  public final static native void _frida_g_param_spec_unref(long jarg1, _GParamSpec jarg1_);
  public final static native void _frida_g_param_spec_sink(long jarg1, _GParamSpec jarg1_);
  public final static native long _frida_g_param_spec_ref_sink(long jarg1, _GParamSpec jarg1_);
  public final static native long _frida_g_param_spec_get_qdata(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native void _frida_g_param_spec_set_qdata(long jarg1, _GParamSpec jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_param_spec_set_qdata_full(long jarg1, _GParamSpec jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_param_spec_steal_qdata(long jarg1, _GParamSpec jarg1_, long jarg2);
  public final static native long _frida_g_param_spec_get_redirect_target(long jarg1, _GParamSpec jarg1_);
  public final static native void _frida_g_param_value_set_default(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_);
  public final static native int _frida_g_param_value_defaults(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_);
  public final static native int _frida_g_param_value_validate(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_);
  public final static native int _frida_g_param_value_convert(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_, int jarg4);
  public final static native int _frida_g_param_values_cmp(long jarg1, _GParamSpec jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_);
  public final static native String _frida_g_param_spec_get_name(long jarg1, _GParamSpec jarg1_);
  public final static native String _frida_g_param_spec_get_nick(long jarg1, _GParamSpec jarg1_);
  public final static native String _frida_g_param_spec_get_blurb(long jarg1, _GParamSpec jarg1_);
  public final static native void _frida_g_value_set_param(long jarg1, _GValue jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _frida_g_value_get_param(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_value_dup_param(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_take_param(long jarg1, _GValue jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native void _frida_g_value_set_param_take_ownership(long jarg1, _GValue jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _frida_g_param_spec_get_default_value(long jarg1, _GParamSpec jarg1_);
  public final static native long _frida_g_param_spec_get_name_quark(long jarg1, _GParamSpec jarg1_);
  public final static native void _GParamSpecTypeInfo_instance_size_set(long jarg1, _GParamSpecTypeInfo jarg1_, int jarg2);
  public final static native int _GParamSpecTypeInfo_instance_size_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_n_preallocs_set(long jarg1, _GParamSpecTypeInfo jarg1_, int jarg2);
  public final static native int _GParamSpecTypeInfo_n_preallocs_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_instance_init_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_instance_init_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_value_type_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_value_type_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_finalize_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_finalize_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_value_set_default_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_value_set_default_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_value_validate_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_value_validate_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native void _GParamSpecTypeInfo_values_cmp_set(long jarg1, _GParamSpecTypeInfo jarg1_, long jarg2);
  public final static native long _GParamSpecTypeInfo_values_cmp_get(long jarg1, _GParamSpecTypeInfo jarg1_);
  public final static native long new__GParamSpecTypeInfo();
  public final static native void delete__GParamSpecTypeInfo(long jarg1);
  public final static native long _frida_g_param_type_register_static(String jarg1, long jarg2, _GParamSpecTypeInfo jarg2_);
  public final static native long _g_param_type_register_static_constant(String jarg1, long jarg2, _GParamSpecTypeInfo jarg2_, long jarg3);
  public final static native long _frida_g_param_spec_internal(long jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native long _frida_g_param_spec_pool_new(int jarg1);
  public final static native void _frida_g_param_spec_pool_insert(long jarg1, long jarg2, _GParamSpec jarg2_, long jarg3);
  public final static native void _frida_g_param_spec_pool_remove(long jarg1, long jarg2, _GParamSpec jarg2_);
  public final static native long _frida_g_param_spec_pool_lookup(long jarg1, String jarg2, long jarg3, int jarg4);
  public final static native long _frida_g_param_spec_pool_list_owned(long jarg1, long jarg2);
  public final static native long _frida_g_param_spec_pool_list(long jarg1, long jarg2, long jarg3);
  public final static native void _GClosureNotifyData_data_set(long jarg1, _GClosureNotifyData jarg1_, long jarg2);
  public final static native long _GClosureNotifyData_data_get(long jarg1, _GClosureNotifyData jarg1_);
  public final static native void _GClosureNotifyData_notify_set(long jarg1, _GClosureNotifyData jarg1_, long jarg2);
  public final static native long _GClosureNotifyData_notify_get(long jarg1, _GClosureNotifyData jarg1_);
  public final static native long new__GClosureNotifyData();
  public final static native void delete__GClosureNotifyData(long jarg1);
  public final static native void _GClosure_ref_count_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_ref_count_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_meta_marshal_nouse_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_meta_marshal_nouse_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_n_guards_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_n_guards_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_n_fnotifiers_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_n_fnotifiers_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_n_inotifiers_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_n_inotifiers_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_in_inotify_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_in_inotify_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_floating_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_floating_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_derivative_flag_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_derivative_flag_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_in_marshal_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_in_marshal_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_is_invalid_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_is_invalid_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_marshal_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_marshal_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_data_set(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native long _GClosure_data_get(long jarg1, _GClosure jarg1_);
  public final static native void _GClosure_notifiers_set(long jarg1, _GClosure jarg1_, long jarg2, _GClosureNotifyData jarg2_);
  public final static native long _GClosure_notifiers_get(long jarg1, _GClosure jarg1_);
  public final static native long new__GClosure();
  public final static native void delete__GClosure(long jarg1);
  public final static native void _GCClosure_closure_set(long jarg1, _GCClosure jarg1_, long jarg2, _GClosure jarg2_);
  public final static native long _GCClosure_closure_get(long jarg1, _GCClosure jarg1_);
  public final static native void _GCClosure_callback_set(long jarg1, _GCClosure jarg1_, long jarg2);
  public final static native long _GCClosure_callback_get(long jarg1, _GCClosure jarg1_);
  public final static native long new__GCClosure();
  public final static native void delete__GCClosure(long jarg1);
  public final static native long _frida_g_cclosure_new(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_cclosure_new_swap(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_signal_type_cclosure_new(long jarg1, long jarg2);
  public final static native long _frida_g_closure_ref(long jarg1, _GClosure jarg1_);
  public final static native void _frida_g_closure_sink(long jarg1, _GClosure jarg1_);
  public final static native void _frida_g_closure_unref(long jarg1, _GClosure jarg1_);
  public final static native long _frida_g_closure_new_simple(long jarg1, long jarg2);
  public final static native void _frida_g_closure_add_finalize_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_closure_remove_finalize_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_closure_add_invalidate_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_closure_remove_invalidate_notifier(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_closure_add_marshal_guards(long jarg1, _GClosure jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_closure_set_marshal(long jarg1, _GClosure jarg1_, long jarg2);
  public final static native void _frida_g_closure_set_meta_marshal(long jarg1, _GClosure jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_closure_invalidate(long jarg1, _GClosure jarg1_);
  public final static native void _frida_g_closure_invoke(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5);
  public final static native void _frida_g_cclosure_marshal_generic(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__VOID(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__BOOLEAN(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__CHAR(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__UCHAR(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__INT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__UINT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__LONG(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__ULONG(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__ENUM(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__FLAGS(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__FLOAT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__DOUBLE(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__STRING(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__PARAM(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__BOXED(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__POINTER(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__OBJECT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__VARIANT(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_VOID__UINT_POINTER(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_BOOLEAN__FLAGS(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_STRING__OBJECT_POINTER(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native void _frida_g_cclosure_marshal_BOOLEAN__BOXED_BOXED(long jarg1, _GClosure jarg1_, long jarg2, _GValue jarg2_, long jarg3, long jarg4, _GValue jarg4_, long jarg5, long jarg6);
  public final static native int G_SIGNAL_RUN_FIRST_get();
  public final static native int G_SIGNAL_RUN_LAST_get();
  public final static native int G_SIGNAL_RUN_CLEANUP_get();
  public final static native int G_SIGNAL_NO_RECURSE_get();
  public final static native int G_SIGNAL_DETAILED_get();
  public final static native int G_SIGNAL_ACTION_get();
  public final static native int G_SIGNAL_NO_HOOKS_get();
  public final static native int G_SIGNAL_MUST_COLLECT_get();
  public final static native int G_SIGNAL_DEPRECATED_get();
  public final static native int G_SIGNAL_FLAGS_MASK_get();
  public final static native int G_CONNECT_AFTER_get();
  public final static native int G_CONNECT_SWAPPED_get();
  public final static native int G_SIGNAL_MATCH_ID_get();
  public final static native int G_SIGNAL_MATCH_DETAIL_get();
  public final static native int G_SIGNAL_MATCH_CLOSURE_get();
  public final static native int G_SIGNAL_MATCH_FUNC_get();
  public final static native int G_SIGNAL_MATCH_DATA_get();
  public final static native int G_SIGNAL_MATCH_UNBLOCKED_get();
  public final static native int G_SIGNAL_MATCH_MASK_get();
  public final static native void _GSignalInvocationHint_signal_id_set(long jarg1, _GSignalInvocationHint jarg1_, long jarg2);
  public final static native long _GSignalInvocationHint_signal_id_get(long jarg1, _GSignalInvocationHint jarg1_);
  public final static native void _GSignalInvocationHint_detail_set(long jarg1, _GSignalInvocationHint jarg1_, long jarg2);
  public final static native long _GSignalInvocationHint_detail_get(long jarg1, _GSignalInvocationHint jarg1_);
  public final static native void _GSignalInvocationHint_run_type_set(long jarg1, _GSignalInvocationHint jarg1_, int jarg2);
  public final static native int _GSignalInvocationHint_run_type_get(long jarg1, _GSignalInvocationHint jarg1_);
  public final static native long new__GSignalInvocationHint();
  public final static native void delete__GSignalInvocationHint(long jarg1);
  public final static native void _GSignalQuery_signal_id_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_signal_id_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_signal_name_set(long jarg1, _GSignalQuery jarg1_, String jarg2);
  public final static native String _GSignalQuery_signal_name_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_itype_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_itype_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_signal_flags_set(long jarg1, _GSignalQuery jarg1_, int jarg2);
  public final static native int _GSignalQuery_signal_flags_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_return_type_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_return_type_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_n_params_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_n_params_get(long jarg1, _GSignalQuery jarg1_);
  public final static native void _GSignalQuery_param_types_set(long jarg1, _GSignalQuery jarg1_, long jarg2);
  public final static native long _GSignalQuery_param_types_get(long jarg1, _GSignalQuery jarg1_);
  public final static native long new__GSignalQuery();
  public final static native void delete__GSignalQuery(long jarg1);
  public final static native long _frida_g_signal_newv(String jarg1, long jarg2, int jarg3, long jarg4, _GClosure jarg4_, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10);
  public final static native long _frida_g_signal_new(String jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native long _frida_g_signal_new_class_handler(String jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void _frida_g_signal_set_va_marshaller(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_signal_emitv(long jarg1, _GValue jarg1_, long jarg2, long jarg3, long jarg4, _GValue jarg4_);
  public final static native void _frida_g_signal_emit(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_signal_emit_by_name(long jarg1, String jarg2);
  public final static native long _frida_g_signal_lookup(String jarg1, long jarg2);
  public final static native String _frida_g_signal_name(long jarg1);
  public final static native void _frida_g_signal_query(long jarg1, long jarg2, _GSignalQuery jarg2_);
  public final static native long _frida_g_signal_list_ids(long jarg1, long jarg2);
  public final static native int _frida_g_signal_parse_name(String jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native long _frida_g_signal_get_invocation_hint(long jarg1);
  public final static native void _frida_g_signal_stop_emission(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_signal_stop_emission_by_name(long jarg1, String jarg2);
  public final static native long _frida_g_signal_add_emission_hook(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_signal_remove_emission_hook(long jarg1, long jarg2);
  public final static native int _frida_g_signal_has_handler_pending(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long _frida_g_signal_connect_closure_by_id(long jarg1, long jarg2, long jarg3, long jarg4, _GClosure jarg4_, int jarg5);
  public final static native long _frida_g_signal_connect_closure(long jarg1, String jarg2, long jarg3, _GClosure jarg3_, int jarg4);
  public final static native long _frida_g_signal_connect_data(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void _frida_g_signal_handler_block(long jarg1, long jarg2);
  public final static native void _frida_g_signal_handler_unblock(long jarg1, long jarg2);
  public final static native void _frida_g_signal_handler_disconnect(long jarg1, long jarg2);
  public final static native int _frida_g_signal_handler_is_connected(long jarg1, long jarg2);
  public final static native long _frida_g_signal_handler_find(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_signal_handlers_block_matched(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_signal_handlers_unblock_matched(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_signal_handlers_disconnect_matched(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, _GClosure jarg5_, long jarg6, long jarg7);
  public final static native void _frida_g_signal_override_class_closure(long jarg1, long jarg2, long jarg3, _GClosure jarg3_);
  public final static native void _frida_g_signal_override_class_handler(String jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_signal_chain_from_overridden(long jarg1, _GValue jarg1_, long jarg2, _GValue jarg2_);
  public final static native void _frida_g_signal_chain_from_overridden_handler(long jarg1);
  public final static native int _frida_g_signal_accumulator_true_handled(long jarg1, _GSignalInvocationHint jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_, long jarg4);
  public final static native int _frida_g_signal_accumulator_first_wins(long jarg1, _GSignalInvocationHint jarg1_, long jarg2, _GValue jarg2_, long jarg3, _GValue jarg3_, long jarg4);
  public final static native void _frida_g_signal_handlers_destroy(long jarg1);
  public final static native void _g_signals_destroy(long jarg1);
  public final static native long _frida_g_date_get_type();
  public final static native long _frida_g_strv_get_type();
  public final static native long _frida_g_gstring_get_type();
  public final static native long _frida_g_hash_table_get_type();
  public final static native long _frida_g_array_get_type();
  public final static native long _frida_g_byte_array_get_type();
  public final static native long _frida_g_ptr_array_get_type();
  public final static native long _frida_g_bytes_get_type();
  public final static native long _frida_g_variant_type_get_gtype();
  public final static native long _frida_g_regex_get_type();
  public final static native long _frida_g_match_info_get_type();
  public final static native long _frida_g_error_get_type();
  public final static native long _frida_g_date_time_get_type();
  public final static native long _frida_g_time_zone_get_type();
  public final static native long _frida_g_io_channel_get_type();
  public final static native long _frida_g_io_condition_get_type();
  public final static native long _frida_g_variant_builder_get_type();
  public final static native long _frida_g_variant_dict_get_type();
  public final static native long _frida_g_key_file_get_type();
  public final static native long _frida_g_main_loop_get_type();
  public final static native long _frida_g_main_context_get_type();
  public final static native long _frida_g_source_get_type();
  public final static native long _frida_g_pollfd_get_type();
  public final static native long _frida_g_thread_get_type();
  public final static native long _frida_g_checksum_get_type();
  public final static native long _frida_g_markup_parse_context_get_type();
  public final static native long _frida_g_mapped_file_get_type();
  public final static native long _frida_g_option_group_get_type();
  public final static native long _frida_g_variant_get_gtype();
  public final static native long _frida_g_boxed_copy(long jarg1, long jarg2);
  public final static native void _frida_g_boxed_free(long jarg1, long jarg2);
  public final static native void _frida_g_value_set_boxed(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void _frida_g_value_set_static_boxed(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void _frida_g_value_take_boxed(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void _frida_g_value_set_boxed_take_ownership(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_boxed(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_value_dup_boxed(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_boxed_type_register_static(String jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_closure_get_type();
  public final static native long _frida_g_value_get_type();
  public final static native void _GObject_g_type_instance_set(long jarg1, _GObject jarg1_, long jarg2, _GTypeInstance jarg2_);
  public final static native long _GObject_g_type_instance_get(long jarg1, _GObject jarg1_);
  public final static native void _GObject_ref_count_set(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long _GObject_ref_count_get(long jarg1, _GObject jarg1_);
  public final static native void _GObject_qdata_set(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long _GObject_qdata_get(long jarg1, _GObject jarg1_);
  public final static native long new__GObject();
  public final static native void delete__GObject(long jarg1);
  public final static native void _GObjectClass_g_type_class_set(long jarg1, _GObjectClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GObjectClass_g_type_class_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_construct_properties_set(long jarg1, _GObjectClass jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GObjectClass_construct_properties_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_constructor_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_constructor_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_set_property_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_set_property_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_get_property_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_get_property_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_dispose_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_dispose_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_finalize_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_finalize_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_dispatch_properties_changed_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_dispatch_properties_changed_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_notify_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_notify_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_constructed_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_constructed_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_flags_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_flags_get(long jarg1, _GObjectClass jarg1_);
  public final static native void _GObjectClass_pdummy_set(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native long _GObjectClass_pdummy_get(long jarg1, _GObjectClass jarg1_);
  public final static native long new__GObjectClass();
  public final static native void delete__GObjectClass(long jarg1);
  public final static native void _GObjectConstructParam_pspec_set(long jarg1, _GObjectConstructParam jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GObjectConstructParam_pspec_get(long jarg1, _GObjectConstructParam jarg1_);
  public final static native void _GObjectConstructParam_value_set(long jarg1, _GObjectConstructParam jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _GObjectConstructParam_value_get(long jarg1, _GObjectConstructParam jarg1_);
  public final static native long new__GObjectConstructParam();
  public final static native void delete__GObjectConstructParam(long jarg1);
  public final static native long _frida_g_initially_unowned_get_type();
  public final static native void _frida_g_object_class_install_property(long jarg1, _GObjectClass jarg1_, long jarg2, long jarg3, _GParamSpec jarg3_);
  public final static native long _frida_g_object_class_find_property(long jarg1, _GObjectClass jarg1_, String jarg2);
  public final static native long _frida_g_object_class_list_properties(long jarg1, _GObjectClass jarg1_, long jarg2);
  public final static native void _frida_g_object_class_override_property(long jarg1, _GObjectClass jarg1_, long jarg2, String jarg3);
  public final static native void _frida_g_object_class_install_properties(long jarg1, _GObjectClass jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_object_interface_install_property(long jarg1, long jarg2, _GParamSpec jarg2_);
  public final static native long _frida_g_object_interface_find_property(long jarg1, String jarg2);
  public final static native long _frida_g_object_interface_list_properties(long jarg1, long jarg2);
  public final static native long _frida_g_object_get_type();
  public final static native long _frida_g_object_new(long jarg1, String jarg2);
  public final static native long _frida_g_object_new_with_properties(long jarg1, long jarg2, long jarg3, long jarg4, _GValue jarg4_);
  public final static native long _frida_g_object_newv(long jarg1, long jarg2, long jarg3, _GParameter jarg3_);
  public final static native void _frida_g_object_set(long jarg1, String jarg2);
  public final static native void _frida_g_object_get(long jarg1, String jarg2);
  public final static native long _frida_g_object_connect(long jarg1, String jarg2);
  public final static native void _frida_g_object_disconnect(long jarg1, String jarg2);
  public final static native void _frida_g_object_setv(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, _GValue jarg4_);
  public final static native void _frida_g_object_getv(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, _GValue jarg4_);
  public final static native void _frida_g_object_set_property(long jarg1, _GObject jarg1_, String jarg2, long jarg3, _GValue jarg3_);
  public final static native void _frida_g_object_get_property(long jarg1, _GObject jarg1_, String jarg2, long jarg3, _GValue jarg3_);
  public final static native void _frida_g_object_freeze_notify(long jarg1, _GObject jarg1_);
  public final static native void _frida_g_object_notify(long jarg1, _GObject jarg1_, String jarg2);
  public final static native void _frida_g_object_notify_by_pspec(long jarg1, _GObject jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native void _frida_g_object_thaw_notify(long jarg1, _GObject jarg1_);
  public final static native int _frida_g_object_is_floating(long jarg1);
  public final static native long _frida_g_object_ref_sink(long jarg1);
  public final static native long _frida_g_object_ref(long jarg1);
  public final static native void _frida_g_object_unref(long jarg1);
  public final static native void _frida_g_object_weak_ref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_object_weak_unref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_object_add_weak_pointer(long jarg1, _GObject jarg1_, long jarg2);
  public final static native void _frida_g_object_remove_weak_pointer(long jarg1, _GObject jarg1_, long jarg2);
  public final static native void _frida_g_object_add_toggle_ref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_object_remove_toggle_ref(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_object_get_qdata(long jarg1, _GObject jarg1_, long jarg2);
  public final static native void _frida_g_object_set_qdata(long jarg1, _GObject jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_object_set_qdata_full(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_object_steal_qdata(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long _frida_g_object_dup_qdata(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_object_replace_qdata(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long _frida_g_object_get_data(long jarg1, _GObject jarg1_, String jarg2);
  public final static native void _frida_g_object_set_data(long jarg1, _GObject jarg1_, String jarg2, long jarg3);
  public final static native void _frida_g_object_set_data_full(long jarg1, _GObject jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_object_steal_data(long jarg1, _GObject jarg1_, String jarg2);
  public final static native long _frida_g_object_dup_data(long jarg1, _GObject jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_object_replace_data(long jarg1, _GObject jarg1_, String jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_object_watch_closure(long jarg1, _GObject jarg1_, long jarg2, _GClosure jarg2_);
  public final static native long _frida_g_cclosure_new_object(long jarg1, long jarg2, _GObject jarg2_);
  public final static native long _frida_g_cclosure_new_object_swap(long jarg1, long jarg2, _GObject jarg2_);
  public final static native long _frida_g_closure_new_object(long jarg1, long jarg2, _GObject jarg2_);
  public final static native void _frida_g_value_set_object(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_object(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_value_dup_object(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_signal_connect_object(long jarg1, String jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void _frida_g_object_force_floating(long jarg1, _GObject jarg1_);
  public final static native void _frida_g_object_run_dispose(long jarg1, _GObject jarg1_);
  public final static native void _frida_g_value_take_object(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void _frida_g_value_set_object_take_ownership(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_object_compat_control(long jarg1, long jarg2);
  public final static native void _frida_g_clear_object(long jarg1);
  public final static native int g_set_object(long jarg1, long jarg2, _GObject jarg2_);
  public final static native void g_clear_weak_pointer(long jarg1);
  public final static native int g_set_weak_pointer(long jarg1, long jarg2, _GObject jarg2_);
  public final static native long new_GWeakRef();
  public final static native void delete_GWeakRef(long jarg1);
  public final static native void _frida_g_weak_ref_init(long jarg1, GWeakRef jarg1_, long jarg2);
  public final static native void _frida_g_weak_ref_clear(long jarg1, GWeakRef jarg1_);
  public final static native long _frida_g_weak_ref_get(long jarg1, GWeakRef jarg1_);
  public final static native void _frida_g_weak_ref_set(long jarg1, GWeakRef jarg1_, long jarg2);
  public final static native int G_BINDING_DEFAULT_get();
  public final static native int G_BINDING_BIDIRECTIONAL_get();
  public final static native int G_BINDING_SYNC_CREATE_get();
  public final static native int G_BINDING_INVERT_BOOLEAN_get();
  public final static native long _frida_g_binding_flags_get_type();
  public final static native long _frida_g_binding_get_type();
  public final static native int _frida_g_binding_get_flags(long jarg1);
  public final static native long _frida_g_binding_get_source(long jarg1);
  public final static native long _frida_g_binding_get_target(long jarg1);
  public final static native String _frida_g_binding_get_source_property(long jarg1);
  public final static native String _frida_g_binding_get_target_property(long jarg1);
  public final static native void _frida_g_binding_unbind(long jarg1);
  public final static native long _frida_g_object_bind_property(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5);
  public final static native long _frida_g_object_bind_property_full(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native long _frida_g_object_bind_property_with_closures(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5, long jarg6, _GClosure jarg6_, long jarg7, _GClosure jarg7_);
  public final static native void _GEnumClass_g_type_class_set(long jarg1, _GEnumClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GEnumClass_g_type_class_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_minimum_set(long jarg1, _GEnumClass jarg1_, int jarg2);
  public final static native int _GEnumClass_minimum_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_maximum_set(long jarg1, _GEnumClass jarg1_, int jarg2);
  public final static native int _GEnumClass_maximum_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_n_values_set(long jarg1, _GEnumClass jarg1_, long jarg2);
  public final static native long _GEnumClass_n_values_get(long jarg1, _GEnumClass jarg1_);
  public final static native void _GEnumClass_values_set(long jarg1, _GEnumClass jarg1_, long jarg2, _GEnumValue jarg2_);
  public final static native long _GEnumClass_values_get(long jarg1, _GEnumClass jarg1_);
  public final static native long new__GEnumClass();
  public final static native void delete__GEnumClass(long jarg1);
  public final static native void _GFlagsClass_g_type_class_set(long jarg1, _GFlagsClass jarg1_, long jarg2, _GTypeClass jarg2_);
  public final static native long _GFlagsClass_g_type_class_get(long jarg1, _GFlagsClass jarg1_);
  public final static native void _GFlagsClass_mask_set(long jarg1, _GFlagsClass jarg1_, long jarg2);
  public final static native long _GFlagsClass_mask_get(long jarg1, _GFlagsClass jarg1_);
  public final static native void _GFlagsClass_n_values_set(long jarg1, _GFlagsClass jarg1_, long jarg2);
  public final static native long _GFlagsClass_n_values_get(long jarg1, _GFlagsClass jarg1_);
  public final static native void _GFlagsClass_values_set(long jarg1, _GFlagsClass jarg1_, long jarg2, _GFlagsValue jarg2_);
  public final static native long _GFlagsClass_values_get(long jarg1, _GFlagsClass jarg1_);
  public final static native long new__GFlagsClass();
  public final static native void delete__GFlagsClass(long jarg1);
  public final static native void _GEnumValue_value_set(long jarg1, _GEnumValue jarg1_, int jarg2);
  public final static native int _GEnumValue_value_get(long jarg1, _GEnumValue jarg1_);
  public final static native void _GEnumValue_value_name_set(long jarg1, _GEnumValue jarg1_, String jarg2);
  public final static native String _GEnumValue_value_name_get(long jarg1, _GEnumValue jarg1_);
  public final static native void _GEnumValue_value_nick_set(long jarg1, _GEnumValue jarg1_, String jarg2);
  public final static native String _GEnumValue_value_nick_get(long jarg1, _GEnumValue jarg1_);
  public final static native long new__GEnumValue();
  public final static native void delete__GEnumValue(long jarg1);
  public final static native void _GFlagsValue_value_set(long jarg1, _GFlagsValue jarg1_, long jarg2);
  public final static native long _GFlagsValue_value_get(long jarg1, _GFlagsValue jarg1_);
  public final static native void _GFlagsValue_value_name_set(long jarg1, _GFlagsValue jarg1_, String jarg2);
  public final static native String _GFlagsValue_value_name_get(long jarg1, _GFlagsValue jarg1_);
  public final static native void _GFlagsValue_value_nick_set(long jarg1, _GFlagsValue jarg1_, String jarg2);
  public final static native String _GFlagsValue_value_nick_get(long jarg1, _GFlagsValue jarg1_);
  public final static native long new__GFlagsValue();
  public final static native void delete__GFlagsValue(long jarg1);
  public final static native long _frida_g_enum_get_value(long jarg1, _GEnumClass jarg1_, int jarg2);
  public final static native long _frida_g_enum_get_value_by_name(long jarg1, _GEnumClass jarg1_, String jarg2);
  public final static native long _frida_g_enum_get_value_by_nick(long jarg1, _GEnumClass jarg1_, String jarg2);
  public final static native long _frida_g_flags_get_first_value(long jarg1, _GFlagsClass jarg1_, long jarg2);
  public final static native long _frida_g_flags_get_value_by_name(long jarg1, _GFlagsClass jarg1_, String jarg2);
  public final static native long _frida_g_flags_get_value_by_nick(long jarg1, _GFlagsClass jarg1_, String jarg2);
  public final static native String _frida_g_enum_to_string(long jarg1, int jarg2);
  public final static native String _frida_g_flags_to_string(long jarg1, long jarg2);
  public final static native void _frida_g_value_set_enum(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int _frida_g_value_get_enum(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_flags(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_flags(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_enum_register_static(String jarg1, long jarg2, _GEnumValue jarg2_);
  public final static native long _frida_g_flags_register_static(String jarg1, long jarg2, _GFlagsValue jarg2_);
  public final static native void _frida_g_enum_complete_type_info(long jarg1, long jarg2, _GTypeInfo jarg2_, long jarg3, _GEnumValue jarg3_);
  public final static native void _frida_g_flags_complete_type_info(long jarg1, long jarg2, _GTypeInfo jarg2_, long jarg3, _GFlagsValue jarg3_);
  public final static native void _GParamSpecChar_parent_instance_set(long jarg1, _GParamSpecChar jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecChar_parent_instance_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native void _GParamSpecChar_minimum_set(long jarg1, _GParamSpecChar jarg1_, byte jarg2);
  public final static native byte _GParamSpecChar_minimum_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native void _GParamSpecChar_maximum_set(long jarg1, _GParamSpecChar jarg1_, byte jarg2);
  public final static native byte _GParamSpecChar_maximum_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native void _GParamSpecChar_default_value_set(long jarg1, _GParamSpecChar jarg1_, byte jarg2);
  public final static native byte _GParamSpecChar_default_value_get(long jarg1, _GParamSpecChar jarg1_);
  public final static native long new__GParamSpecChar();
  public final static native void delete__GParamSpecChar(long jarg1);
  public final static native void _GParamSpecUChar_parent_instance_set(long jarg1, _GParamSpecUChar jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUChar_parent_instance_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native void _GParamSpecUChar_minimum_set(long jarg1, _GParamSpecUChar jarg1_, short jarg2);
  public final static native short _GParamSpecUChar_minimum_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native void _GParamSpecUChar_maximum_set(long jarg1, _GParamSpecUChar jarg1_, short jarg2);
  public final static native short _GParamSpecUChar_maximum_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native void _GParamSpecUChar_default_value_set(long jarg1, _GParamSpecUChar jarg1_, short jarg2);
  public final static native short _GParamSpecUChar_default_value_get(long jarg1, _GParamSpecUChar jarg1_);
  public final static native long new__GParamSpecUChar();
  public final static native void delete__GParamSpecUChar(long jarg1);
  public final static native void _GParamSpecBoolean_parent_instance_set(long jarg1, _GParamSpecBoolean jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecBoolean_parent_instance_get(long jarg1, _GParamSpecBoolean jarg1_);
  public final static native void _GParamSpecBoolean_default_value_set(long jarg1, _GParamSpecBoolean jarg1_, int jarg2);
  public final static native int _GParamSpecBoolean_default_value_get(long jarg1, _GParamSpecBoolean jarg1_);
  public final static native long new__GParamSpecBoolean();
  public final static native void delete__GParamSpecBoolean(long jarg1);
  public final static native void _GParamSpecInt_parent_instance_set(long jarg1, _GParamSpecInt jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecInt_parent_instance_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native void _GParamSpecInt_minimum_set(long jarg1, _GParamSpecInt jarg1_, int jarg2);
  public final static native int _GParamSpecInt_minimum_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native void _GParamSpecInt_maximum_set(long jarg1, _GParamSpecInt jarg1_, int jarg2);
  public final static native int _GParamSpecInt_maximum_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native void _GParamSpecInt_default_value_set(long jarg1, _GParamSpecInt jarg1_, int jarg2);
  public final static native int _GParamSpecInt_default_value_get(long jarg1, _GParamSpecInt jarg1_);
  public final static native long new__GParamSpecInt();
  public final static native void delete__GParamSpecInt(long jarg1);
  public final static native void _GParamSpecUInt_parent_instance_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUInt_parent_instance_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native void _GParamSpecUInt_minimum_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2);
  public final static native long _GParamSpecUInt_minimum_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native void _GParamSpecUInt_maximum_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2);
  public final static native long _GParamSpecUInt_maximum_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native void _GParamSpecUInt_default_value_set(long jarg1, _GParamSpecUInt jarg1_, long jarg2);
  public final static native long _GParamSpecUInt_default_value_get(long jarg1, _GParamSpecUInt jarg1_);
  public final static native long new__GParamSpecUInt();
  public final static native void delete__GParamSpecUInt(long jarg1);
  public final static native void _GParamSpecLong_parent_instance_set(long jarg1, _GParamSpecLong jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecLong_parent_instance_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native void _GParamSpecLong_minimum_set(long jarg1, _GParamSpecLong jarg1_, int jarg2);
  public final static native int _GParamSpecLong_minimum_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native void _GParamSpecLong_maximum_set(long jarg1, _GParamSpecLong jarg1_, int jarg2);
  public final static native int _GParamSpecLong_maximum_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native void _GParamSpecLong_default_value_set(long jarg1, _GParamSpecLong jarg1_, int jarg2);
  public final static native int _GParamSpecLong_default_value_get(long jarg1, _GParamSpecLong jarg1_);
  public final static native long new__GParamSpecLong();
  public final static native void delete__GParamSpecLong(long jarg1);
  public final static native void _GParamSpecULong_parent_instance_set(long jarg1, _GParamSpecULong jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecULong_parent_instance_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native void _GParamSpecULong_minimum_set(long jarg1, _GParamSpecULong jarg1_, long jarg2);
  public final static native long _GParamSpecULong_minimum_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native void _GParamSpecULong_maximum_set(long jarg1, _GParamSpecULong jarg1_, long jarg2);
  public final static native long _GParamSpecULong_maximum_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native void _GParamSpecULong_default_value_set(long jarg1, _GParamSpecULong jarg1_, long jarg2);
  public final static native long _GParamSpecULong_default_value_get(long jarg1, _GParamSpecULong jarg1_);
  public final static native long new__GParamSpecULong();
  public final static native void delete__GParamSpecULong(long jarg1);
  public final static native void _GParamSpecInt64_parent_instance_set(long jarg1, _GParamSpecInt64 jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecInt64_parent_instance_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native void _GParamSpecInt64_minimum_set(long jarg1, _GParamSpecInt64 jarg1_, int jarg2);
  public final static native int _GParamSpecInt64_minimum_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native void _GParamSpecInt64_maximum_set(long jarg1, _GParamSpecInt64 jarg1_, int jarg2);
  public final static native int _GParamSpecInt64_maximum_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native void _GParamSpecInt64_default_value_set(long jarg1, _GParamSpecInt64 jarg1_, int jarg2);
  public final static native int _GParamSpecInt64_default_value_get(long jarg1, _GParamSpecInt64 jarg1_);
  public final static native long new__GParamSpecInt64();
  public final static native void delete__GParamSpecInt64(long jarg1);
  public final static native void _GParamSpecUInt64_parent_instance_set(long jarg1, _GParamSpecUInt64 jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUInt64_parent_instance_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native void _GParamSpecUInt64_minimum_set(long jarg1, _GParamSpecUInt64 jarg1_, long jarg2);
  public final static native long _GParamSpecUInt64_minimum_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native void _GParamSpecUInt64_maximum_set(long jarg1, _GParamSpecUInt64 jarg1_, long jarg2);
  public final static native long _GParamSpecUInt64_maximum_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native void _GParamSpecUInt64_default_value_set(long jarg1, _GParamSpecUInt64 jarg1_, long jarg2);
  public final static native long _GParamSpecUInt64_default_value_get(long jarg1, _GParamSpecUInt64 jarg1_);
  public final static native long new__GParamSpecUInt64();
  public final static native void delete__GParamSpecUInt64(long jarg1);
  public final static native void _GParamSpecUnichar_parent_instance_set(long jarg1, _GParamSpecUnichar jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecUnichar_parent_instance_get(long jarg1, _GParamSpecUnichar jarg1_);
  public final static native void _GParamSpecUnichar_default_value_set(long jarg1, _GParamSpecUnichar jarg1_, long jarg2);
  public final static native long _GParamSpecUnichar_default_value_get(long jarg1, _GParamSpecUnichar jarg1_);
  public final static native long new__GParamSpecUnichar();
  public final static native void delete__GParamSpecUnichar(long jarg1);
  public final static native void _GParamSpecEnum_parent_instance_set(long jarg1, _GParamSpecEnum jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecEnum_parent_instance_get(long jarg1, _GParamSpecEnum jarg1_);
  public final static native void _GParamSpecEnum_enum_class_set(long jarg1, _GParamSpecEnum jarg1_, long jarg2, _GEnumClass jarg2_);
  public final static native long _GParamSpecEnum_enum_class_get(long jarg1, _GParamSpecEnum jarg1_);
  public final static native void _GParamSpecEnum_default_value_set(long jarg1, _GParamSpecEnum jarg1_, int jarg2);
  public final static native int _GParamSpecEnum_default_value_get(long jarg1, _GParamSpecEnum jarg1_);
  public final static native long new__GParamSpecEnum();
  public final static native void delete__GParamSpecEnum(long jarg1);
  public final static native void _GParamSpecFlags_parent_instance_set(long jarg1, _GParamSpecFlags jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecFlags_parent_instance_get(long jarg1, _GParamSpecFlags jarg1_);
  public final static native void _GParamSpecFlags_flags_class_set(long jarg1, _GParamSpecFlags jarg1_, long jarg2, _GFlagsClass jarg2_);
  public final static native long _GParamSpecFlags_flags_class_get(long jarg1, _GParamSpecFlags jarg1_);
  public final static native void _GParamSpecFlags_default_value_set(long jarg1, _GParamSpecFlags jarg1_, long jarg2);
  public final static native long _GParamSpecFlags_default_value_get(long jarg1, _GParamSpecFlags jarg1_);
  public final static native long new__GParamSpecFlags();
  public final static native void delete__GParamSpecFlags(long jarg1);
  public final static native void _GParamSpecFloat_parent_instance_set(long jarg1, _GParamSpecFloat jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecFloat_parent_instance_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_minimum_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_minimum_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_maximum_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_maximum_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_default_value_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_default_value_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native void _GParamSpecFloat_epsilon_set(long jarg1, _GParamSpecFloat jarg1_, float jarg2);
  public final static native float _GParamSpecFloat_epsilon_get(long jarg1, _GParamSpecFloat jarg1_);
  public final static native long new__GParamSpecFloat();
  public final static native void delete__GParamSpecFloat(long jarg1);
  public final static native void _GParamSpecDouble_parent_instance_set(long jarg1, _GParamSpecDouble jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecDouble_parent_instance_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_minimum_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_minimum_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_maximum_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_maximum_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_default_value_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_default_value_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native void _GParamSpecDouble_epsilon_set(long jarg1, _GParamSpecDouble jarg1_, double jarg2);
  public final static native double _GParamSpecDouble_epsilon_get(long jarg1, _GParamSpecDouble jarg1_);
  public final static native long new__GParamSpecDouble();
  public final static native void delete__GParamSpecDouble(long jarg1);
  public final static native void _GParamSpecString_parent_instance_set(long jarg1, _GParamSpecString jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecString_parent_instance_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_default_value_set(long jarg1, _GParamSpecString jarg1_, String jarg2);
  public final static native String _GParamSpecString_default_value_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_cset_first_set(long jarg1, _GParamSpecString jarg1_, String jarg2);
  public final static native String _GParamSpecString_cset_first_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_cset_nth_set(long jarg1, _GParamSpecString jarg1_, String jarg2);
  public final static native String _GParamSpecString_cset_nth_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_substitutor_set(long jarg1, _GParamSpecString jarg1_, char jarg2);
  public final static native char _GParamSpecString_substitutor_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_null_fold_if_empty_set(long jarg1, _GParamSpecString jarg1_, long jarg2);
  public final static native long _GParamSpecString_null_fold_if_empty_get(long jarg1, _GParamSpecString jarg1_);
  public final static native void _GParamSpecString_ensure_non_null_set(long jarg1, _GParamSpecString jarg1_, long jarg2);
  public final static native long _GParamSpecString_ensure_non_null_get(long jarg1, _GParamSpecString jarg1_);
  public final static native long new__GParamSpecString();
  public final static native void delete__GParamSpecString(long jarg1);
  public final static native void _GParamSpecParam_parent_instance_set(long jarg1, _GParamSpecParam jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecParam_parent_instance_get(long jarg1, _GParamSpecParam jarg1_);
  public final static native long new__GParamSpecParam();
  public final static native void delete__GParamSpecParam(long jarg1);
  public final static native void _GParamSpecBoxed_parent_instance_set(long jarg1, _GParamSpecBoxed jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecBoxed_parent_instance_get(long jarg1, _GParamSpecBoxed jarg1_);
  public final static native long new__GParamSpecBoxed();
  public final static native void delete__GParamSpecBoxed(long jarg1);
  public final static native void _GParamSpecPointer_parent_instance_set(long jarg1, _GParamSpecPointer jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecPointer_parent_instance_get(long jarg1, _GParamSpecPointer jarg1_);
  public final static native long new__GParamSpecPointer();
  public final static native void delete__GParamSpecPointer(long jarg1);
  public final static native void _GParamSpecValueArray_parent_instance_set(long jarg1, _GParamSpecValueArray jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecValueArray_parent_instance_get(long jarg1, _GParamSpecValueArray jarg1_);
  public final static native void _GParamSpecValueArray_element_spec_set(long jarg1, _GParamSpecValueArray jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecValueArray_element_spec_get(long jarg1, _GParamSpecValueArray jarg1_);
  public final static native void _GParamSpecValueArray_fixed_n_elements_set(long jarg1, _GParamSpecValueArray jarg1_, long jarg2);
  public final static native long _GParamSpecValueArray_fixed_n_elements_get(long jarg1, _GParamSpecValueArray jarg1_);
  public final static native long new__GParamSpecValueArray();
  public final static native void delete__GParamSpecValueArray(long jarg1);
  public final static native void _GParamSpecObject_parent_instance_set(long jarg1, _GParamSpecObject jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecObject_parent_instance_get(long jarg1, _GParamSpecObject jarg1_);
  public final static native long new__GParamSpecObject();
  public final static native void delete__GParamSpecObject(long jarg1);
  public final static native void _GParamSpecOverride_parent_instance_set(long jarg1, _GParamSpecOverride jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecOverride_parent_instance_get(long jarg1, _GParamSpecOverride jarg1_);
  public final static native void _GParamSpecOverride_overridden_set(long jarg1, _GParamSpecOverride jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecOverride_overridden_get(long jarg1, _GParamSpecOverride jarg1_);
  public final static native long new__GParamSpecOverride();
  public final static native void delete__GParamSpecOverride(long jarg1);
  public final static native void _GParamSpecGType_parent_instance_set(long jarg1, _GParamSpecGType jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecGType_parent_instance_get(long jarg1, _GParamSpecGType jarg1_);
  public final static native void _GParamSpecGType_is_a_type_set(long jarg1, _GParamSpecGType jarg1_, long jarg2);
  public final static native long _GParamSpecGType_is_a_type_get(long jarg1, _GParamSpecGType jarg1_);
  public final static native long new__GParamSpecGType();
  public final static native void delete__GParamSpecGType(long jarg1);
  public final static native void _GParamSpecVariant_parent_instance_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2, _GParamSpec jarg2_);
  public final static native long _GParamSpecVariant_parent_instance_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native void _GParamSpecVariant_type_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2);
  public final static native long _GParamSpecVariant_type_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native void _GParamSpecVariant_default_value_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2);
  public final static native long _GParamSpecVariant_default_value_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native void _GParamSpecVariant_padding_set(long jarg1, _GParamSpecVariant jarg1_, long jarg2);
  public final static native long _GParamSpecVariant_padding_get(long jarg1, _GParamSpecVariant jarg1_);
  public final static native long new__GParamSpecVariant();
  public final static native void delete__GParamSpecVariant(long jarg1);
  public final static native long _frida_g_param_spec_char(String jarg1, String jarg2, String jarg3, byte jarg4, byte jarg5, byte jarg6, int jarg7);
  public final static native long _frida_g_param_spec_uchar(String jarg1, String jarg2, String jarg3, short jarg4, short jarg5, short jarg6, int jarg7);
  public final static native long _frida_g_param_spec_boolean(String jarg1, String jarg2, String jarg3, int jarg4, int jarg5);
  public final static native long _frida_g_param_spec_int(String jarg1, String jarg2, String jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long _frida_g_param_spec_uint(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long _frida_g_param_spec_long(String jarg1, String jarg2, String jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long _frida_g_param_spec_ulong(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long _frida_g_param_spec_int64(String jarg1, String jarg2, String jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native long _frida_g_param_spec_uint64(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, long jarg6, int jarg7);
  public final static native long _frida_g_param_spec_unichar(String jarg1, String jarg2, String jarg3, long jarg4, int jarg5);
  public final static native long _frida_g_param_spec_enum(String jarg1, String jarg2, String jarg3, long jarg4, int jarg5, int jarg6);
  public final static native long _frida_g_param_spec_flags(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, int jarg6);
  public final static native long _frida_g_param_spec_float(String jarg1, String jarg2, String jarg3, float jarg4, float jarg5, float jarg6, int jarg7);
  public final static native long _frida_g_param_spec_double(String jarg1, String jarg2, String jarg3, double jarg4, double jarg5, double jarg6, int jarg7);
  public final static native long _frida_g_param_spec_string(String jarg1, String jarg2, String jarg3, String jarg4, int jarg5);
  public final static native long _frida_g_param_spec_param(String jarg1, String jarg2, String jarg3, long jarg4, int jarg5);
  public final static native long _frida_g_param_spec_boxed(String jarg1, String jarg2, String jarg3, long jarg4, int jarg5);
  public final static native long _frida_g_param_spec_pointer(String jarg1, String jarg2, String jarg3, int jarg4);
  public final static native long _frida_g_param_spec_value_array(String jarg1, String jarg2, String jarg3, long jarg4, _GParamSpec jarg4_, int jarg5);
  public final static native long _frida_g_param_spec_object(String jarg1, String jarg2, String jarg3, long jarg4, int jarg5);
  public final static native long _frida_g_param_spec_override(String jarg1, long jarg2, _GParamSpec jarg2_);
  public final static native long _frida_g_param_spec_gtype(String jarg1, String jarg2, String jarg3, long jarg4, int jarg5);
  public final static native long _frida_g_param_spec_variant(String jarg1, String jarg2, String jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void _frida_g_param_spec_types_set(long jarg1);
  public final static native long _frida_g_param_spec_types_get();
  public final static native void _frida_g_source_set_closure(long jarg1, _GSource jarg1_, long jarg2, _GClosure jarg2_);
  public final static native void _frida_g_source_set_dummy_callback(long jarg1, _GSource jarg1_);
  public final static native void _GTypeModule_parent_instance_set(long jarg1, _GTypeModule jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GTypeModule_parent_instance_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_use_count_set(long jarg1, _GTypeModule jarg1_, long jarg2);
  public final static native long _GTypeModule_use_count_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_type_infos_set(long jarg1, _GTypeModule jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GTypeModule_type_infos_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_interface_infos_set(long jarg1, _GTypeModule jarg1_, long jarg2, _GSList jarg2_);
  public final static native long _GTypeModule_interface_infos_get(long jarg1, _GTypeModule jarg1_);
  public final static native void _GTypeModule_name_set(long jarg1, _GTypeModule jarg1_, String jarg2);
  public final static native String _GTypeModule_name_get(long jarg1, _GTypeModule jarg1_);
  public final static native long new__GTypeModule();
  public final static native void delete__GTypeModule(long jarg1);
  public final static native void _GTypeModuleClass_parent_class_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GTypeModuleClass_parent_class_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_load_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_load_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_unload_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_unload_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved1_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved1_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved2_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved2_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved3_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved3_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native void _GTypeModuleClass_reserved4_set(long jarg1, _GTypeModuleClass jarg1_, long jarg2);
  public final static native long _GTypeModuleClass_reserved4_get(long jarg1, _GTypeModuleClass jarg1_);
  public final static native long new__GTypeModuleClass();
  public final static native void delete__GTypeModuleClass(long jarg1);
  public final static native long _frida_g_type_module_get_type();
  public final static native int _frida_g_type_module_use(long jarg1, _GTypeModule jarg1_);
  public final static native void _frida_g_type_module_unuse(long jarg1, _GTypeModule jarg1_);
  public final static native void _frida_g_type_module_set_name(long jarg1, _GTypeModule jarg1_, String jarg2);
  public final static native long _frida_g_type_module_register_type(long jarg1, _GTypeModule jarg1_, long jarg2, String jarg3, long jarg4, _GTypeInfo jarg4_, int jarg5);
  public final static native void _frida_g_type_module_add_interface(long jarg1, _GTypeModule jarg1_, long jarg2, long jarg3, long jarg4, _GInterfaceInfo jarg4_);
  public final static native long _frida_g_type_module_register_enum(long jarg1, _GTypeModule jarg1_, String jarg2, long jarg3, _GEnumValue jarg3_);
  public final static native long _frida_g_type_module_register_flags(long jarg1, _GTypeModule jarg1_, String jarg2, long jarg3, _GFlagsValue jarg3_);
  public final static native void _GTypePluginClass_base_iface_set(long jarg1, _GTypePluginClass jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GTypePluginClass_base_iface_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_use_plugin_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_use_plugin_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_unuse_plugin_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_unuse_plugin_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_complete_type_info_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_complete_type_info_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native void _GTypePluginClass_complete_interface_info_set(long jarg1, _GTypePluginClass jarg1_, long jarg2);
  public final static native long _GTypePluginClass_complete_interface_info_get(long jarg1, _GTypePluginClass jarg1_);
  public final static native long new__GTypePluginClass();
  public final static native void delete__GTypePluginClass(long jarg1);
  public final static native long _frida_g_type_plugin_get_type();
  public final static native void _frida_g_type_plugin_use(long jarg1);
  public final static native void _frida_g_type_plugin_unuse(long jarg1);
  public final static native void _frida_g_type_plugin_complete_type_info(long jarg1, long jarg2, long jarg3, _GTypeInfo jarg3_, long jarg4, _GTypeValueTable jarg4_);
  public final static native void _frida_g_type_plugin_complete_interface_info(long jarg1, long jarg2, long jarg3, long jarg4, _GInterfaceInfo jarg4_);
  public final static native void _GValueArray_n_values_set(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long _GValueArray_n_values_get(long jarg1, _GValueArray jarg1_);
  public final static native void _GValueArray_values_set(long jarg1, _GValueArray jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _GValueArray_values_get(long jarg1, _GValueArray jarg1_);
  public final static native void _GValueArray_n_prealloced_set(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long _GValueArray_n_prealloced_get(long jarg1, _GValueArray jarg1_);
  public final static native long new__GValueArray();
  public final static native void delete__GValueArray(long jarg1);
  public final static native long _frida_g_value_array_get_type();
  public final static native long _frida_g_value_array_get_nth(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long _frida_g_value_array_new(long jarg1);
  public final static native void _frida_g_value_array_free(long jarg1, _GValueArray jarg1_);
  public final static native long _frida_g_value_array_copy(long jarg1, _GValueArray jarg1_);
  public final static native long _frida_g_value_array_prepend(long jarg1, _GValueArray jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _frida_g_value_array_append(long jarg1, _GValueArray jarg1_, long jarg2, _GValue jarg2_);
  public final static native long _frida_g_value_array_insert(long jarg1, _GValueArray jarg1_, long jarg2, long jarg3, _GValue jarg3_);
  public final static native long _frida_g_value_array_remove(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long _frida_g_value_array_sort(long jarg1, _GValueArray jarg1_, long jarg2);
  public final static native long _frida_g_value_array_sort_with_data(long jarg1, _GValueArray jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_value_set_char(long jarg1, _GValue jarg1_, char jarg2);
  public final static native char _frida_g_value_get_char(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_schar(long jarg1, _GValue jarg1_, byte jarg2);
  public final static native byte _frida_g_value_get_schar(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_uchar(long jarg1, _GValue jarg1_, short jarg2);
  public final static native short _frida_g_value_get_uchar(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_boolean(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int _frida_g_value_get_boolean(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_int(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int _frida_g_value_get_int(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_uint(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_uint(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_long(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int _frida_g_value_get_long(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_ulong(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_ulong(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_int64(long jarg1, _GValue jarg1_, int jarg2);
  public final static native int _frida_g_value_get_int64(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_uint64(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_uint64(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_float(long jarg1, _GValue jarg1_, float jarg2);
  public final static native float _frida_g_value_get_float(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_double(long jarg1, _GValue jarg1_, double jarg2);
  public final static native double _frida_g_value_get_double(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_string(long jarg1, _GValue jarg1_, String jarg2);
  public final static native void _frida_g_value_set_static_string(long jarg1, _GValue jarg1_, String jarg2);
  public final static native String _frida_g_value_get_string(long jarg1, _GValue jarg1_);
  public final static native String _frida_g_value_dup_string(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_pointer(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_pointer(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_gtype_get_type();
  public final static native void _frida_g_value_set_gtype(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_gtype(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_set_variant(long jarg1, _GValue jarg1_, long jarg2);
  public final static native void _frida_g_value_take_variant(long jarg1, _GValue jarg1_, long jarg2);
  public final static native long _frida_g_value_get_variant(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_value_dup_variant(long jarg1, _GValue jarg1_);
  public final static native long _frida_g_pointer_type_register_static(String jarg1);
  public final static native String _frida_g_strdup_value_contents(long jarg1, _GValue jarg1_);
  public final static native void _frida_g_value_take_string(long jarg1, _GValue jarg1_, String jarg2);
  public final static native void _frida_g_value_set_string_take_ownership(long jarg1, _GValue jarg1_, String jarg2);
  public final static native long _frida_g_unicode_type_get_type();
  public final static native long _frida_g_unicode_break_type_get_type();
  public final static native long _frida_g_unicode_script_get_type();
  public final static native long _frida_g_normalize_mode_get_type();
  public final static native void _frida_gobject_init();
  public final static native int G_APP_INFO_CREATE_NONE_get();
  public final static native int G_APP_INFO_CREATE_NEEDS_TERMINAL_get();
  public final static native int G_APP_INFO_CREATE_SUPPORTS_URIS_get();
  public final static native int G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION_get();
  public final static native int G_CONVERTER_NO_FLAGS_get();
  public final static native int G_CONVERTER_INPUT_AT_END_get();
  public final static native int G_CONVERTER_FLUSH_get();
  public final static native int G_CONVERTER_ERROR_get();
  public final static native int G_CONVERTER_CONVERTED_get();
  public final static native int G_CONVERTER_FINISHED_get();
  public final static native int G_CONVERTER_FLUSHED_get();
  public final static native int G_FILE_ATTRIBUTE_TYPE_INVALID_get();
  public final static native int G_FILE_ATTRIBUTE_INFO_NONE_get();
  public final static native int G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE_get();
  public final static native int G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED_get();
  public final static native int G_FILE_ATTRIBUTE_STATUS_UNSET_get();
  public final static native int G_FILE_QUERY_INFO_NONE_get();
  public final static native int G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS_get();
  public final static native int G_FILE_CREATE_NONE_get();
  public final static native int G_FILE_CREATE_PRIVATE_get();
  public final static native int G_FILE_CREATE_REPLACE_DESTINATION_get();
  public final static native int G_FILE_MEASURE_NONE_get();
  public final static native int G_FILE_MEASURE_REPORT_ANY_ERROR_get();
  public final static native int G_FILE_MEASURE_APPARENT_SIZE_get();
  public final static native int G_FILE_MEASURE_NO_XDEV_get();
  public final static native int G_MOUNT_MOUNT_NONE_get();
  public final static native int G_MOUNT_UNMOUNT_NONE_get();
  public final static native int G_MOUNT_UNMOUNT_FORCE_get();
  public final static native int G_DRIVE_START_NONE_get();
  public final static native int G_FILE_COPY_NONE_get();
  public final static native int G_FILE_COPY_OVERWRITE_get();
  public final static native int G_FILE_COPY_BACKUP_get();
  public final static native int G_FILE_COPY_NOFOLLOW_SYMLINKS_get();
  public final static native int G_FILE_COPY_ALL_METADATA_get();
  public final static native int G_FILE_COPY_NO_FALLBACK_FOR_MOVE_get();
  public final static native int G_FILE_COPY_TARGET_DEFAULT_PERMS_get();
  public final static native int G_FILE_MONITOR_NONE_get();
  public final static native int G_FILE_MONITOR_WATCH_MOUNTS_get();
  public final static native int G_FILE_MONITOR_SEND_MOVED_get();
  public final static native int G_FILE_MONITOR_WATCH_HARD_LINKS_get();
  public final static native int G_FILE_MONITOR_WATCH_MOVES_get();
  public final static native int G_FILE_TYPE_UNKNOWN_get();
  public final static native int G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS_get();
  public final static native int G_IO_ERROR_CONNECTION_CLOSED_get();
  public final static native int G_ASK_PASSWORD_NEED_PASSWORD_get();
  public final static native int G_ASK_PASSWORD_NEED_USERNAME_get();
  public final static native int G_ASK_PASSWORD_NEED_DOMAIN_get();
  public final static native int G_ASK_PASSWORD_SAVING_SUPPORTED_get();
  public final static native int G_ASK_PASSWORD_ANONYMOUS_SUPPORTED_get();
  public final static native int G_ASK_PASSWORD_TCRYPT_get();
  public final static native int G_OUTPUT_STREAM_SPLICE_NONE_get();
  public final static native int G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE_get();
  public final static native int G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET_get();
  public final static native int G_IO_STREAM_SPLICE_NONE_get();
  public final static native int G_IO_STREAM_SPLICE_CLOSE_STREAM1_get();
  public final static native int G_IO_STREAM_SPLICE_CLOSE_STREAM2_get();
  public final static native int G_IO_STREAM_SPLICE_WAIT_FOR_BOTH_get();
  public final static native int G_RESOLVER_RECORD_SRV_get();
  public final static native int G_RESOURCE_FLAGS_NONE_get();
  public final static native int G_RESOURCE_FLAGS_COMPRESSED_get();
  public final static native int G_RESOURCE_LOOKUP_FLAGS_NONE_get();
  public final static native int G_SOCKET_FAMILY_UNIX_get();
  public final static native int G_SOCKET_FAMILY_IPV4_get();
  public final static native int G_SOCKET_FAMILY_IPV6_get();
  public final static native int G_SOCKET_MSG_OOB_get();
  public final static native int G_SOCKET_MSG_PEEK_get();
  public final static native int G_SOCKET_MSG_DONTROUTE_get();
  public final static native int G_SOCKET_PROTOCOL_UNKNOWN_get();
  public final static native int G_SOCKET_PROTOCOL_DEFAULT_get();
  public final static native int G_SOCKET_PROTOCOL_TCP_get();
  public final static native int G_SOCKET_PROTOCOL_UDP_get();
  public final static native int G_SOCKET_PROTOCOL_SCTP_get();
  public final static native int G_BUS_TYPE_STARTER_get();
  public final static native int G_BUS_TYPE_NONE_get();
  public final static native int G_BUS_TYPE_SYSTEM_get();
  public final static native int G_BUS_TYPE_SESSION_get();
  public final static native int G_BUS_NAME_OWNER_FLAGS_NONE_get();
  public final static native int G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT_get();
  public final static native int G_BUS_NAME_OWNER_FLAGS_REPLACE_get();
  public final static native int G_BUS_NAME_OWNER_FLAGS_DO_NOT_QUEUE_get();
  public final static native int G_BUS_NAME_WATCHER_FLAGS_NONE_get();
  public final static native int G_BUS_NAME_WATCHER_FLAGS_AUTO_START_get();
  public final static native int G_DBUS_PROXY_FLAGS_NONE_get();
  public final static native int G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES_get();
  public final static native int G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS_get();
  public final static native int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_get();
  public final static native int G_DBUS_PROXY_FLAGS_GET_INVALIDATED_PROPERTIES_get();
  public final static native int G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START_AT_CONSTRUCTION_get();
  public final static native int G_DBUS_CONNECTION_FLAGS_NONE_get();
  public final static native int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT_get();
  public final static native int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER_get();
  public final static native int G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS_get();
  public final static native int G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION_get();
  public final static native int G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING_get();
  public final static native int G_DBUS_CAPABILITY_FLAGS_NONE_get();
  public final static native int G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING_get();
  public final static native int G_DBUS_CALL_FLAGS_NONE_get();
  public final static native int G_DBUS_CALL_FLAGS_NO_AUTO_START_get();
  public final static native int G_DBUS_CALL_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION_get();
  public final static native int G_DBUS_MESSAGE_FLAGS_NONE_get();
  public final static native int G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED_get();
  public final static native int G_DBUS_MESSAGE_FLAGS_NO_AUTO_START_get();
  public final static native int G_DBUS_MESSAGE_FLAGS_ALLOW_INTERACTIVE_AUTHORIZATION_get();
  public final static native int G_DBUS_PROPERTY_INFO_FLAGS_NONE_get();
  public final static native int G_DBUS_PROPERTY_INFO_FLAGS_READABLE_get();
  public final static native int G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE_get();
  public final static native int G_DBUS_SUBTREE_FLAGS_NONE_get();
  public final static native int G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES_get();
  public final static native int G_DBUS_SERVER_FLAGS_NONE_get();
  public final static native int G_DBUS_SERVER_FLAGS_RUN_IN_THREAD_get();
  public final static native int G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS_get();
  public final static native int G_DBUS_SIGNAL_FLAGS_NONE_get();
  public final static native int G_DBUS_SIGNAL_FLAGS_NO_MATCH_RULE_get();
  public final static native int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_NAMESPACE_get();
  public final static native int G_DBUS_SIGNAL_FLAGS_MATCH_ARG0_PATH_get();
  public final static native int G_DBUS_SEND_MESSAGE_FLAGS_NONE_get();
  public final static native int G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL_get();
  public final static native int G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN_get();
  public final static native int G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN_get();
  public final static native int G_APPLICATION_IS_SERVICE_get();
  public final static native int G_APPLICATION_IS_LAUNCHER_get();
  public final static native int G_APPLICATION_HANDLES_OPEN_get();
  public final static native int G_APPLICATION_HANDLES_COMMAND_LINE_get();
  public final static native int G_APPLICATION_SEND_ENVIRONMENT_get();
  public final static native int G_APPLICATION_NON_UNIQUE_get();
  public final static native int G_APPLICATION_CAN_OVERRIDE_APP_ID_get();
  public final static native int G_APPLICATION_ALLOW_REPLACEMENT_get();
  public final static native int G_APPLICATION_REPLACE_get();
  public final static native int G_TLS_CERTIFICATE_UNKNOWN_CA_get();
  public final static native int G_TLS_CERTIFICATE_BAD_IDENTITY_get();
  public final static native int G_TLS_CERTIFICATE_NOT_ACTIVATED_get();
  public final static native int G_TLS_CERTIFICATE_EXPIRED_get();
  public final static native int G_TLS_CERTIFICATE_REVOKED_get();
  public final static native int G_TLS_CERTIFICATE_INSECURE_get();
  public final static native int G_TLS_CERTIFICATE_GENERIC_ERROR_get();
  public final static native int G_TLS_CERTIFICATE_VALIDATE_ALL_get();
  public final static native int G_TLS_PASSWORD_NONE_get();
  public final static native int G_TLS_PASSWORD_RETRY_get();
  public final static native int G_TLS_PASSWORD_MANY_TRIES_get();
  public final static native int G_TLS_PASSWORD_FINAL_TRY_get();
  public final static native int G_DBUS_INTERFACE_SKELETON_FLAGS_NONE_get();
  public final static native int G_DBUS_INTERFACE_SKELETON_FLAGS_HANDLE_METHOD_INVOCATIONS_IN_THREAD_get();
  public final static native int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_NONE_get();
  public final static native int G_DBUS_OBJECT_MANAGER_CLIENT_FLAGS_DO_NOT_AUTO_START_get();
  public final static native int G_TLS_DATABASE_VERIFY_NONE_get();
  public final static native int G_TLS_DATABASE_LOOKUP_NONE_get();
  public final static native int G_TLS_DATABASE_LOOKUP_KEYPAIR_get();
  public final static native int G_TLS_CERTIFICATE_REQUEST_NONE_get();
  public final static native int G_TEST_DBUS_NONE_get();
  public final static native int G_SUBPROCESS_FLAGS_NONE_get();
  public final static native int G_SUBPROCESS_FLAGS_STDIN_PIPE_get();
  public final static native int G_SUBPROCESS_FLAGS_STDIN_INHERIT_get();
  public final static native int G_SUBPROCESS_FLAGS_STDOUT_PIPE_get();
  public final static native int G_SUBPROCESS_FLAGS_STDOUT_SILENCE_get();
  public final static native int G_SUBPROCESS_FLAGS_STDERR_PIPE_get();
  public final static native int G_SUBPROCESS_FLAGS_STDERR_SILENCE_get();
  public final static native int G_SUBPROCESS_FLAGS_STDERR_MERGE_get();
  public final static native int G_SUBPROCESS_FLAGS_INHERIT_FDS_get();
  public final static native int G_NETWORK_CONNECTIVITY_LOCAL_get();
  public final static native int G_NETWORK_CONNECTIVITY_LIMITED_get();
  public final static native int G_NETWORK_CONNECTIVITY_PORTAL_get();
  public final static native int G_NETWORK_CONNECTIVITY_FULL_get();
  public final static native int G_POLLABLE_RETURN_FAILED_get();
  public final static native int G_POLLABLE_RETURN_OK_get();
  public final static native int G_POLLABLE_RETURN_WOULD_BLOCK_get();
  public final static native void _GInputVector_buffer_set(long jarg1, _GInputVector jarg1_, long jarg2);
  public final static native long _GInputVector_buffer_get(long jarg1, _GInputVector jarg1_);
  public final static native void _GInputVector_size_set(long jarg1, _GInputVector jarg1_, long jarg2);
  public final static native long _GInputVector_size_get(long jarg1, _GInputVector jarg1_);
  public final static native long new__GInputVector();
  public final static native void delete__GInputVector(long jarg1);
  public final static native void _GInputMessage_address_set(long jarg1, _GInputMessage jarg1_, long jarg2);
  public final static native long _GInputMessage_address_get(long jarg1, _GInputMessage jarg1_);
  public final static native void _GInputMessage_vectors_set(long jarg1, _GInputMessage jarg1_, long jarg2, _GInputVector jarg2_);
  public final static native long _GInputMessage_vectors_get(long jarg1, _GInputMessage jarg1_);
  public final static native void _GInputMessage_num_vectors_set(long jarg1, _GInputMessage jarg1_, long jarg2);
  public final static native long _GInputMessage_num_vectors_get(long jarg1, _GInputMessage jarg1_);
  public final static native void _GInputMessage_bytes_received_set(long jarg1, _GInputMessage jarg1_, long jarg2);
  public final static native long _GInputMessage_bytes_received_get(long jarg1, _GInputMessage jarg1_);
  public final static native void _GInputMessage_flags_set(long jarg1, _GInputMessage jarg1_, int jarg2);
  public final static native int _GInputMessage_flags_get(long jarg1, _GInputMessage jarg1_);
  public final static native void _GInputMessage_control_messages_set(long jarg1, _GInputMessage jarg1_, long jarg2);
  public final static native long _GInputMessage_control_messages_get(long jarg1, _GInputMessage jarg1_);
  public final static native void _GInputMessage_num_control_messages_set(long jarg1, _GInputMessage jarg1_, long jarg2);
  public final static native long _GInputMessage_num_control_messages_get(long jarg1, _GInputMessage jarg1_);
  public final static native long new__GInputMessage();
  public final static native void delete__GInputMessage(long jarg1);
  public final static native void _GOutputVector_buffer_set(long jarg1, _GOutputVector jarg1_, long jarg2);
  public final static native long _GOutputVector_buffer_get(long jarg1, _GOutputVector jarg1_);
  public final static native void _GOutputVector_size_set(long jarg1, _GOutputVector jarg1_, long jarg2);
  public final static native long _GOutputVector_size_get(long jarg1, _GOutputVector jarg1_);
  public final static native long new__GOutputVector();
  public final static native void delete__GOutputVector(long jarg1);
  public final static native void _GOutputMessage_address_set(long jarg1, _GOutputMessage jarg1_, long jarg2, _GSocketAddress jarg2_);
  public final static native long _GOutputMessage_address_get(long jarg1, _GOutputMessage jarg1_);
  public final static native void _GOutputMessage_vectors_set(long jarg1, _GOutputMessage jarg1_, long jarg2, _GOutputVector jarg2_);
  public final static native long _GOutputMessage_vectors_get(long jarg1, _GOutputMessage jarg1_);
  public final static native void _GOutputMessage_num_vectors_set(long jarg1, _GOutputMessage jarg1_, long jarg2);
  public final static native long _GOutputMessage_num_vectors_get(long jarg1, _GOutputMessage jarg1_);
  public final static native void _GOutputMessage_bytes_sent_set(long jarg1, _GOutputMessage jarg1_, long jarg2);
  public final static native long _GOutputMessage_bytes_sent_get(long jarg1, _GOutputMessage jarg1_);
  public final static native void _GOutputMessage_control_messages_set(long jarg1, _GOutputMessage jarg1_, long jarg2);
  public final static native long _GOutputMessage_control_messages_get(long jarg1, _GOutputMessage jarg1_);
  public final static native void _GOutputMessage_num_control_messages_set(long jarg1, _GOutputMessage jarg1_, long jarg2);
  public final static native long _GOutputMessage_num_control_messages_get(long jarg1, _GOutputMessage jarg1_);
  public final static native long new__GOutputMessage();
  public final static native void delete__GOutputMessage(long jarg1);
  public final static native void _GActionInterface_g_iface_set(long jarg1, _GActionInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GActionInterface_g_iface_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_get_name_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_get_name_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_get_parameter_type_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_get_parameter_type_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_get_state_type_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_get_state_type_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_get_state_hint_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_get_state_hint_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_get_enabled_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_get_enabled_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_get_state_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_get_state_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_change_state_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_change_state_get(long jarg1, _GActionInterface jarg1_);
  public final static native void _GActionInterface_activate_set(long jarg1, _GActionInterface jarg1_, long jarg2);
  public final static native long _GActionInterface_activate_get(long jarg1, _GActionInterface jarg1_);
  public final static native long new__GActionInterface();
  public final static native void delete__GActionInterface(long jarg1);
  public final static native long _frida_g_action_get_type();
  public final static native String _frida_g_action_get_name(long jarg1);
  public final static native long _frida_g_action_get_parameter_type(long jarg1);
  public final static native long _frida_g_action_get_state_type(long jarg1);
  public final static native long _frida_g_action_get_state_hint(long jarg1);
  public final static native int _frida_g_action_get_enabled(long jarg1);
  public final static native long _frida_g_action_get_state(long jarg1);
  public final static native void _frida_g_action_change_state(long jarg1, long jarg2);
  public final static native void _frida_g_action_activate(long jarg1, long jarg2);
  public final static native int _frida_g_action_name_is_valid(String jarg1);
  public final static native int _frida_g_action_parse_detailed_name(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_action_print_detailed_name(String jarg1, long jarg2);
  public final static native void _GActionGroupInterface_g_iface_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GActionGroupInterface_g_iface_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_has_action_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_has_action_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_list_actions_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_list_actions_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_get_action_enabled_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_get_action_enabled_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_get_action_parameter_type_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_get_action_parameter_type_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_get_action_state_type_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_get_action_state_type_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_get_action_state_hint_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_get_action_state_hint_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_get_action_state_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_get_action_state_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_change_action_state_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_change_action_state_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_activate_action_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_activate_action_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_action_added_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_action_added_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_action_removed_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_action_removed_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_action_enabled_changed_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_action_enabled_changed_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_action_state_changed_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_action_state_changed_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native void _GActionGroupInterface_query_action_set(long jarg1, _GActionGroupInterface jarg1_, long jarg2);
  public final static native long _GActionGroupInterface_query_action_get(long jarg1, _GActionGroupInterface jarg1_);
  public final static native long new__GActionGroupInterface();
  public final static native void delete__GActionGroupInterface(long jarg1);
  public final static native long _frida_g_action_group_get_type();
  public final static native int _frida_g_action_group_has_action(long jarg1, String jarg2);
  public final static native long _frida_g_action_group_list_actions(long jarg1);
  public final static native long _frida_g_action_group_get_action_parameter_type(long jarg1, String jarg2);
  public final static native long _frida_g_action_group_get_action_state_type(long jarg1, String jarg2);
  public final static native long _frida_g_action_group_get_action_state_hint(long jarg1, String jarg2);
  public final static native int _frida_g_action_group_get_action_enabled(long jarg1, String jarg2);
  public final static native long _frida_g_action_group_get_action_state(long jarg1, String jarg2);
  public final static native void _frida_g_action_group_change_action_state(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_action_group_activate_action(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_action_group_action_added(long jarg1, String jarg2);
  public final static native void _frida_g_action_group_action_removed(long jarg1, String jarg2);
  public final static native void _frida_g_action_group_action_enabled_changed(long jarg1, String jarg2, int jarg3);
  public final static native void _frida_g_action_group_action_state_changed(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_action_group_query_action(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native long _frida_g_dbus_connection_export_action_group(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_dbus_connection_unexport_action_group(long jarg1, long jarg2);
  public final static native void _GActionMapInterface_g_iface_set(long jarg1, _GActionMapInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GActionMapInterface_g_iface_get(long jarg1, _GActionMapInterface jarg1_);
  public final static native void _GActionMapInterface_lookup_action_set(long jarg1, _GActionMapInterface jarg1_, long jarg2);
  public final static native long _GActionMapInterface_lookup_action_get(long jarg1, _GActionMapInterface jarg1_);
  public final static native void _GActionMapInterface_add_action_set(long jarg1, _GActionMapInterface jarg1_, long jarg2);
  public final static native long _GActionMapInterface_add_action_get(long jarg1, _GActionMapInterface jarg1_);
  public final static native void _GActionMapInterface_remove_action_set(long jarg1, _GActionMapInterface jarg1_, long jarg2);
  public final static native long _GActionMapInterface_remove_action_get(long jarg1, _GActionMapInterface jarg1_);
  public final static native long new__GActionMapInterface();
  public final static native void delete__GActionMapInterface(long jarg1);
  public final static native void _GActionEntry_name_set(long jarg1, _GActionEntry jarg1_, String jarg2);
  public final static native String _GActionEntry_name_get(long jarg1, _GActionEntry jarg1_);
  public final static native void _GActionEntry_activate_set(long jarg1, _GActionEntry jarg1_, long jarg2);
  public final static native long _GActionEntry_activate_get(long jarg1, _GActionEntry jarg1_);
  public final static native void _GActionEntry_parameter_type_set(long jarg1, _GActionEntry jarg1_, String jarg2);
  public final static native String _GActionEntry_parameter_type_get(long jarg1, _GActionEntry jarg1_);
  public final static native void _GActionEntry_state_set(long jarg1, _GActionEntry jarg1_, String jarg2);
  public final static native String _GActionEntry_state_get(long jarg1, _GActionEntry jarg1_);
  public final static native void _GActionEntry_change_state_set(long jarg1, _GActionEntry jarg1_, long jarg2);
  public final static native long _GActionEntry_change_state_get(long jarg1, _GActionEntry jarg1_);
  public final static native void _GActionEntry_padding_set(long jarg1, _GActionEntry jarg1_, long jarg2);
  public final static native long _GActionEntry_padding_get(long jarg1, _GActionEntry jarg1_);
  public final static native long new__GActionEntry();
  public final static native void delete__GActionEntry(long jarg1);
  public final static native long _frida_g_action_map_get_type();
  public final static native long _frida_g_action_map_lookup_action(long jarg1, String jarg2);
  public final static native void _frida_g_action_map_add_action(long jarg1, long jarg2);
  public final static native void _frida_g_action_map_remove_action(long jarg1, String jarg2);
  public final static native void _frida_g_action_map_add_action_entries(long jarg1, long jarg2, _GActionEntry jarg2_, int jarg3, long jarg4);
  public final static native void _GAppInfoIface_g_iface_set(long jarg1, _GAppInfoIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GAppInfoIface_g_iface_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_dup_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_dup_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_equal_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_equal_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_id_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_id_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_name_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_name_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_description_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_description_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_executable_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_executable_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_icon_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_icon_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_launch_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_launch_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_supports_uris_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_supports_uris_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_supports_files_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_supports_files_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_launch_uris_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_launch_uris_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_should_show_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_should_show_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_set_as_default_for_type_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_set_as_default_for_type_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_set_as_default_for_extension_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_set_as_default_for_extension_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_add_supports_type_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_add_supports_type_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_can_remove_supports_type_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_can_remove_supports_type_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_remove_supports_type_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_remove_supports_type_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_can_delete_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_can_delete_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_do_delete_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_do_delete_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_commandline_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_commandline_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_display_name_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_display_name_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_set_as_last_used_for_type_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_set_as_last_used_for_type_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_get_supported_types_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_get_supported_types_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_launch_uris_async_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_launch_uris_async_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native void _GAppInfoIface_launch_uris_finish_set(long jarg1, _GAppInfoIface jarg1_, long jarg2);
  public final static native long _GAppInfoIface_launch_uris_finish_get(long jarg1, _GAppInfoIface jarg1_);
  public final static native long new__GAppInfoIface();
  public final static native void delete__GAppInfoIface(long jarg1);
  public final static native long _frida_g_app_info_get_type();
  public final static native long _frida_g_app_info_create_from_commandline(String jarg1, String jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_app_info_dup(long jarg1);
  public final static native int _frida_g_app_info_equal(long jarg1, long jarg2);
  public final static native String _frida_g_app_info_get_id(long jarg1);
  public final static native String _frida_g_app_info_get_name(long jarg1);
  public final static native String _frida_g_app_info_get_display_name(long jarg1);
  public final static native String _frida_g_app_info_get_description(long jarg1);
  public final static native String _frida_g_app_info_get_executable(long jarg1);
  public final static native String _frida_g_app_info_get_commandline(long jarg1);
  public final static native long _frida_g_app_info_get_icon(long jarg1);
  public final static native int _frida_g_app_info_launch(long jarg1, long jarg2, _GList jarg2_, long jarg3, _GAppLaunchContext jarg3_, long jarg4);
  public final static native int _frida_g_app_info_supports_uris(long jarg1);
  public final static native int _frida_g_app_info_supports_files(long jarg1);
  public final static native int _frida_g_app_info_launch_uris(long jarg1, long jarg2, _GList jarg2_, long jarg3, _GAppLaunchContext jarg3_, long jarg4);
  public final static native void _frida_g_app_info_launch_uris_async(long jarg1, long jarg2, _GList jarg2_, long jarg3, _GAppLaunchContext jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_app_info_launch_uris_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_app_info_should_show(long jarg1);
  public final static native int _frida_g_app_info_set_as_default_for_type(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_app_info_set_as_default_for_extension(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_app_info_add_supports_type(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_app_info_can_remove_supports_type(long jarg1);
  public final static native int _frida_g_app_info_remove_supports_type(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_app_info_get_supported_types(long jarg1);
  public final static native int _frida_g_app_info_can_delete(long jarg1);
  public final static native int _frida_g_app_info_delete(long jarg1);
  public final static native int _frida_g_app_info_set_as_last_used_for_type(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_app_info_get_all();
  public final static native long _frida_g_app_info_get_all_for_type(String jarg1);
  public final static native long _frida_g_app_info_get_recommended_for_type(String jarg1);
  public final static native long _frida_g_app_info_get_fallback_for_type(String jarg1);
  public final static native void _frida_g_app_info_reset_type_associations(String jarg1);
  public final static native long _frida_g_app_info_get_default_for_type(String jarg1, int jarg2);
  public final static native long _frida_g_app_info_get_default_for_uri_scheme(String jarg1);
  public final static native int _frida_g_app_info_launch_default_for_uri(String jarg1, long jarg2, _GAppLaunchContext jarg2_, long jarg3);
  public final static native void _frida_g_app_info_launch_default_for_uri_async(String jarg1, long jarg2, _GAppLaunchContext jarg2_, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_app_info_launch_default_for_uri_finish(long jarg1, long jarg2);
  public final static native void _GAppLaunchContext_parent_instance_set(long jarg1, _GAppLaunchContext jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GAppLaunchContext_parent_instance_get(long jarg1, _GAppLaunchContext jarg1_);
  public final static native void _GAppLaunchContext_priv_set(long jarg1, _GAppLaunchContext jarg1_, long jarg2);
  public final static native long _GAppLaunchContext_priv_get(long jarg1, _GAppLaunchContext jarg1_);
  public final static native long new__GAppLaunchContext();
  public final static native void delete__GAppLaunchContext(long jarg1);
  public final static native void _GAppLaunchContextClass_parent_class_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GAppLaunchContextClass_parent_class_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass_get_display_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass_get_display_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass_get_startup_notify_id_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass_get_startup_notify_id_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass_launch_failed_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass_launch_failed_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass_launched_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass_launched_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass__g_reserved1_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass__g_reserved1_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass__g_reserved2_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass__g_reserved2_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass__g_reserved3_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass__g_reserved3_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native void _GAppLaunchContextClass__g_reserved4_set(long jarg1, _GAppLaunchContextClass jarg1_, long jarg2);
  public final static native long _GAppLaunchContextClass__g_reserved4_get(long jarg1, _GAppLaunchContextClass jarg1_);
  public final static native long new__GAppLaunchContextClass();
  public final static native void delete__GAppLaunchContextClass(long jarg1);
  public final static native long _frida_g_app_launch_context_get_type();
  public final static native long _frida_g_app_launch_context_new();
  public final static native void _frida_g_app_launch_context_setenv(long jarg1, _GAppLaunchContext jarg1_, String jarg2, String jarg3);
  public final static native void _frida_g_app_launch_context_unsetenv(long jarg1, _GAppLaunchContext jarg1_, String jarg2);
  public final static native long _frida_g_app_launch_context_get_environment(long jarg1, _GAppLaunchContext jarg1_);
  public final static native String _frida_g_app_launch_context_get_display(long jarg1, _GAppLaunchContext jarg1_, long jarg2, long jarg3, _GList jarg3_);
  public final static native String _frida_g_app_launch_context_get_startup_notify_id(long jarg1, _GAppLaunchContext jarg1_, long jarg2, long jarg3, _GList jarg3_);
  public final static native void _frida_g_app_launch_context_launch_failed(long jarg1, _GAppLaunchContext jarg1_, String jarg2);
  public final static native long _frida_g_app_info_monitor_get_type();
  public final static native long _frida_g_app_info_monitor_get();
  public final static native void _GApplication_parent_instance_set(long jarg1, _GApplication jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GApplication_parent_instance_get(long jarg1, _GApplication jarg1_);
  public final static native void _GApplication_priv_set(long jarg1, _GApplication jarg1_, long jarg2);
  public final static native long _GApplication_priv_get(long jarg1, _GApplication jarg1_);
  public final static native long new__GApplication();
  public final static native void delete__GApplication(long jarg1);
  public final static native void _GApplicationClass_parent_class_set(long jarg1, _GApplicationClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GApplicationClass_parent_class_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_startup_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_startup_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_activate_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_activate_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_open_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_open_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_command_line_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_command_line_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_local_command_line_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_local_command_line_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_before_emit_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_before_emit_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_after_emit_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_after_emit_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_add_platform_data_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_add_platform_data_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_quit_mainloop_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_quit_mainloop_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_run_mainloop_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_run_mainloop_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_shutdown_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_shutdown_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_dbus_register_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_dbus_register_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_dbus_unregister_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_dbus_unregister_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_handle_local_options_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_handle_local_options_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_name_lost_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_name_lost_get(long jarg1, _GApplicationClass jarg1_);
  public final static native void _GApplicationClass_padding_set(long jarg1, _GApplicationClass jarg1_, long jarg2);
  public final static native long _GApplicationClass_padding_get(long jarg1, _GApplicationClass jarg1_);
  public final static native long new__GApplicationClass();
  public final static native void delete__GApplicationClass(long jarg1);
  public final static native long _frida_g_application_get_type();
  public final static native int _frida_g_application_id_is_valid(String jarg1);
  public final static native long _frida_g_application_new(String jarg1, int jarg2);
  public final static native String _frida_g_application_get_application_id(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_set_application_id(long jarg1, _GApplication jarg1_, String jarg2);
  public final static native long _frida_g_application_get_dbus_connection(long jarg1, _GApplication jarg1_);
  public final static native String _frida_g_application_get_dbus_object_path(long jarg1, _GApplication jarg1_);
  public final static native long _frida_g_application_get_inactivity_timeout(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_set_inactivity_timeout(long jarg1, _GApplication jarg1_, long jarg2);
  public final static native int _frida_g_application_get_flags(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_set_flags(long jarg1, _GApplication jarg1_, int jarg2);
  public final static native String _frida_g_application_get_resource_base_path(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_set_resource_base_path(long jarg1, _GApplication jarg1_, String jarg2);
  public final static native void _frida_g_application_set_action_group(long jarg1, _GApplication jarg1_, long jarg2);
  public final static native void _frida_g_application_add_main_option_entries(long jarg1, _GApplication jarg1_, long jarg2, _GOptionEntry jarg2_);
  public final static native void _frida_g_application_add_main_option(long jarg1, _GApplication jarg1_, String jarg2, char jarg3, int jarg4, int jarg5, String jarg6, String jarg7);
  public final static native void _frida_g_application_add_option_group(long jarg1, _GApplication jarg1_, long jarg2);
  public final static native void _frida_g_application_set_option_context_parameter_string(long jarg1, _GApplication jarg1_, String jarg2);
  public final static native void _frida_g_application_set_option_context_summary(long jarg1, _GApplication jarg1_, String jarg2);
  public final static native void _frida_g_application_set_option_context_description(long jarg1, _GApplication jarg1_, String jarg2);
  public final static native int _frida_g_application_get_is_registered(long jarg1, _GApplication jarg1_);
  public final static native int _frida_g_application_get_is_remote(long jarg1, _GApplication jarg1_);
  public final static native int _frida_g_application_register(long jarg1, _GApplication jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_application_hold(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_release(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_activate(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_open(long jarg1, _GApplication jarg1_, long jarg2, int jarg3, String jarg4);
  public final static native int _frida_g_application_run(long jarg1, _GApplication jarg1_, int jarg2, long jarg3);
  public final static native void _frida_g_application_quit(long jarg1, _GApplication jarg1_);
  public final static native long _frida_g_application_get_default();
  public final static native void _frida_g_application_set_default(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_mark_busy(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_unmark_busy(long jarg1, _GApplication jarg1_);
  public final static native int _frida_g_application_get_is_busy(long jarg1, _GApplication jarg1_);
  public final static native void _frida_g_application_send_notification(long jarg1, _GApplication jarg1_, String jarg2, long jarg3);
  public final static native void _frida_g_application_withdraw_notification(long jarg1, _GApplication jarg1_, String jarg2);
  public final static native void _frida_g_application_bind_busy_property(long jarg1, _GApplication jarg1_, long jarg2, String jarg3);
  public final static native void _frida_g_application_unbind_busy_property(long jarg1, _GApplication jarg1_, long jarg2, String jarg3);
  public final static native void _GApplicationCommandLine_parent_instance_set(long jarg1, _GApplicationCommandLine jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GApplicationCommandLine_parent_instance_get(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native void _GApplicationCommandLine_priv_set(long jarg1, _GApplicationCommandLine jarg1_, long jarg2);
  public final static native long _GApplicationCommandLine_priv_get(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native long new__GApplicationCommandLine();
  public final static native void delete__GApplicationCommandLine(long jarg1);
  public final static native void _GApplicationCommandLineClass_parent_class_set(long jarg1, _GApplicationCommandLineClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GApplicationCommandLineClass_parent_class_get(long jarg1, _GApplicationCommandLineClass jarg1_);
  public final static native void _GApplicationCommandLineClass_print_literal_set(long jarg1, _GApplicationCommandLineClass jarg1_, long jarg2);
  public final static native long _GApplicationCommandLineClass_print_literal_get(long jarg1, _GApplicationCommandLineClass jarg1_);
  public final static native void _GApplicationCommandLineClass_printerr_literal_set(long jarg1, _GApplicationCommandLineClass jarg1_, long jarg2);
  public final static native long _GApplicationCommandLineClass_printerr_literal_get(long jarg1, _GApplicationCommandLineClass jarg1_);
  public final static native void _GApplicationCommandLineClass_get_stdin_set(long jarg1, _GApplicationCommandLineClass jarg1_, long jarg2);
  public final static native long _GApplicationCommandLineClass_get_stdin_get(long jarg1, _GApplicationCommandLineClass jarg1_);
  public final static native void _GApplicationCommandLineClass_padding_set(long jarg1, _GApplicationCommandLineClass jarg1_, long jarg2);
  public final static native long _GApplicationCommandLineClass_padding_get(long jarg1, _GApplicationCommandLineClass jarg1_);
  public final static native long new__GApplicationCommandLineClass();
  public final static native void delete__GApplicationCommandLineClass(long jarg1);
  public final static native long _frida_g_application_command_line_get_type();
  public final static native long _frida_g_application_command_line_get_arguments(long jarg1, _GApplicationCommandLine jarg1_, long jarg2);
  public final static native long _frida_g_application_command_line_get_options_dict(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native long _frida_g_application_command_line_get_stdin(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native long _frida_g_application_command_line_get_environ(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native String _frida_g_application_command_line_getenv(long jarg1, _GApplicationCommandLine jarg1_, String jarg2);
  public final static native String _frida_g_application_command_line_get_cwd(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native int _frida_g_application_command_line_get_is_remote(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native void _frida_g_application_command_line_print(long jarg1, _GApplicationCommandLine jarg1_, String jarg2);
  public final static native void _frida_g_application_command_line_printerr(long jarg1, _GApplicationCommandLine jarg1_, String jarg2);
  public final static native int _frida_g_application_command_line_get_exit_status(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native void _frida_g_application_command_line_set_exit_status(long jarg1, _GApplicationCommandLine jarg1_, int jarg2);
  public final static native long _frida_g_application_command_line_get_platform_data(long jarg1, _GApplicationCommandLine jarg1_);
  public final static native long _frida_g_application_command_line_create_file_for_arg(long jarg1, _GApplicationCommandLine jarg1_, String jarg2);
  public final static native void _GInitableIface_g_iface_set(long jarg1, _GInitableIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GInitableIface_g_iface_get(long jarg1, _GInitableIface jarg1_);
  public final static native void _GInitableIface_init_set(long jarg1, _GInitableIface jarg1_, long jarg2);
  public final static native long _GInitableIface_init_get(long jarg1, _GInitableIface jarg1_);
  public final static native long new__GInitableIface();
  public final static native void delete__GInitableIface(long jarg1);
  public final static native long _frida_g_initable_get_type();
  public final static native int _frida_g_initable_init(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native long _frida_g_initable_new(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, String jarg4);
  public final static native long _frida_g_initable_newv(long jarg1, long jarg2, long jarg3, _GParameter jarg3_, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _GAsyncInitableIface_g_iface_set(long jarg1, _GAsyncInitableIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GAsyncInitableIface_g_iface_get(long jarg1, _GAsyncInitableIface jarg1_);
  public final static native void _GAsyncInitableIface_init_async_set(long jarg1, _GAsyncInitableIface jarg1_, long jarg2);
  public final static native long _GAsyncInitableIface_init_async_get(long jarg1, _GAsyncInitableIface jarg1_);
  public final static native void _GAsyncInitableIface_init_finish_set(long jarg1, _GAsyncInitableIface jarg1_, long jarg2);
  public final static native long _GAsyncInitableIface_init_finish_get(long jarg1, _GAsyncInitableIface jarg1_);
  public final static native long new__GAsyncInitableIface();
  public final static native void delete__GAsyncInitableIface(long jarg1);
  public final static native long _frida_g_async_initable_get_type();
  public final static native void _frida_g_async_initable_init_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_async_initable_init_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_async_initable_new_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5, String jarg6);
  public final static native void _frida_g_async_initable_newv_async(long jarg1, long jarg2, long jarg3, _GParameter jarg3_, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_async_initable_new_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _GAsyncResultIface_g_iface_set(long jarg1, _GAsyncResultIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GAsyncResultIface_g_iface_get(long jarg1, _GAsyncResultIface jarg1_);
  public final static native void _GAsyncResultIface_get_user_data_set(long jarg1, _GAsyncResultIface jarg1_, long jarg2);
  public final static native long _GAsyncResultIface_get_user_data_get(long jarg1, _GAsyncResultIface jarg1_);
  public final static native void _GAsyncResultIface_get_source_object_set(long jarg1, _GAsyncResultIface jarg1_, long jarg2);
  public final static native long _GAsyncResultIface_get_source_object_get(long jarg1, _GAsyncResultIface jarg1_);
  public final static native void _GAsyncResultIface_is_tagged_set(long jarg1, _GAsyncResultIface jarg1_, long jarg2);
  public final static native long _GAsyncResultIface_is_tagged_get(long jarg1, _GAsyncResultIface jarg1_);
  public final static native long new__GAsyncResultIface();
  public final static native void delete__GAsyncResultIface(long jarg1);
  public final static native long _frida_g_async_result_get_type();
  public final static native long _frida_g_async_result_get_user_data(long jarg1);
  public final static native long _frida_g_async_result_get_source_object(long jarg1);
  public final static native int _frida_g_async_result_legacy_propagate_error(long jarg1, long jarg2);
  public final static native int _frida_g_async_result_is_tagged(long jarg1, long jarg2);
  public final static native void _GInputStream_parent_instance_set(long jarg1, _GInputStream jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GInputStream_parent_instance_get(long jarg1, _GInputStream jarg1_);
  public final static native void _GInputStream_priv_set(long jarg1, _GInputStream jarg1_, long jarg2);
  public final static native long _GInputStream_priv_get(long jarg1, _GInputStream jarg1_);
  public final static native long new__GInputStream();
  public final static native void delete__GInputStream(long jarg1);
  public final static native void _GInputStreamClass_parent_class_set(long jarg1, _GInputStreamClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GInputStreamClass_parent_class_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_read_fn_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_read_fn_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_skip_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_skip_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_close_fn_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_close_fn_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_read_async_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_read_async_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_read_finish_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_read_finish_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_skip_async_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_skip_async_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_skip_finish_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_skip_finish_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_close_async_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_close_async_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass_close_finish_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass_close_finish_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass__g_reserved1_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass__g_reserved1_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass__g_reserved2_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass__g_reserved2_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass__g_reserved3_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass__g_reserved3_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass__g_reserved4_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass__g_reserved4_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native void _GInputStreamClass__g_reserved5_set(long jarg1, _GInputStreamClass jarg1_, long jarg2);
  public final static native long _GInputStreamClass__g_reserved5_get(long jarg1, _GInputStreamClass jarg1_);
  public final static native long new__GInputStreamClass();
  public final static native void delete__GInputStreamClass(long jarg1);
  public final static native long _frida_g_input_stream_get_type();
  public final static native int _frida_g_input_stream_read(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_input_stream_read_all(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native long _frida_g_input_stream_read_bytes(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_input_stream_skip(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_input_stream_close(long jarg1, _GInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_input_stream_read_async(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_input_stream_read_finish(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_input_stream_read_all_async(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_input_stream_read_all_finish(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_input_stream_read_bytes_async(long jarg1, _GInputStream jarg1_, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_input_stream_read_bytes_finish(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_input_stream_skip_async(long jarg1, _GInputStream jarg1_, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_input_stream_skip_finish(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_input_stream_close_async(long jarg1, _GInputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_input_stream_close_finish(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_input_stream_is_closed(long jarg1, _GInputStream jarg1_);
  public final static native int _frida_g_input_stream_has_pending(long jarg1, _GInputStream jarg1_);
  public final static native int _frida_g_input_stream_set_pending(long jarg1, _GInputStream jarg1_, long jarg2);
  public final static native void _frida_g_input_stream_clear_pending(long jarg1, _GInputStream jarg1_);
  public final static native void _GFilterInputStream_parent_instance_set(long jarg1, _GFilterInputStream jarg1_, long jarg2, _GInputStream jarg2_);
  public final static native long _GFilterInputStream_parent_instance_get(long jarg1, _GFilterInputStream jarg1_);
  public final static native void _GFilterInputStream_base_stream_set(long jarg1, _GFilterInputStream jarg1_, long jarg2, _GInputStream jarg2_);
  public final static native long _GFilterInputStream_base_stream_get(long jarg1, _GFilterInputStream jarg1_);
  public final static native long new__GFilterInputStream();
  public final static native void delete__GFilterInputStream(long jarg1);
  public final static native void _GFilterInputStreamClass_parent_class_set(long jarg1, _GFilterInputStreamClass jarg1_, long jarg2, _GInputStreamClass jarg2_);
  public final static native long _GFilterInputStreamClass_parent_class_get(long jarg1, _GFilterInputStreamClass jarg1_);
  public final static native void _GFilterInputStreamClass__g_reserved1_set(long jarg1, _GFilterInputStreamClass jarg1_, long jarg2);
  public final static native long _GFilterInputStreamClass__g_reserved1_get(long jarg1, _GFilterInputStreamClass jarg1_);
  public final static native void _GFilterInputStreamClass__g_reserved2_set(long jarg1, _GFilterInputStreamClass jarg1_, long jarg2);
  public final static native long _GFilterInputStreamClass__g_reserved2_get(long jarg1, _GFilterInputStreamClass jarg1_);
  public final static native void _GFilterInputStreamClass__g_reserved3_set(long jarg1, _GFilterInputStreamClass jarg1_, long jarg2);
  public final static native long _GFilterInputStreamClass__g_reserved3_get(long jarg1, _GFilterInputStreamClass jarg1_);
  public final static native long new__GFilterInputStreamClass();
  public final static native void delete__GFilterInputStreamClass(long jarg1);
  public final static native long _frida_g_filter_input_stream_get_type();
  public final static native long _frida_g_filter_input_stream_get_base_stream(long jarg1, _GFilterInputStream jarg1_);
  public final static native int _frida_g_filter_input_stream_get_close_base_stream(long jarg1, _GFilterInputStream jarg1_);
  public final static native void _frida_g_filter_input_stream_set_close_base_stream(long jarg1, _GFilterInputStream jarg1_, int jarg2);
  public final static native void _GBufferedInputStream_parent_instance_set(long jarg1, _GBufferedInputStream jarg1_, long jarg2, _GFilterInputStream jarg2_);
  public final static native long _GBufferedInputStream_parent_instance_get(long jarg1, _GBufferedInputStream jarg1_);
  public final static native void _GBufferedInputStream_priv_set(long jarg1, _GBufferedInputStream jarg1_, long jarg2);
  public final static native long _GBufferedInputStream_priv_get(long jarg1, _GBufferedInputStream jarg1_);
  public final static native long new__GBufferedInputStream();
  public final static native void delete__GBufferedInputStream(long jarg1);
  public final static native void _GBufferedInputStreamClass_parent_class_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2, _GFilterInputStreamClass jarg2_);
  public final static native long _GBufferedInputStreamClass_parent_class_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass_fill_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass_fill_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass_fill_async_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass_fill_async_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass_fill_finish_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass_fill_finish_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass__g_reserved1_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass__g_reserved1_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass__g_reserved2_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass__g_reserved2_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass__g_reserved3_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass__g_reserved3_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass__g_reserved4_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass__g_reserved4_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native void _GBufferedInputStreamClass__g_reserved5_set(long jarg1, _GBufferedInputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedInputStreamClass__g_reserved5_get(long jarg1, _GBufferedInputStreamClass jarg1_);
  public final static native long new__GBufferedInputStreamClass();
  public final static native void delete__GBufferedInputStreamClass(long jarg1);
  public final static native long _frida_g_buffered_input_stream_get_type();
  public final static native long _frida_g_buffered_input_stream_new(long jarg1, _GInputStream jarg1_);
  public final static native long _frida_g_buffered_input_stream_new_sized(long jarg1, _GInputStream jarg1_, long jarg2);
  public final static native long _frida_g_buffered_input_stream_get_buffer_size(long jarg1, _GBufferedInputStream jarg1_);
  public final static native void _frida_g_buffered_input_stream_set_buffer_size(long jarg1, _GBufferedInputStream jarg1_, long jarg2);
  public final static native long _frida_g_buffered_input_stream_get_available(long jarg1, _GBufferedInputStream jarg1_);
  public final static native long _frida_g_buffered_input_stream_peek(long jarg1, _GBufferedInputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_buffered_input_stream_peek_buffer(long jarg1, _GBufferedInputStream jarg1_, long jarg2);
  public final static native int _frida_g_buffered_input_stream_fill(long jarg1, _GBufferedInputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_buffered_input_stream_fill_async(long jarg1, _GBufferedInputStream jarg1_, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_buffered_input_stream_fill_finish(long jarg1, _GBufferedInputStream jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_buffered_input_stream_read_byte(long jarg1, _GBufferedInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _GOutputStream_parent_instance_set(long jarg1, _GOutputStream jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GOutputStream_parent_instance_get(long jarg1, _GOutputStream jarg1_);
  public final static native void _GOutputStream_priv_set(long jarg1, _GOutputStream jarg1_, long jarg2);
  public final static native long _GOutputStream_priv_get(long jarg1, _GOutputStream jarg1_);
  public final static native long new__GOutputStream();
  public final static native void delete__GOutputStream(long jarg1);
  public final static native void _GOutputStreamClass_parent_class_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GOutputStreamClass_parent_class_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_write_fn_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_write_fn_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_splice_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_splice_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_flush_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_flush_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_close_fn_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_close_fn_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_write_async_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_write_async_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_write_finish_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_write_finish_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_splice_async_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_splice_async_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_splice_finish_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_splice_finish_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_flush_async_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_flush_async_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_flush_finish_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_flush_finish_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_close_async_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_close_async_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_close_finish_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_close_finish_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_writev_fn_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_writev_fn_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_writev_async_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_writev_async_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass_writev_finish_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass_writev_finish_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass__g_reserved4_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass__g_reserved4_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass__g_reserved5_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass__g_reserved5_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass__g_reserved6_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass__g_reserved6_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass__g_reserved7_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass__g_reserved7_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native void _GOutputStreamClass__g_reserved8_set(long jarg1, _GOutputStreamClass jarg1_, long jarg2);
  public final static native long _GOutputStreamClass__g_reserved8_get(long jarg1, _GOutputStreamClass jarg1_);
  public final static native long new__GOutputStreamClass();
  public final static native void delete__GOutputStreamClass(long jarg1);
  public final static native long _frida_g_output_stream_get_type();
  public final static native int _frida_g_output_stream_write(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_output_stream_write_all(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_output_stream_writev(long jarg1, _GOutputStream jarg1_, long jarg2, _GOutputVector jarg2_, long jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_output_stream_writev_all(long jarg1, _GOutputStream jarg1_, long jarg2, _GOutputVector jarg2_, long jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_output_stream_printf(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, String jarg5);
  public final static native int _frida_g_output_stream_write_bytes(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_output_stream_splice(long jarg1, _GOutputStream jarg1_, long jarg2, _GInputStream jarg2_, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_output_stream_flush(long jarg1, _GOutputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_output_stream_close(long jarg1, _GOutputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_output_stream_write_async(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_output_stream_write_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_output_stream_write_all_async(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_output_stream_write_all_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_output_stream_writev_async(long jarg1, _GOutputStream jarg1_, long jarg2, _GOutputVector jarg2_, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_output_stream_writev_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_output_stream_writev_all_async(long jarg1, _GOutputStream jarg1_, long jarg2, _GOutputVector jarg2_, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_output_stream_writev_all_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_output_stream_write_bytes_async(long jarg1, _GOutputStream jarg1_, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_output_stream_write_bytes_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_output_stream_splice_async(long jarg1, _GOutputStream jarg1_, long jarg2, _GInputStream jarg2_, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_output_stream_splice_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_output_stream_flush_async(long jarg1, _GOutputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_output_stream_flush_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_output_stream_close_async(long jarg1, _GOutputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_output_stream_close_finish(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_output_stream_is_closed(long jarg1, _GOutputStream jarg1_);
  public final static native int _frida_g_output_stream_is_closing(long jarg1, _GOutputStream jarg1_);
  public final static native int _frida_g_output_stream_has_pending(long jarg1, _GOutputStream jarg1_);
  public final static native int _frida_g_output_stream_set_pending(long jarg1, _GOutputStream jarg1_, long jarg2);
  public final static native void _frida_g_output_stream_clear_pending(long jarg1, _GOutputStream jarg1_);
  public final static native void _GFilterOutputStream_parent_instance_set(long jarg1, _GFilterOutputStream jarg1_, long jarg2, _GOutputStream jarg2_);
  public final static native long _GFilterOutputStream_parent_instance_get(long jarg1, _GFilterOutputStream jarg1_);
  public final static native void _GFilterOutputStream_base_stream_set(long jarg1, _GFilterOutputStream jarg1_, long jarg2, _GOutputStream jarg2_);
  public final static native long _GFilterOutputStream_base_stream_get(long jarg1, _GFilterOutputStream jarg1_);
  public final static native long new__GFilterOutputStream();
  public final static native void delete__GFilterOutputStream(long jarg1);
  public final static native void _GFilterOutputStreamClass_parent_class_set(long jarg1, _GFilterOutputStreamClass jarg1_, long jarg2, _GOutputStreamClass jarg2_);
  public final static native long _GFilterOutputStreamClass_parent_class_get(long jarg1, _GFilterOutputStreamClass jarg1_);
  public final static native void _GFilterOutputStreamClass__g_reserved1_set(long jarg1, _GFilterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFilterOutputStreamClass__g_reserved1_get(long jarg1, _GFilterOutputStreamClass jarg1_);
  public final static native void _GFilterOutputStreamClass__g_reserved2_set(long jarg1, _GFilterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFilterOutputStreamClass__g_reserved2_get(long jarg1, _GFilterOutputStreamClass jarg1_);
  public final static native void _GFilterOutputStreamClass__g_reserved3_set(long jarg1, _GFilterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFilterOutputStreamClass__g_reserved3_get(long jarg1, _GFilterOutputStreamClass jarg1_);
  public final static native long new__GFilterOutputStreamClass();
  public final static native void delete__GFilterOutputStreamClass(long jarg1);
  public final static native long _frida_g_filter_output_stream_get_type();
  public final static native long _frida_g_filter_output_stream_get_base_stream(long jarg1, _GFilterOutputStream jarg1_);
  public final static native int _frida_g_filter_output_stream_get_close_base_stream(long jarg1, _GFilterOutputStream jarg1_);
  public final static native void _frida_g_filter_output_stream_set_close_base_stream(long jarg1, _GFilterOutputStream jarg1_, int jarg2);
  public final static native void _GBufferedOutputStream_parent_instance_set(long jarg1, _GBufferedOutputStream jarg1_, long jarg2, _GFilterOutputStream jarg2_);
  public final static native long _GBufferedOutputStream_parent_instance_get(long jarg1, _GBufferedOutputStream jarg1_);
  public final static native void _GBufferedOutputStream_priv_set(long jarg1, _GBufferedOutputStream jarg1_, long jarg2);
  public final static native long _GBufferedOutputStream_priv_get(long jarg1, _GBufferedOutputStream jarg1_);
  public final static native long new__GBufferedOutputStream();
  public final static native void delete__GBufferedOutputStream(long jarg1);
  public final static native void _GBufferedOutputStreamClass_parent_class_set(long jarg1, _GBufferedOutputStreamClass jarg1_, long jarg2, _GFilterOutputStreamClass jarg2_);
  public final static native long _GBufferedOutputStreamClass_parent_class_get(long jarg1, _GBufferedOutputStreamClass jarg1_);
  public final static native void _GBufferedOutputStreamClass__g_reserved1_set(long jarg1, _GBufferedOutputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedOutputStreamClass__g_reserved1_get(long jarg1, _GBufferedOutputStreamClass jarg1_);
  public final static native void _GBufferedOutputStreamClass__g_reserved2_set(long jarg1, _GBufferedOutputStreamClass jarg1_, long jarg2);
  public final static native long _GBufferedOutputStreamClass__g_reserved2_get(long jarg1, _GBufferedOutputStreamClass jarg1_);
  public final static native long new__GBufferedOutputStreamClass();
  public final static native void delete__GBufferedOutputStreamClass(long jarg1);
  public final static native long _frida_g_buffered_output_stream_get_type();
  public final static native long _frida_g_buffered_output_stream_new(long jarg1, _GOutputStream jarg1_);
  public final static native long _frida_g_buffered_output_stream_new_sized(long jarg1, _GOutputStream jarg1_, long jarg2);
  public final static native long _frida_g_buffered_output_stream_get_buffer_size(long jarg1, _GBufferedOutputStream jarg1_);
  public final static native void _frida_g_buffered_output_stream_set_buffer_size(long jarg1, _GBufferedOutputStream jarg1_, long jarg2);
  public final static native int _frida_g_buffered_output_stream_get_auto_grow(long jarg1, _GBufferedOutputStream jarg1_);
  public final static native void _frida_g_buffered_output_stream_set_auto_grow(long jarg1, _GBufferedOutputStream jarg1_, int jarg2);
  public final static native long _frida_g_bytes_icon_get_type();
  public final static native long _frida_g_bytes_icon_new(long jarg1);
  public final static native long _frida_g_bytes_icon_get_bytes(long jarg1);
  public final static native void _GCancellable_parent_instance_set(long jarg1, _GCancellable jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GCancellable_parent_instance_get(long jarg1, _GCancellable jarg1_);
  public final static native void _GCancellable_priv_set(long jarg1, _GCancellable jarg1_, long jarg2);
  public final static native long _GCancellable_priv_get(long jarg1, _GCancellable jarg1_);
  public final static native long new__GCancellable();
  public final static native void delete__GCancellable(long jarg1);
  public final static native void _GCancellableClass_parent_class_set(long jarg1, _GCancellableClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GCancellableClass_parent_class_get(long jarg1, _GCancellableClass jarg1_);
  public final static native void _GCancellableClass_cancelled_set(long jarg1, _GCancellableClass jarg1_, long jarg2);
  public final static native long _GCancellableClass_cancelled_get(long jarg1, _GCancellableClass jarg1_);
  public final static native void _GCancellableClass__g_reserved1_set(long jarg1, _GCancellableClass jarg1_, long jarg2);
  public final static native long _GCancellableClass__g_reserved1_get(long jarg1, _GCancellableClass jarg1_);
  public final static native void _GCancellableClass__g_reserved2_set(long jarg1, _GCancellableClass jarg1_, long jarg2);
  public final static native long _GCancellableClass__g_reserved2_get(long jarg1, _GCancellableClass jarg1_);
  public final static native void _GCancellableClass__g_reserved3_set(long jarg1, _GCancellableClass jarg1_, long jarg2);
  public final static native long _GCancellableClass__g_reserved3_get(long jarg1, _GCancellableClass jarg1_);
  public final static native void _GCancellableClass__g_reserved4_set(long jarg1, _GCancellableClass jarg1_, long jarg2);
  public final static native long _GCancellableClass__g_reserved4_get(long jarg1, _GCancellableClass jarg1_);
  public final static native void _GCancellableClass__g_reserved5_set(long jarg1, _GCancellableClass jarg1_, long jarg2);
  public final static native long _GCancellableClass__g_reserved5_get(long jarg1, _GCancellableClass jarg1_);
  public final static native long new__GCancellableClass();
  public final static native void delete__GCancellableClass(long jarg1);
  public final static native long _frida_g_cancellable_get_type();
  public final static native long _frida_g_cancellable_new();
  public final static native int _frida_g_cancellable_is_cancelled(long jarg1, _GCancellable jarg1_);
  public final static native int _frida_g_cancellable_set_error_if_cancelled(long jarg1, _GCancellable jarg1_, long jarg2);
  public final static native int _frida_g_cancellable_get_fd(long jarg1, _GCancellable jarg1_);
  public final static native int _frida_g_cancellable_make_pollfd(long jarg1, _GCancellable jarg1_, long jarg2, _GPollFD jarg2_);
  public final static native void _frida_g_cancellable_release_fd(long jarg1, _GCancellable jarg1_);
  public final static native long _frida_g_cancellable_source_new(long jarg1, _GCancellable jarg1_);
  public final static native long _frida_g_cancellable_get_current();
  public final static native void _frida_g_cancellable_push_current(long jarg1, _GCancellable jarg1_);
  public final static native void _frida_g_cancellable_pop_current(long jarg1, _GCancellable jarg1_);
  public final static native void _frida_g_cancellable_reset(long jarg1, _GCancellable jarg1_);
  public final static native long _frida_g_cancellable_connect(long jarg1, _GCancellable jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_cancellable_disconnect(long jarg1, _GCancellable jarg1_, long jarg2);
  public final static native void _frida_g_cancellable_cancel(long jarg1, _GCancellable jarg1_);
  public final static native void _GConverterIface_g_iface_set(long jarg1, _GConverterIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GConverterIface_g_iface_get(long jarg1, _GConverterIface jarg1_);
  public final static native void _GConverterIface_convert_set(long jarg1, _GConverterIface jarg1_, long jarg2);
  public final static native long _GConverterIface_convert_get(long jarg1, _GConverterIface jarg1_);
  public final static native void _GConverterIface_reset_set(long jarg1, _GConverterIface jarg1_, long jarg2);
  public final static native long _GConverterIface_reset_get(long jarg1, _GConverterIface jarg1_);
  public final static native long new__GConverterIface();
  public final static native void delete__GConverterIface(long jarg1);
  public final static native long _frida_g_converter_get_type();
  public final static native int _frida_g_converter_convert(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void _frida_g_converter_reset(long jarg1);
  public final static native void _GCharsetConverterClass_parent_class_set(long jarg1, _GCharsetConverterClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GCharsetConverterClass_parent_class_get(long jarg1, _GCharsetConverterClass jarg1_);
  public final static native long new__GCharsetConverterClass();
  public final static native void delete__GCharsetConverterClass(long jarg1);
  public final static native long _frida_g_charset_converter_get_type();
  public final static native long _frida_g_charset_converter_new(String jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_charset_converter_set_use_fallback(long jarg1, int jarg2);
  public final static native int _frida_g_charset_converter_get_use_fallback(long jarg1);
  public final static native long _frida_g_charset_converter_get_num_fallbacks(long jarg1);
  public final static native int _frida_g_content_type_equals(String jarg1, String jarg2);
  public final static native int _frida_g_content_type_is_a(String jarg1, String jarg2);
  public final static native int _frida_g_content_type_is_mime_type(String jarg1, String jarg2);
  public final static native int _frida_g_content_type_is_unknown(String jarg1);
  public final static native String _frida_g_content_type_get_description(String jarg1);
  public final static native String _frida_g_content_type_get_mime_type(String jarg1);
  public final static native long _frida_g_content_type_get_icon(String jarg1);
  public final static native long _frida_g_content_type_get_symbolic_icon(String jarg1);
  public final static native String _frida_g_content_type_get_generic_icon_name(String jarg1);
  public final static native int _frida_g_content_type_can_be_executable(String jarg1);
  public final static native String _frida_g_content_type_from_mime_type(String jarg1);
  public final static native String _frida_g_content_type_guess(String jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_content_type_guess_for_tree(long jarg1);
  public final static native long _frida_g_content_types_get_registered();
  public final static native long _frida_g_content_type_get_mime_dirs();
  public final static native void _frida_g_content_type_set_mime_dirs(long jarg1);
  public final static native void _GConverterInputStream_parent_instance_set(long jarg1, _GConverterInputStream jarg1_, long jarg2, _GFilterInputStream jarg2_);
  public final static native long _GConverterInputStream_parent_instance_get(long jarg1, _GConverterInputStream jarg1_);
  public final static native void _GConverterInputStream_priv_set(long jarg1, _GConverterInputStream jarg1_, long jarg2);
  public final static native long _GConverterInputStream_priv_get(long jarg1, _GConverterInputStream jarg1_);
  public final static native long new__GConverterInputStream();
  public final static native void delete__GConverterInputStream(long jarg1);
  public final static native void _GConverterInputStreamClass_parent_class_set(long jarg1, _GConverterInputStreamClass jarg1_, long jarg2, _GFilterInputStreamClass jarg2_);
  public final static native long _GConverterInputStreamClass_parent_class_get(long jarg1, _GConverterInputStreamClass jarg1_);
  public final static native void _GConverterInputStreamClass__g_reserved1_set(long jarg1, _GConverterInputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterInputStreamClass__g_reserved1_get(long jarg1, _GConverterInputStreamClass jarg1_);
  public final static native void _GConverterInputStreamClass__g_reserved2_set(long jarg1, _GConverterInputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterInputStreamClass__g_reserved2_get(long jarg1, _GConverterInputStreamClass jarg1_);
  public final static native void _GConverterInputStreamClass__g_reserved3_set(long jarg1, _GConverterInputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterInputStreamClass__g_reserved3_get(long jarg1, _GConverterInputStreamClass jarg1_);
  public final static native void _GConverterInputStreamClass__g_reserved4_set(long jarg1, _GConverterInputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterInputStreamClass__g_reserved4_get(long jarg1, _GConverterInputStreamClass jarg1_);
  public final static native void _GConverterInputStreamClass__g_reserved5_set(long jarg1, _GConverterInputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterInputStreamClass__g_reserved5_get(long jarg1, _GConverterInputStreamClass jarg1_);
  public final static native long new__GConverterInputStreamClass();
  public final static native void delete__GConverterInputStreamClass(long jarg1);
  public final static native long _frida_g_converter_input_stream_get_type();
  public final static native long _frida_g_converter_input_stream_new(long jarg1, _GInputStream jarg1_, long jarg2);
  public final static native long _frida_g_converter_input_stream_get_converter(long jarg1, _GConverterInputStream jarg1_);
  public final static native void _GConverterOutputStream_parent_instance_set(long jarg1, _GConverterOutputStream jarg1_, long jarg2, _GFilterOutputStream jarg2_);
  public final static native long _GConverterOutputStream_parent_instance_get(long jarg1, _GConverterOutputStream jarg1_);
  public final static native void _GConverterOutputStream_priv_set(long jarg1, _GConverterOutputStream jarg1_, long jarg2);
  public final static native long _GConverterOutputStream_priv_get(long jarg1, _GConverterOutputStream jarg1_);
  public final static native long new__GConverterOutputStream();
  public final static native void delete__GConverterOutputStream(long jarg1);
  public final static native void _GConverterOutputStreamClass_parent_class_set(long jarg1, _GConverterOutputStreamClass jarg1_, long jarg2, _GFilterOutputStreamClass jarg2_);
  public final static native long _GConverterOutputStreamClass_parent_class_get(long jarg1, _GConverterOutputStreamClass jarg1_);
  public final static native void _GConverterOutputStreamClass__g_reserved1_set(long jarg1, _GConverterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterOutputStreamClass__g_reserved1_get(long jarg1, _GConverterOutputStreamClass jarg1_);
  public final static native void _GConverterOutputStreamClass__g_reserved2_set(long jarg1, _GConverterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterOutputStreamClass__g_reserved2_get(long jarg1, _GConverterOutputStreamClass jarg1_);
  public final static native void _GConverterOutputStreamClass__g_reserved3_set(long jarg1, _GConverterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterOutputStreamClass__g_reserved3_get(long jarg1, _GConverterOutputStreamClass jarg1_);
  public final static native void _GConverterOutputStreamClass__g_reserved4_set(long jarg1, _GConverterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterOutputStreamClass__g_reserved4_get(long jarg1, _GConverterOutputStreamClass jarg1_);
  public final static native void _GConverterOutputStreamClass__g_reserved5_set(long jarg1, _GConverterOutputStreamClass jarg1_, long jarg2);
  public final static native long _GConverterOutputStreamClass__g_reserved5_get(long jarg1, _GConverterOutputStreamClass jarg1_);
  public final static native long new__GConverterOutputStreamClass();
  public final static native void delete__GConverterOutputStreamClass(long jarg1);
  public final static native long _frida_g_converter_output_stream_get_type();
  public final static native long _frida_g_converter_output_stream_new(long jarg1, _GOutputStream jarg1_, long jarg2);
  public final static native long _frida_g_converter_output_stream_get_converter(long jarg1, _GConverterOutputStream jarg1_);
  public final static native long _frida_g_credentials_get_type();
  public final static native long _frida_g_credentials_new();
  public final static native String _frida_g_credentials_to_string(long jarg1);
  public final static native long _frida_g_credentials_get_native(long jarg1, int jarg2);
  public final static native void _frida_g_credentials_set_native(long jarg1, int jarg2, long jarg3);
  public final static native int _frida_g_credentials_is_same_user(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_credentials_get_unix_pid(long jarg1, long jarg2);
  public final static native long _frida_g_credentials_get_unix_user(long jarg1, long jarg2);
  public final static native int _frida_g_credentials_set_unix_user(long jarg1, long jarg2, long jarg3);
  public final static native void _GDatagramBasedInterface_g_iface_set(long jarg1, _GDatagramBasedInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDatagramBasedInterface_g_iface_get(long jarg1, _GDatagramBasedInterface jarg1_);
  public final static native void _GDatagramBasedInterface_receive_messages_set(long jarg1, _GDatagramBasedInterface jarg1_, long jarg2);
  public final static native long _GDatagramBasedInterface_receive_messages_get(long jarg1, _GDatagramBasedInterface jarg1_);
  public final static native void _GDatagramBasedInterface_send_messages_set(long jarg1, _GDatagramBasedInterface jarg1_, long jarg2);
  public final static native long _GDatagramBasedInterface_send_messages_get(long jarg1, _GDatagramBasedInterface jarg1_);
  public final static native void _GDatagramBasedInterface_create_source_set(long jarg1, _GDatagramBasedInterface jarg1_, long jarg2);
  public final static native long _GDatagramBasedInterface_create_source_get(long jarg1, _GDatagramBasedInterface jarg1_);
  public final static native void _GDatagramBasedInterface_condition_check_set(long jarg1, _GDatagramBasedInterface jarg1_, long jarg2);
  public final static native long _GDatagramBasedInterface_condition_check_get(long jarg1, _GDatagramBasedInterface jarg1_);
  public final static native void _GDatagramBasedInterface_condition_wait_set(long jarg1, _GDatagramBasedInterface jarg1_, long jarg2);
  public final static native long _GDatagramBasedInterface_condition_wait_get(long jarg1, _GDatagramBasedInterface jarg1_);
  public final static native long new__GDatagramBasedInterface();
  public final static native void delete__GDatagramBasedInterface(long jarg1);
  public final static native long _frida_g_datagram_based_get_type();
  public final static native int _frida_g_datagram_based_receive_messages(long jarg1, long jarg2, _GInputMessage jarg2_, long jarg3, int jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native int _frida_g_datagram_based_send_messages(long jarg1, long jarg2, _GOutputMessage jarg2_, long jarg3, int jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native long _frida_g_datagram_based_create_source(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_);
  public final static native int _frida_g_datagram_based_condition_check(long jarg1, int jarg2);
  public final static native int _frida_g_datagram_based_condition_wait(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _GDataInputStream_parent_instance_set(long jarg1, _GDataInputStream jarg1_, long jarg2, _GBufferedInputStream jarg2_);
  public final static native long _GDataInputStream_parent_instance_get(long jarg1, _GDataInputStream jarg1_);
  public final static native void _GDataInputStream_priv_set(long jarg1, _GDataInputStream jarg1_, long jarg2);
  public final static native long _GDataInputStream_priv_get(long jarg1, _GDataInputStream jarg1_);
  public final static native long new__GDataInputStream();
  public final static native void delete__GDataInputStream(long jarg1);
  public final static native void _GDataInputStreamClass_parent_class_set(long jarg1, _GDataInputStreamClass jarg1_, long jarg2, _GBufferedInputStreamClass jarg2_);
  public final static native long _GDataInputStreamClass_parent_class_get(long jarg1, _GDataInputStreamClass jarg1_);
  public final static native void _GDataInputStreamClass__g_reserved1_set(long jarg1, _GDataInputStreamClass jarg1_, long jarg2);
  public final static native long _GDataInputStreamClass__g_reserved1_get(long jarg1, _GDataInputStreamClass jarg1_);
  public final static native void _GDataInputStreamClass__g_reserved2_set(long jarg1, _GDataInputStreamClass jarg1_, long jarg2);
  public final static native long _GDataInputStreamClass__g_reserved2_get(long jarg1, _GDataInputStreamClass jarg1_);
  public final static native void _GDataInputStreamClass__g_reserved3_set(long jarg1, _GDataInputStreamClass jarg1_, long jarg2);
  public final static native long _GDataInputStreamClass__g_reserved3_get(long jarg1, _GDataInputStreamClass jarg1_);
  public final static native void _GDataInputStreamClass__g_reserved4_set(long jarg1, _GDataInputStreamClass jarg1_, long jarg2);
  public final static native long _GDataInputStreamClass__g_reserved4_get(long jarg1, _GDataInputStreamClass jarg1_);
  public final static native void _GDataInputStreamClass__g_reserved5_set(long jarg1, _GDataInputStreamClass jarg1_, long jarg2);
  public final static native long _GDataInputStreamClass__g_reserved5_get(long jarg1, _GDataInputStreamClass jarg1_);
  public final static native long new__GDataInputStreamClass();
  public final static native void delete__GDataInputStreamClass(long jarg1);
  public final static native long _frida_g_data_input_stream_get_type();
  public final static native long _frida_g_data_input_stream_new(long jarg1, _GInputStream jarg1_);
  public final static native void _frida_g_data_input_stream_set_byte_order(long jarg1, _GDataInputStream jarg1_, int jarg2);
  public final static native int _frida_g_data_input_stream_get_byte_order(long jarg1, _GDataInputStream jarg1_);
  public final static native void _frida_g_data_input_stream_set_newline_type(long jarg1, _GDataInputStream jarg1_, int jarg2);
  public final static native int _frida_g_data_input_stream_get_newline_type(long jarg1, _GDataInputStream jarg1_);
  public final static native short _frida_g_data_input_stream_read_byte(long jarg1, _GDataInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native short _frida_g_data_input_stream_read_int16(long jarg1, _GDataInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_data_input_stream_read_uint16(long jarg1, _GDataInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_data_input_stream_read_int32(long jarg1, _GDataInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native long _frida_g_data_input_stream_read_uint32(long jarg1, _GDataInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_data_input_stream_read_int64(long jarg1, _GDataInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native long _frida_g_data_input_stream_read_uint64(long jarg1, _GDataInputStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native String _frida_g_data_input_stream_read_line(long jarg1, _GDataInputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native String _frida_g_data_input_stream_read_line_utf8(long jarg1, _GDataInputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_data_input_stream_read_line_async(long jarg1, _GDataInputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native String _frida_g_data_input_stream_read_line_finish(long jarg1, _GDataInputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_data_input_stream_read_line_finish_utf8(long jarg1, _GDataInputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_data_input_stream_read_until(long jarg1, _GDataInputStream jarg1_, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_data_input_stream_read_until_async(long jarg1, _GDataInputStream jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native String _frida_g_data_input_stream_read_until_finish(long jarg1, _GDataInputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native String _frida_g_data_input_stream_read_upto(long jarg1, _GDataInputStream jarg1_, String jarg2, int jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_data_input_stream_read_upto_async(long jarg1, _GDataInputStream jarg1_, String jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native String _frida_g_data_input_stream_read_upto_finish(long jarg1, _GDataInputStream jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _GDataOutputStream_parent_instance_set(long jarg1, _GDataOutputStream jarg1_, long jarg2, _GFilterOutputStream jarg2_);
  public final static native long _GDataOutputStream_parent_instance_get(long jarg1, _GDataOutputStream jarg1_);
  public final static native void _GDataOutputStream_priv_set(long jarg1, _GDataOutputStream jarg1_, long jarg2);
  public final static native long _GDataOutputStream_priv_get(long jarg1, _GDataOutputStream jarg1_);
  public final static native long new__GDataOutputStream();
  public final static native void delete__GDataOutputStream(long jarg1);
  public final static native void _GDataOutputStreamClass_parent_class_set(long jarg1, _GDataOutputStreamClass jarg1_, long jarg2, _GFilterOutputStreamClass jarg2_);
  public final static native long _GDataOutputStreamClass_parent_class_get(long jarg1, _GDataOutputStreamClass jarg1_);
  public final static native void _GDataOutputStreamClass__g_reserved1_set(long jarg1, _GDataOutputStreamClass jarg1_, long jarg2);
  public final static native long _GDataOutputStreamClass__g_reserved1_get(long jarg1, _GDataOutputStreamClass jarg1_);
  public final static native void _GDataOutputStreamClass__g_reserved2_set(long jarg1, _GDataOutputStreamClass jarg1_, long jarg2);
  public final static native long _GDataOutputStreamClass__g_reserved2_get(long jarg1, _GDataOutputStreamClass jarg1_);
  public final static native void _GDataOutputStreamClass__g_reserved3_set(long jarg1, _GDataOutputStreamClass jarg1_, long jarg2);
  public final static native long _GDataOutputStreamClass__g_reserved3_get(long jarg1, _GDataOutputStreamClass jarg1_);
  public final static native void _GDataOutputStreamClass__g_reserved4_set(long jarg1, _GDataOutputStreamClass jarg1_, long jarg2);
  public final static native long _GDataOutputStreamClass__g_reserved4_get(long jarg1, _GDataOutputStreamClass jarg1_);
  public final static native void _GDataOutputStreamClass__g_reserved5_set(long jarg1, _GDataOutputStreamClass jarg1_, long jarg2);
  public final static native long _GDataOutputStreamClass__g_reserved5_get(long jarg1, _GDataOutputStreamClass jarg1_);
  public final static native long new__GDataOutputStreamClass();
  public final static native void delete__GDataOutputStreamClass(long jarg1);
  public final static native long _frida_g_data_output_stream_get_type();
  public final static native long _frida_g_data_output_stream_new(long jarg1, _GOutputStream jarg1_);
  public final static native void _frida_g_data_output_stream_set_byte_order(long jarg1, _GDataOutputStream jarg1_, int jarg2);
  public final static native int _frida_g_data_output_stream_get_byte_order(long jarg1, _GDataOutputStream jarg1_);
  public final static native int _frida_g_data_output_stream_put_byte(long jarg1, _GDataOutputStream jarg1_, short jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_data_output_stream_put_int16(long jarg1, _GDataOutputStream jarg1_, short jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_data_output_stream_put_uint16(long jarg1, _GDataOutputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_data_output_stream_put_int32(long jarg1, _GDataOutputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_data_output_stream_put_uint32(long jarg1, _GDataOutputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_data_output_stream_put_int64(long jarg1, _GDataOutputStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_data_output_stream_put_uint64(long jarg1, _GDataOutputStream jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_data_output_stream_put_string(long jarg1, _GDataOutputStream jarg1_, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native String _frida_g_dbus_address_escape_value(String jarg1);
  public final static native int _frida_g_dbus_is_address(String jarg1);
  public final static native int _frida_g_dbus_is_supported_address(String jarg1, long jarg2);
  public final static native void _frida_g_dbus_address_get_stream(String jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long _frida_g_dbus_address_get_stream_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_dbus_address_get_stream_sync(String jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native String _frida_g_dbus_address_get_for_bus_sync(int jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native long _frida_g_dbus_auth_observer_get_type();
  public final static native long _frida_g_dbus_auth_observer_new();
  public final static native int _frida_g_dbus_auth_observer_authorize_authenticated_peer(long jarg1, long jarg2, _GIOStream jarg2_, long jarg3);
  public final static native int _frida_g_dbus_auth_observer_allow_mechanism(long jarg1, String jarg2);
  public final static native long _frida_g_dbus_connection_get_type();
  public final static native void _frida_g_bus_get(int jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long _frida_g_bus_get_finish(long jarg1, long jarg2);
  public final static native long _frida_g_bus_get_sync(int jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_dbus_connection_new(long jarg1, _GIOStream jarg1_, String jarg2, int jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_dbus_connection_new_finish(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_connection_new_sync(long jarg1, _GIOStream jarg1_, String jarg2, int jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_dbus_connection_new_for_address(String jarg1, int jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_dbus_connection_new_for_address_finish(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_connection_new_for_address_sync(String jarg1, int jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_dbus_connection_start_message_processing(long jarg1);
  public final static native int _frida_g_dbus_connection_is_closed(long jarg1);
  public final static native long _frida_g_dbus_connection_get_stream(long jarg1);
  public final static native String _frida_g_dbus_connection_get_guid(long jarg1);
  public final static native String _frida_g_dbus_connection_get_unique_name(long jarg1);
  public final static native long _frida_g_dbus_connection_get_peer_credentials(long jarg1);
  public final static native long _frida_g_dbus_connection_get_last_serial(long jarg1);
  public final static native int _frida_g_dbus_connection_get_exit_on_close(long jarg1);
  public final static native void _frida_g_dbus_connection_set_exit_on_close(long jarg1, int jarg2);
  public final static native int _frida_g_dbus_connection_get_capabilities(long jarg1);
  public final static native int _frida_g_dbus_connection_get_flags(long jarg1);
  public final static native void _frida_g_dbus_connection_close(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_dbus_connection_close_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_dbus_connection_close_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_dbus_connection_flush(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_dbus_connection_flush_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_dbus_connection_flush_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_dbus_connection_send_message(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_dbus_connection_send_message_with_reply(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long _frida_g_dbus_connection_send_message_with_reply_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_dbus_connection_send_message_with_reply_sync(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native int _frida_g_dbus_connection_emit_signal(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5, long jarg6, long jarg7);
  public final static native void _frida_g_dbus_connection_call(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5, long jarg6, long jarg7, int jarg8, int jarg9, long jarg10, _GCancellable jarg10_, long jarg11, long jarg12);
  public final static native long _frida_g_dbus_connection_call_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_dbus_connection_call_sync(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5, long jarg6, long jarg7, int jarg8, int jarg9, long jarg10, _GCancellable jarg10_, long jarg11);
  public final static native void _frida_g_dbus_connection_call_with_unix_fd_list(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5, long jarg6, long jarg7, int jarg8, int jarg9, long jarg10, long jarg11, _GCancellable jarg11_, long jarg12, long jarg13);
  public final static native long _frida_g_dbus_connection_call_with_unix_fd_list_finish(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_dbus_connection_call_with_unix_fd_list_sync(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5, long jarg6, long jarg7, int jarg8, int jarg9, long jarg10, long jarg11, long jarg12, _GCancellable jarg12_, long jarg13);
  public final static native void _GDBusInterfaceVTable_method_call_set(long jarg1, _GDBusInterfaceVTable jarg1_, long jarg2);
  public final static native long _GDBusInterfaceVTable_method_call_get(long jarg1, _GDBusInterfaceVTable jarg1_);
  public final static native void _GDBusInterfaceVTable_get_property_set(long jarg1, _GDBusInterfaceVTable jarg1_, long jarg2);
  public final static native long _GDBusInterfaceVTable_get_property_get(long jarg1, _GDBusInterfaceVTable jarg1_);
  public final static native void _GDBusInterfaceVTable_set_property_set(long jarg1, _GDBusInterfaceVTable jarg1_, long jarg2);
  public final static native long _GDBusInterfaceVTable_set_property_get(long jarg1, _GDBusInterfaceVTable jarg1_);
  public final static native void _GDBusInterfaceVTable_padding_set(long jarg1, _GDBusInterfaceVTable jarg1_, long jarg2);
  public final static native long _GDBusInterfaceVTable_padding_get(long jarg1, _GDBusInterfaceVTable jarg1_);
  public final static native long new__GDBusInterfaceVTable();
  public final static native void delete__GDBusInterfaceVTable(long jarg1);
  public final static native long _frida_g_dbus_connection_register_object(long jarg1, String jarg2, long jarg3, _GDBusInterfaceInfo jarg3_, long jarg4, _GDBusInterfaceVTable jarg4_, long jarg5, long jarg6, long jarg7);
  public final static native long _frida_g_dbus_connection_register_object_with_closures(long jarg1, String jarg2, long jarg3, _GDBusInterfaceInfo jarg3_, long jarg4, _GClosure jarg4_, long jarg5, _GClosure jarg5_, long jarg6, _GClosure jarg6_, long jarg7);
  public final static native int _frida_g_dbus_connection_unregister_object(long jarg1, long jarg2);
  public final static native void _GDBusSubtreeVTable_enumerate_set(long jarg1, _GDBusSubtreeVTable jarg1_, long jarg2);
  public final static native long _GDBusSubtreeVTable_enumerate_get(long jarg1, _GDBusSubtreeVTable jarg1_);
  public final static native void _GDBusSubtreeVTable_introspect_set(long jarg1, _GDBusSubtreeVTable jarg1_, long jarg2);
  public final static native long _GDBusSubtreeVTable_introspect_get(long jarg1, _GDBusSubtreeVTable jarg1_);
  public final static native void _GDBusSubtreeVTable_dispatch_set(long jarg1, _GDBusSubtreeVTable jarg1_, long jarg2);
  public final static native long _GDBusSubtreeVTable_dispatch_get(long jarg1, _GDBusSubtreeVTable jarg1_);
  public final static native void _GDBusSubtreeVTable_padding_set(long jarg1, _GDBusSubtreeVTable jarg1_, long jarg2);
  public final static native long _GDBusSubtreeVTable_padding_get(long jarg1, _GDBusSubtreeVTable jarg1_);
  public final static native long new__GDBusSubtreeVTable();
  public final static native void delete__GDBusSubtreeVTable(long jarg1);
  public final static native long _frida_g_dbus_connection_register_subtree(long jarg1, String jarg2, long jarg3, _GDBusSubtreeVTable jarg3_, int jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int _frida_g_dbus_connection_unregister_subtree(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_connection_signal_subscribe(long jarg1, String jarg2, String jarg3, String jarg4, String jarg5, String jarg6, int jarg7, long jarg8, long jarg9, long jarg10);
  public final static native void _frida_g_dbus_connection_signal_unsubscribe(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_connection_add_filter(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_dbus_connection_remove_filter(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_error_quark();
  public final static native int _frida_g_dbus_error_is_remote_error(long jarg1, _GError jarg1_);
  public final static native String _frida_g_dbus_error_get_remote_error(long jarg1, _GError jarg1_);
  public final static native int _frida_g_dbus_error_strip_remote_error(long jarg1, _GError jarg1_);
  public final static native void _GDBusErrorEntry_error_code_set(long jarg1, _GDBusErrorEntry jarg1_, int jarg2);
  public final static native int _GDBusErrorEntry_error_code_get(long jarg1, _GDBusErrorEntry jarg1_);
  public final static native void _GDBusErrorEntry_dbus_error_name_set(long jarg1, _GDBusErrorEntry jarg1_, String jarg2);
  public final static native String _GDBusErrorEntry_dbus_error_name_get(long jarg1, _GDBusErrorEntry jarg1_);
  public final static native long new__GDBusErrorEntry();
  public final static native void delete__GDBusErrorEntry(long jarg1);
  public final static native int _frida_g_dbus_error_register_error(long jarg1, int jarg2, String jarg3);
  public final static native int _frida_g_dbus_error_unregister_error(long jarg1, int jarg2, String jarg3);
  public final static native void _frida_g_dbus_error_register_error_domain(String jarg1, long jarg2, long jarg3, _GDBusErrorEntry jarg3_, long jarg4);
  public final static native long _frida_g_dbus_error_new_for_dbus_error(String jarg1, String jarg2);
  public final static native void _frida_g_dbus_error_set_dbus_error(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native String _frida_g_dbus_error_encode_gerror(long jarg1, _GError jarg1_);
  public final static native void _GDBusAnnotationInfo_ref_count_set(long jarg1, _GDBusAnnotationInfo jarg1_, int jarg2);
  public final static native int _GDBusAnnotationInfo_ref_count_get(long jarg1, _GDBusAnnotationInfo jarg1_);
  public final static native void _GDBusAnnotationInfo_key_set(long jarg1, _GDBusAnnotationInfo jarg1_, String jarg2);
  public final static native String _GDBusAnnotationInfo_key_get(long jarg1, _GDBusAnnotationInfo jarg1_);
  public final static native void _GDBusAnnotationInfo_value_set(long jarg1, _GDBusAnnotationInfo jarg1_, String jarg2);
  public final static native String _GDBusAnnotationInfo_value_get(long jarg1, _GDBusAnnotationInfo jarg1_);
  public final static native void _GDBusAnnotationInfo_annotations_set(long jarg1, _GDBusAnnotationInfo jarg1_, long jarg2);
  public final static native long _GDBusAnnotationInfo_annotations_get(long jarg1, _GDBusAnnotationInfo jarg1_);
  public final static native long new__GDBusAnnotationInfo();
  public final static native void delete__GDBusAnnotationInfo(long jarg1);
  public final static native void _GDBusArgInfo_ref_count_set(long jarg1, _GDBusArgInfo jarg1_, int jarg2);
  public final static native int _GDBusArgInfo_ref_count_get(long jarg1, _GDBusArgInfo jarg1_);
  public final static native void _GDBusArgInfo_name_set(long jarg1, _GDBusArgInfo jarg1_, String jarg2);
  public final static native String _GDBusArgInfo_name_get(long jarg1, _GDBusArgInfo jarg1_);
  public final static native void _GDBusArgInfo_signature_set(long jarg1, _GDBusArgInfo jarg1_, String jarg2);
  public final static native String _GDBusArgInfo_signature_get(long jarg1, _GDBusArgInfo jarg1_);
  public final static native void _GDBusArgInfo_annotations_set(long jarg1, _GDBusArgInfo jarg1_, long jarg2);
  public final static native long _GDBusArgInfo_annotations_get(long jarg1, _GDBusArgInfo jarg1_);
  public final static native long new__GDBusArgInfo();
  public final static native void delete__GDBusArgInfo(long jarg1);
  public final static native void _GDBusMethodInfo_ref_count_set(long jarg1, _GDBusMethodInfo jarg1_, int jarg2);
  public final static native int _GDBusMethodInfo_ref_count_get(long jarg1, _GDBusMethodInfo jarg1_);
  public final static native void _GDBusMethodInfo_name_set(long jarg1, _GDBusMethodInfo jarg1_, String jarg2);
  public final static native String _GDBusMethodInfo_name_get(long jarg1, _GDBusMethodInfo jarg1_);
  public final static native void _GDBusMethodInfo_in_args_set(long jarg1, _GDBusMethodInfo jarg1_, long jarg2);
  public final static native long _GDBusMethodInfo_in_args_get(long jarg1, _GDBusMethodInfo jarg1_);
  public final static native void _GDBusMethodInfo_out_args_set(long jarg1, _GDBusMethodInfo jarg1_, long jarg2);
  public final static native long _GDBusMethodInfo_out_args_get(long jarg1, _GDBusMethodInfo jarg1_);
  public final static native void _GDBusMethodInfo_annotations_set(long jarg1, _GDBusMethodInfo jarg1_, long jarg2);
  public final static native long _GDBusMethodInfo_annotations_get(long jarg1, _GDBusMethodInfo jarg1_);
  public final static native long new__GDBusMethodInfo();
  public final static native void delete__GDBusMethodInfo(long jarg1);
  public final static native void _GDBusSignalInfo_ref_count_set(long jarg1, _GDBusSignalInfo jarg1_, int jarg2);
  public final static native int _GDBusSignalInfo_ref_count_get(long jarg1, _GDBusSignalInfo jarg1_);
  public final static native void _GDBusSignalInfo_name_set(long jarg1, _GDBusSignalInfo jarg1_, String jarg2);
  public final static native String _GDBusSignalInfo_name_get(long jarg1, _GDBusSignalInfo jarg1_);
  public final static native void _GDBusSignalInfo_args_set(long jarg1, _GDBusSignalInfo jarg1_, long jarg2);
  public final static native long _GDBusSignalInfo_args_get(long jarg1, _GDBusSignalInfo jarg1_);
  public final static native void _GDBusSignalInfo_annotations_set(long jarg1, _GDBusSignalInfo jarg1_, long jarg2);
  public final static native long _GDBusSignalInfo_annotations_get(long jarg1, _GDBusSignalInfo jarg1_);
  public final static native long new__GDBusSignalInfo();
  public final static native void delete__GDBusSignalInfo(long jarg1);
  public final static native void _GDBusPropertyInfo_ref_count_set(long jarg1, _GDBusPropertyInfo jarg1_, int jarg2);
  public final static native int _GDBusPropertyInfo_ref_count_get(long jarg1, _GDBusPropertyInfo jarg1_);
  public final static native void _GDBusPropertyInfo_name_set(long jarg1, _GDBusPropertyInfo jarg1_, String jarg2);
  public final static native String _GDBusPropertyInfo_name_get(long jarg1, _GDBusPropertyInfo jarg1_);
  public final static native void _GDBusPropertyInfo_signature_set(long jarg1, _GDBusPropertyInfo jarg1_, String jarg2);
  public final static native String _GDBusPropertyInfo_signature_get(long jarg1, _GDBusPropertyInfo jarg1_);
  public final static native void _GDBusPropertyInfo_flags_set(long jarg1, _GDBusPropertyInfo jarg1_, int jarg2);
  public final static native int _GDBusPropertyInfo_flags_get(long jarg1, _GDBusPropertyInfo jarg1_);
  public final static native void _GDBusPropertyInfo_annotations_set(long jarg1, _GDBusPropertyInfo jarg1_, long jarg2);
  public final static native long _GDBusPropertyInfo_annotations_get(long jarg1, _GDBusPropertyInfo jarg1_);
  public final static native long new__GDBusPropertyInfo();
  public final static native void delete__GDBusPropertyInfo(long jarg1);
  public final static native void _GDBusInterfaceInfo_ref_count_set(long jarg1, _GDBusInterfaceInfo jarg1_, int jarg2);
  public final static native int _GDBusInterfaceInfo_ref_count_get(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _GDBusInterfaceInfo_name_set(long jarg1, _GDBusInterfaceInfo jarg1_, String jarg2);
  public final static native String _GDBusInterfaceInfo_name_get(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _GDBusInterfaceInfo_methods_set(long jarg1, _GDBusInterfaceInfo jarg1_, long jarg2);
  public final static native long _GDBusInterfaceInfo_methods_get(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _GDBusInterfaceInfo_signals_set(long jarg1, _GDBusInterfaceInfo jarg1_, long jarg2);
  public final static native long _GDBusInterfaceInfo_signals_get(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _GDBusInterfaceInfo_properties_set(long jarg1, _GDBusInterfaceInfo jarg1_, long jarg2);
  public final static native long _GDBusInterfaceInfo_properties_get(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _GDBusInterfaceInfo_annotations_set(long jarg1, _GDBusInterfaceInfo jarg1_, long jarg2);
  public final static native long _GDBusInterfaceInfo_annotations_get(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native long new__GDBusInterfaceInfo();
  public final static native void delete__GDBusInterfaceInfo(long jarg1);
  public final static native void _GDBusNodeInfo_ref_count_set(long jarg1, _GDBusNodeInfo jarg1_, int jarg2);
  public final static native int _GDBusNodeInfo_ref_count_get(long jarg1, _GDBusNodeInfo jarg1_);
  public final static native void _GDBusNodeInfo_path_set(long jarg1, _GDBusNodeInfo jarg1_, String jarg2);
  public final static native String _GDBusNodeInfo_path_get(long jarg1, _GDBusNodeInfo jarg1_);
  public final static native void _GDBusNodeInfo_interfaces_set(long jarg1, _GDBusNodeInfo jarg1_, long jarg2);
  public final static native long _GDBusNodeInfo_interfaces_get(long jarg1, _GDBusNodeInfo jarg1_);
  public final static native void _GDBusNodeInfo_nodes_set(long jarg1, _GDBusNodeInfo jarg1_, long jarg2);
  public final static native long _GDBusNodeInfo_nodes_get(long jarg1, _GDBusNodeInfo jarg1_);
  public final static native void _GDBusNodeInfo_annotations_set(long jarg1, _GDBusNodeInfo jarg1_, long jarg2);
  public final static native long _GDBusNodeInfo_annotations_get(long jarg1, _GDBusNodeInfo jarg1_);
  public final static native long new__GDBusNodeInfo();
  public final static native void delete__GDBusNodeInfo(long jarg1);
  public final static native String _frida_g_dbus_annotation_info_lookup(long jarg1, String jarg2);
  public final static native long _frida_g_dbus_interface_info_lookup_method(long jarg1, _GDBusInterfaceInfo jarg1_, String jarg2);
  public final static native long _frida_g_dbus_interface_info_lookup_signal(long jarg1, _GDBusInterfaceInfo jarg1_, String jarg2);
  public final static native long _frida_g_dbus_interface_info_lookup_property(long jarg1, _GDBusInterfaceInfo jarg1_, String jarg2);
  public final static native void _frida_g_dbus_interface_info_cache_build(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _frida_g_dbus_interface_info_cache_release(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _frida_g_dbus_interface_info_generate_xml(long jarg1, _GDBusInterfaceInfo jarg1_, long jarg2, long jarg3, _GString jarg3_);
  public final static native long _frida_g_dbus_node_info_new_for_xml(String jarg1, long jarg2);
  public final static native long _frida_g_dbus_node_info_lookup_interface(long jarg1, _GDBusNodeInfo jarg1_, String jarg2);
  public final static native void _frida_g_dbus_node_info_generate_xml(long jarg1, _GDBusNodeInfo jarg1_, long jarg2, long jarg3, _GString jarg3_);
  public final static native long _frida_g_dbus_node_info_ref(long jarg1, _GDBusNodeInfo jarg1_);
  public final static native long _frida_g_dbus_interface_info_ref(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native long _frida_g_dbus_method_info_ref(long jarg1, _GDBusMethodInfo jarg1_);
  public final static native long _frida_g_dbus_signal_info_ref(long jarg1, _GDBusSignalInfo jarg1_);
  public final static native long _frida_g_dbus_property_info_ref(long jarg1, _GDBusPropertyInfo jarg1_);
  public final static native long _frida_g_dbus_arg_info_ref(long jarg1, _GDBusArgInfo jarg1_);
  public final static native long _frida_g_dbus_annotation_info_ref(long jarg1, _GDBusAnnotationInfo jarg1_);
  public final static native void _frida_g_dbus_node_info_unref(long jarg1, _GDBusNodeInfo jarg1_);
  public final static native void _frida_g_dbus_interface_info_unref(long jarg1, _GDBusInterfaceInfo jarg1_);
  public final static native void _frida_g_dbus_method_info_unref(long jarg1, _GDBusMethodInfo jarg1_);
  public final static native void _frida_g_dbus_signal_info_unref(long jarg1, _GDBusSignalInfo jarg1_);
  public final static native void _frida_g_dbus_property_info_unref(long jarg1, _GDBusPropertyInfo jarg1_);
  public final static native void _frida_g_dbus_arg_info_unref(long jarg1, _GDBusArgInfo jarg1_);
  public final static native void _frida_g_dbus_annotation_info_unref(long jarg1, _GDBusAnnotationInfo jarg1_);
  public final static native long _frida_g_dbus_node_info_get_type();
  public final static native long _frida_g_dbus_interface_info_get_type();
  public final static native long _frida_g_dbus_method_info_get_type();
  public final static native long _frida_g_dbus_signal_info_get_type();
  public final static native long _frida_g_dbus_property_info_get_type();
  public final static native long _frida_g_dbus_arg_info_get_type();
  public final static native long _frida_g_dbus_annotation_info_get_type();
  public final static native long _frida_g_dbus_message_get_type();
  public final static native long _frida_g_dbus_message_new();
  public final static native long _frida_g_dbus_message_new_signal(String jarg1, String jarg2, String jarg3);
  public final static native long _frida_g_dbus_message_new_method_call(String jarg1, String jarg2, String jarg3, String jarg4);
  public final static native long _frida_g_dbus_message_new_method_reply(long jarg1);
  public final static native long _frida_g_dbus_message_new_method_error(long jarg1, String jarg2, String jarg3);
  public final static native long _frida_g_dbus_message_new_method_error_literal(long jarg1, String jarg2, String jarg3);
  public final static native String _frida_g_dbus_message_print(long jarg1, long jarg2);
  public final static native int _frida_g_dbus_message_get_locked(long jarg1);
  public final static native void _frida_g_dbus_message_lock(long jarg1);
  public final static native long _frida_g_dbus_message_copy(long jarg1, long jarg2);
  public final static native int _frida_g_dbus_message_get_byte_order(long jarg1);
  public final static native void _frida_g_dbus_message_set_byte_order(long jarg1, int jarg2);
  public final static native int _frida_g_dbus_message_get_message_type(long jarg1);
  public final static native void _frida_g_dbus_message_set_message_type(long jarg1, int jarg2);
  public final static native int _frida_g_dbus_message_get_flags(long jarg1);
  public final static native void _frida_g_dbus_message_set_flags(long jarg1, int jarg2);
  public final static native long _frida_g_dbus_message_get_serial(long jarg1);
  public final static native void _frida_g_dbus_message_set_serial(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_message_get_header(long jarg1, int jarg2);
  public final static native void _frida_g_dbus_message_set_header(long jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_dbus_message_get_header_fields(long jarg1);
  public final static native long _frida_g_dbus_message_get_body(long jarg1);
  public final static native void _frida_g_dbus_message_set_body(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_message_get_unix_fd_list(long jarg1);
  public final static native void _frida_g_dbus_message_set_unix_fd_list(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_message_get_reply_serial(long jarg1);
  public final static native void _frida_g_dbus_message_set_reply_serial(long jarg1, long jarg2);
  public final static native String _frida_g_dbus_message_get_interface(long jarg1);
  public final static native void _frida_g_dbus_message_set_interface(long jarg1, String jarg2);
  public final static native String _frida_g_dbus_message_get_member(long jarg1);
  public final static native void _frida_g_dbus_message_set_member(long jarg1, String jarg2);
  public final static native String _frida_g_dbus_message_get_path(long jarg1);
  public final static native void _frida_g_dbus_message_set_path(long jarg1, String jarg2);
  public final static native String _frida_g_dbus_message_get_sender(long jarg1);
  public final static native void _frida_g_dbus_message_set_sender(long jarg1, String jarg2);
  public final static native String _frida_g_dbus_message_get_destination(long jarg1);
  public final static native void _frida_g_dbus_message_set_destination(long jarg1, String jarg2);
  public final static native String _frida_g_dbus_message_get_error_name(long jarg1);
  public final static native void _frida_g_dbus_message_set_error_name(long jarg1, String jarg2);
  public final static native String _frida_g_dbus_message_get_signature(long jarg1);
  public final static native void _frida_g_dbus_message_set_signature(long jarg1, String jarg2);
  public final static native long _frida_g_dbus_message_get_num_unix_fds(long jarg1);
  public final static native void _frida_g_dbus_message_set_num_unix_fds(long jarg1, long jarg2);
  public final static native String _frida_g_dbus_message_get_arg0(long jarg1);
  public final static native long _frida_g_dbus_message_new_from_blob(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_dbus_message_bytes_needed(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_dbus_message_to_blob(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_dbus_message_to_gerror(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_method_invocation_get_type();
  public final static native String _frida_g_dbus_method_invocation_get_sender(long jarg1);
  public final static native String _frida_g_dbus_method_invocation_get_object_path(long jarg1);
  public final static native String _frida_g_dbus_method_invocation_get_interface_name(long jarg1);
  public final static native String _frida_g_dbus_method_invocation_get_method_name(long jarg1);
  public final static native long _frida_g_dbus_method_invocation_get_method_info(long jarg1);
  public final static native long _frida_g_dbus_method_invocation_get_property_info(long jarg1);
  public final static native long _frida_g_dbus_method_invocation_get_connection(long jarg1);
  public final static native long _frida_g_dbus_method_invocation_get_message(long jarg1);
  public final static native long _frida_g_dbus_method_invocation_get_parameters(long jarg1);
  public final static native long _frida_g_dbus_method_invocation_get_user_data(long jarg1);
  public final static native void _frida_g_dbus_method_invocation_return_value(long jarg1, long jarg2);
  public final static native void _frida_g_dbus_method_invocation_return_value_with_unix_fd_list(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_dbus_method_invocation_return_error(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native void _frida_g_dbus_method_invocation_return_error_literal(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native void _frida_g_dbus_method_invocation_return_gerror(long jarg1, long jarg2, _GError jarg2_);
  public final static native void _frida_g_dbus_method_invocation_take_error(long jarg1, long jarg2, _GError jarg2_);
  public final static native void _frida_g_dbus_method_invocation_return_dbus_error(long jarg1, String jarg2, String jarg3);
  public final static native long _frida_g_bus_own_name(int jarg1, String jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native long _frida_g_bus_own_name_on_connection(long jarg1, String jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native long _frida_g_bus_own_name_with_closures(int jarg1, String jarg2, int jarg3, long jarg4, _GClosure jarg4_, long jarg5, _GClosure jarg5_, long jarg6, _GClosure jarg6_);
  public final static native long _frida_g_bus_own_name_on_connection_with_closures(long jarg1, String jarg2, int jarg3, long jarg4, _GClosure jarg4_, long jarg5, _GClosure jarg5_);
  public final static native void _frida_g_bus_unown_name(long jarg1);
  public final static native long _frida_g_bus_watch_name(int jarg1, String jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native long _frida_g_bus_watch_name_on_connection(long jarg1, String jarg2, int jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native long _frida_g_bus_watch_name_with_closures(int jarg1, String jarg2, int jarg3, long jarg4, _GClosure jarg4_, long jarg5, _GClosure jarg5_);
  public final static native long _frida_g_bus_watch_name_on_connection_with_closures(long jarg1, String jarg2, int jarg3, long jarg4, _GClosure jarg4_, long jarg5, _GClosure jarg5_);
  public final static native void _frida_g_bus_unwatch_name(long jarg1);
  public final static native void _GDBusProxy_parent_instance_set(long jarg1, _GDBusProxy jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GDBusProxy_parent_instance_get(long jarg1, _GDBusProxy jarg1_);
  public final static native void _GDBusProxy_priv_set(long jarg1, _GDBusProxy jarg1_, long jarg2);
  public final static native long _GDBusProxy_priv_get(long jarg1, _GDBusProxy jarg1_);
  public final static native long new__GDBusProxy();
  public final static native void delete__GDBusProxy(long jarg1);
  public final static native void _GDBusProxyClass_parent_class_set(long jarg1, _GDBusProxyClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GDBusProxyClass_parent_class_get(long jarg1, _GDBusProxyClass jarg1_);
  public final static native void _GDBusProxyClass_g_properties_changed_set(long jarg1, _GDBusProxyClass jarg1_, long jarg2);
  public final static native long _GDBusProxyClass_g_properties_changed_get(long jarg1, _GDBusProxyClass jarg1_);
  public final static native void _GDBusProxyClass_g_signal_set(long jarg1, _GDBusProxyClass jarg1_, long jarg2);
  public final static native long _GDBusProxyClass_g_signal_get(long jarg1, _GDBusProxyClass jarg1_);
  public final static native void _GDBusProxyClass_padding_set(long jarg1, _GDBusProxyClass jarg1_, long jarg2);
  public final static native long _GDBusProxyClass_padding_get(long jarg1, _GDBusProxyClass jarg1_);
  public final static native long new__GDBusProxyClass();
  public final static native void delete__GDBusProxyClass(long jarg1);
  public final static native long _frida_g_dbus_proxy_get_type();
  public final static native void _frida_g_dbus_proxy_new(long jarg1, int jarg2, long jarg3, _GDBusInterfaceInfo jarg3_, String jarg4, String jarg5, String jarg6, long jarg7, _GCancellable jarg7_, long jarg8, long jarg9);
  public final static native long _frida_g_dbus_proxy_new_finish(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_proxy_new_sync(long jarg1, int jarg2, long jarg3, _GDBusInterfaceInfo jarg3_, String jarg4, String jarg5, String jarg6, long jarg7, _GCancellable jarg7_, long jarg8);
  public final static native void _frida_g_dbus_proxy_new_for_bus(int jarg1, int jarg2, long jarg3, _GDBusInterfaceInfo jarg3_, String jarg4, String jarg5, String jarg6, long jarg7, _GCancellable jarg7_, long jarg8, long jarg9);
  public final static native long _frida_g_dbus_proxy_new_for_bus_finish(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_proxy_new_for_bus_sync(int jarg1, int jarg2, long jarg3, _GDBusInterfaceInfo jarg3_, String jarg4, String jarg5, String jarg6, long jarg7, _GCancellable jarg7_, long jarg8);
  public final static native long _frida_g_dbus_proxy_get_connection(long jarg1, _GDBusProxy jarg1_);
  public final static native int _frida_g_dbus_proxy_get_flags(long jarg1, _GDBusProxy jarg1_);
  public final static native String _frida_g_dbus_proxy_get_name(long jarg1, _GDBusProxy jarg1_);
  public final static native String _frida_g_dbus_proxy_get_name_owner(long jarg1, _GDBusProxy jarg1_);
  public final static native String _frida_g_dbus_proxy_get_object_path(long jarg1, _GDBusProxy jarg1_);
  public final static native String _frida_g_dbus_proxy_get_interface_name(long jarg1, _GDBusProxy jarg1_);
  public final static native int _frida_g_dbus_proxy_get_default_timeout(long jarg1, _GDBusProxy jarg1_);
  public final static native void _frida_g_dbus_proxy_set_default_timeout(long jarg1, _GDBusProxy jarg1_, int jarg2);
  public final static native long _frida_g_dbus_proxy_get_interface_info(long jarg1, _GDBusProxy jarg1_);
  public final static native void _frida_g_dbus_proxy_set_interface_info(long jarg1, _GDBusProxy jarg1_, long jarg2, _GDBusInterfaceInfo jarg2_);
  public final static native long _frida_g_dbus_proxy_get_cached_property(long jarg1, _GDBusProxy jarg1_, String jarg2);
  public final static native void _frida_g_dbus_proxy_set_cached_property(long jarg1, _GDBusProxy jarg1_, String jarg2, long jarg3);
  public final static native long _frida_g_dbus_proxy_get_cached_property_names(long jarg1, _GDBusProxy jarg1_);
  public final static native void _frida_g_dbus_proxy_call(long jarg1, _GDBusProxy jarg1_, String jarg2, long jarg3, int jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long _frida_g_dbus_proxy_call_finish(long jarg1, _GDBusProxy jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_dbus_proxy_call_sync(long jarg1, _GDBusProxy jarg1_, String jarg2, long jarg3, int jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native void _frida_g_dbus_proxy_call_with_unix_fd_list(long jarg1, _GDBusProxy jarg1_, String jarg2, long jarg3, int jarg4, int jarg5, long jarg6, long jarg7, _GCancellable jarg7_, long jarg8, long jarg9);
  public final static native long _frida_g_dbus_proxy_call_with_unix_fd_list_finish(long jarg1, _GDBusProxy jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_dbus_proxy_call_with_unix_fd_list_sync(long jarg1, _GDBusProxy jarg1_, String jarg2, long jarg3, int jarg4, int jarg5, long jarg6, long jarg7, long jarg8, _GCancellable jarg8_, long jarg9);
  public final static native long _frida_g_dbus_server_get_type();
  public final static native long _frida_g_dbus_server_new_sync(String jarg1, int jarg2, String jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native String _frida_g_dbus_server_get_client_address(long jarg1);
  public final static native String _frida_g_dbus_server_get_guid(long jarg1);
  public final static native int _frida_g_dbus_server_get_flags(long jarg1);
  public final static native void _frida_g_dbus_server_start(long jarg1);
  public final static native void _frida_g_dbus_server_stop(long jarg1);
  public final static native int _frida_g_dbus_server_is_active(long jarg1);
  public final static native int _frida_g_dbus_is_guid(String jarg1);
  public final static native String _frida_g_dbus_generate_guid();
  public final static native int _frida_g_dbus_is_name(String jarg1);
  public final static native int _frida_g_dbus_is_unique_name(String jarg1);
  public final static native int _frida_g_dbus_is_member_name(String jarg1);
  public final static native int _frida_g_dbus_is_interface_name(String jarg1);
  public final static native void _frida_g_dbus_gvariant_to_gvalue(long jarg1, long jarg2, _GValue jarg2_);
  public final static native long _frida_g_dbus_gvalue_to_gvariant(long jarg1, _GValue jarg1_, long jarg2);
  public final static native String G_DRIVE_IDENTIFIER_KIND_UNIX_DEVICE_get();
  public final static native void _GDriveIface_g_iface_set(long jarg1, _GDriveIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDriveIface_g_iface_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_changed_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_changed_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_disconnected_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_disconnected_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_eject_button_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_eject_button_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_get_name_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_get_name_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_get_icon_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_get_icon_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_has_volumes_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_has_volumes_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_get_volumes_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_get_volumes_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_is_media_removable_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_is_media_removable_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_has_media_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_has_media_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_is_media_check_automatic_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_is_media_check_automatic_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_can_eject_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_can_eject_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_can_poll_for_media_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_can_poll_for_media_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_eject_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_eject_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_eject_finish_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_eject_finish_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_poll_for_media_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_poll_for_media_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_poll_for_media_finish_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_poll_for_media_finish_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_get_identifier_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_get_identifier_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_enumerate_identifiers_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_enumerate_identifiers_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_get_start_stop_type_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_get_start_stop_type_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_can_start_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_can_start_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_can_start_degraded_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_can_start_degraded_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_start_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_start_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_start_finish_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_start_finish_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_can_stop_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_can_stop_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_stop_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_stop_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_stop_finish_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_stop_finish_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_stop_button_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_stop_button_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_eject_with_operation_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_eject_with_operation_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_eject_with_operation_finish_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_eject_with_operation_finish_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_get_sort_key_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_get_sort_key_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_get_symbolic_icon_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_get_symbolic_icon_get(long jarg1, _GDriveIface jarg1_);
  public final static native void _GDriveIface_is_removable_set(long jarg1, _GDriveIface jarg1_, long jarg2);
  public final static native long _GDriveIface_is_removable_get(long jarg1, _GDriveIface jarg1_);
  public final static native long new__GDriveIface();
  public final static native void delete__GDriveIface(long jarg1);
  public final static native long _frida_g_drive_get_type();
  public final static native String _frida_g_drive_get_name(long jarg1);
  public final static native long _frida_g_drive_get_icon(long jarg1);
  public final static native long _frida_g_drive_get_symbolic_icon(long jarg1);
  public final static native int _frida_g_drive_has_volumes(long jarg1);
  public final static native long _frida_g_drive_get_volumes(long jarg1);
  public final static native int _frida_g_drive_is_removable(long jarg1);
  public final static native int _frida_g_drive_is_media_removable(long jarg1);
  public final static native int _frida_g_drive_has_media(long jarg1);
  public final static native int _frida_g_drive_is_media_check_automatic(long jarg1);
  public final static native int _frida_g_drive_can_poll_for_media(long jarg1);
  public final static native int _frida_g_drive_can_eject(long jarg1);
  public final static native void _frida_g_drive_eject(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_drive_eject_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_drive_poll_for_media(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_drive_poll_for_media_finish(long jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_drive_get_identifier(long jarg1, String jarg2);
  public final static native long _frida_g_drive_enumerate_identifiers(long jarg1);
  public final static native int _frida_g_drive_get_start_stop_type(long jarg1);
  public final static native int _frida_g_drive_can_start(long jarg1);
  public final static native int _frida_g_drive_can_start_degraded(long jarg1);
  public final static native void _frida_g_drive_start(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_drive_start_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_drive_can_stop(long jarg1);
  public final static native void _frida_g_drive_stop(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_drive_stop_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_drive_eject_with_operation(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_drive_eject_with_operation_finish(long jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_drive_get_sort_key(long jarg1);
  public final static native void _GDtlsConnectionInterface_g_iface_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDtlsConnectionInterface_g_iface_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_accept_certificate_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_accept_certificate_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_handshake_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_handshake_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_handshake_async_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_handshake_async_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_handshake_finish_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_handshake_finish_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_shutdown_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_shutdown_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_shutdown_async_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_shutdown_async_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_shutdown_finish_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_shutdown_finish_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_set_advertised_protocols_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_set_advertised_protocols_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native void _GDtlsConnectionInterface_get_negotiated_protocol_set(long jarg1, _GDtlsConnectionInterface jarg1_, long jarg2);
  public final static native long _GDtlsConnectionInterface_get_negotiated_protocol_get(long jarg1, _GDtlsConnectionInterface jarg1_);
  public final static native long new__GDtlsConnectionInterface();
  public final static native void delete__GDtlsConnectionInterface(long jarg1);
  public final static native long _frida_g_dtls_connection_get_type();
  public final static native void _frida_g_dtls_connection_set_database(long jarg1, long jarg2, _GTlsDatabase jarg2_);
  public final static native long _frida_g_dtls_connection_get_database(long jarg1);
  public final static native void _frida_g_dtls_connection_set_certificate(long jarg1, long jarg2, _GTlsCertificate jarg2_);
  public final static native long _frida_g_dtls_connection_get_certificate(long jarg1);
  public final static native void _frida_g_dtls_connection_set_interaction(long jarg1, long jarg2, _GTlsInteraction jarg2_);
  public final static native long _frida_g_dtls_connection_get_interaction(long jarg1);
  public final static native long _frida_g_dtls_connection_get_peer_certificate(long jarg1);
  public final static native int _frida_g_dtls_connection_get_peer_certificate_errors(long jarg1);
  public final static native void _frida_g_dtls_connection_set_require_close_notify(long jarg1, int jarg2);
  public final static native int _frida_g_dtls_connection_get_require_close_notify(long jarg1);
  public final static native void _frida_g_dtls_connection_set_rehandshake_mode(long jarg1, int jarg2);
  public final static native int _frida_g_dtls_connection_get_rehandshake_mode(long jarg1);
  public final static native int _frida_g_dtls_connection_handshake(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_dtls_connection_handshake_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_dtls_connection_handshake_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_dtls_connection_shutdown(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_dtls_connection_shutdown_async(long jarg1, int jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_dtls_connection_shutdown_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_dtls_connection_close(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_dtls_connection_close_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_dtls_connection_close_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_dtls_connection_emit_accept_certificate(long jarg1, long jarg2, _GTlsCertificate jarg2_, int jarg3);
  public final static native void _frida_g_dtls_connection_set_advertised_protocols(long jarg1, long jarg2);
  public final static native String _frida_g_dtls_connection_get_negotiated_protocol(long jarg1);
  public final static native void _GDtlsClientConnectionInterface_g_iface_set(long jarg1, _GDtlsClientConnectionInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDtlsClientConnectionInterface_g_iface_get(long jarg1, _GDtlsClientConnectionInterface jarg1_);
  public final static native long new__GDtlsClientConnectionInterface();
  public final static native void delete__GDtlsClientConnectionInterface(long jarg1);
  public final static native long _frida_g_dtls_client_connection_get_type();
  public final static native long _frida_g_dtls_client_connection_new(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_dtls_client_connection_get_validation_flags(long jarg1);
  public final static native void _frida_g_dtls_client_connection_set_validation_flags(long jarg1, int jarg2);
  public final static native long _frida_g_dtls_client_connection_get_server_identity(long jarg1);
  public final static native void _frida_g_dtls_client_connection_set_server_identity(long jarg1, long jarg2);
  public final static native long _frida_g_dtls_client_connection_get_accepted_cas(long jarg1);
  public final static native void _GDtlsServerConnectionInterface_g_iface_set(long jarg1, _GDtlsServerConnectionInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDtlsServerConnectionInterface_g_iface_get(long jarg1, _GDtlsServerConnectionInterface jarg1_);
  public final static native long new__GDtlsServerConnectionInterface();
  public final static native void delete__GDtlsServerConnectionInterface(long jarg1);
  public final static native long _frida_g_dtls_server_connection_get_type();
  public final static native long _frida_g_dtls_server_connection_new(long jarg1, long jarg2, _GTlsCertificate jarg2_, long jarg3);
  public final static native void _GIconIface_g_iface_set(long jarg1, _GIconIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GIconIface_g_iface_get(long jarg1, _GIconIface jarg1_);
  public final static native void _GIconIface_hash_set(long jarg1, _GIconIface jarg1_, long jarg2);
  public final static native long _GIconIface_hash_get(long jarg1, _GIconIface jarg1_);
  public final static native void _GIconIface_equal_set(long jarg1, _GIconIface jarg1_, long jarg2);
  public final static native long _GIconIface_equal_get(long jarg1, _GIconIface jarg1_);
  public final static native void _GIconIface_to_tokens_set(long jarg1, _GIconIface jarg1_, long jarg2);
  public final static native long _GIconIface_to_tokens_get(long jarg1, _GIconIface jarg1_);
  public final static native void _GIconIface_from_tokens_set(long jarg1, _GIconIface jarg1_, long jarg2);
  public final static native long _GIconIface_from_tokens_get(long jarg1, _GIconIface jarg1_);
  public final static native void _GIconIface_serialize_set(long jarg1, _GIconIface jarg1_, long jarg2);
  public final static native long _GIconIface_serialize_get(long jarg1, _GIconIface jarg1_);
  public final static native long new__GIconIface();
  public final static native void delete__GIconIface(long jarg1);
  public final static native long _frida_g_icon_get_type();
  public final static native long _frida_g_icon_hash(long jarg1);
  public final static native int _frida_g_icon_equal(long jarg1, long jarg2);
  public final static native String _frida_g_icon_to_string(long jarg1);
  public final static native long _frida_g_icon_new_for_string(String jarg1, long jarg2);
  public final static native long _frida_g_icon_serialize(long jarg1);
  public final static native long _frida_g_icon_deserialize(long jarg1);
  public final static native long _frida_g_emblem_get_type();
  public final static native long _frida_g_emblem_new(long jarg1);
  public final static native long _frida_g_emblem_new_with_origin(long jarg1, int jarg2);
  public final static native long _frida_g_emblem_get_icon(long jarg1);
  public final static native int _frida_g_emblem_get_origin(long jarg1);
  public final static native void _GEmblemedIcon_parent_instance_set(long jarg1, _GEmblemedIcon jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GEmblemedIcon_parent_instance_get(long jarg1, _GEmblemedIcon jarg1_);
  public final static native void _GEmblemedIcon_priv_set(long jarg1, _GEmblemedIcon jarg1_, long jarg2);
  public final static native long _GEmblemedIcon_priv_get(long jarg1, _GEmblemedIcon jarg1_);
  public final static native long new__GEmblemedIcon();
  public final static native void delete__GEmblemedIcon(long jarg1);
  public final static native void _GEmblemedIconClass_parent_class_set(long jarg1, _GEmblemedIconClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GEmblemedIconClass_parent_class_get(long jarg1, _GEmblemedIconClass jarg1_);
  public final static native long new__GEmblemedIconClass();
  public final static native void delete__GEmblemedIconClass(long jarg1);
  public final static native long _frida_g_emblemed_icon_get_type();
  public final static native long _frida_g_emblemed_icon_new(long jarg1, long jarg2);
  public final static native long _frida_g_emblemed_icon_get_icon(long jarg1, _GEmblemedIcon jarg1_);
  public final static native long _frida_g_emblemed_icon_get_emblems(long jarg1, _GEmblemedIcon jarg1_);
  public final static native void _frida_g_emblemed_icon_add_emblem(long jarg1, _GEmblemedIcon jarg1_, long jarg2);
  public final static native void _frida_g_emblemed_icon_clear_emblems(long jarg1, _GEmblemedIcon jarg1_);
  public final static native void _GFileAttributeInfo_name_set(long jarg1, _GFileAttributeInfo jarg1_, String jarg2);
  public final static native String _GFileAttributeInfo_name_get(long jarg1, _GFileAttributeInfo jarg1_);
  public final static native void _GFileAttributeInfo_type_set(long jarg1, _GFileAttributeInfo jarg1_, int jarg2);
  public final static native int _GFileAttributeInfo_type_get(long jarg1, _GFileAttributeInfo jarg1_);
  public final static native void _GFileAttributeInfo_flags_set(long jarg1, _GFileAttributeInfo jarg1_, int jarg2);
  public final static native int _GFileAttributeInfo_flags_get(long jarg1, _GFileAttributeInfo jarg1_);
  public final static native long new__GFileAttributeInfo();
  public final static native void delete__GFileAttributeInfo(long jarg1);
  public final static native void _GFileAttributeInfoList_infos_set(long jarg1, _GFileAttributeInfoList jarg1_, long jarg2, _GFileAttributeInfo jarg2_);
  public final static native long _GFileAttributeInfoList_infos_get(long jarg1, _GFileAttributeInfoList jarg1_);
  public final static native void _GFileAttributeInfoList_n_infos_set(long jarg1, _GFileAttributeInfoList jarg1_, int jarg2);
  public final static native int _GFileAttributeInfoList_n_infos_get(long jarg1, _GFileAttributeInfoList jarg1_);
  public final static native long new__GFileAttributeInfoList();
  public final static native void delete__GFileAttributeInfoList(long jarg1);
  public final static native long _frida_g_file_attribute_info_list_get_type();
  public final static native long _frida_g_file_attribute_info_list_new();
  public final static native long _frida_g_file_attribute_info_list_ref(long jarg1, _GFileAttributeInfoList jarg1_);
  public final static native void _frida_g_file_attribute_info_list_unref(long jarg1, _GFileAttributeInfoList jarg1_);
  public final static native long _frida_g_file_attribute_info_list_dup(long jarg1, _GFileAttributeInfoList jarg1_);
  public final static native long _frida_g_file_attribute_info_list_lookup(long jarg1, _GFileAttributeInfoList jarg1_, String jarg2);
  public final static native void _frida_g_file_attribute_info_list_add(long jarg1, _GFileAttributeInfoList jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native void _GFileEnumerator_parent_instance_set(long jarg1, _GFileEnumerator jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GFileEnumerator_parent_instance_get(long jarg1, _GFileEnumerator jarg1_);
  public final static native void _GFileEnumerator_priv_set(long jarg1, _GFileEnumerator jarg1_, long jarg2);
  public final static native long _GFileEnumerator_priv_get(long jarg1, _GFileEnumerator jarg1_);
  public final static native long new__GFileEnumerator();
  public final static native void delete__GFileEnumerator(long jarg1);
  public final static native void _GFileEnumeratorClass_parent_class_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GFileEnumeratorClass_parent_class_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass_next_file_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass_next_file_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass_close_fn_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass_close_fn_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass_next_files_async_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass_next_files_async_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass_next_files_finish_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass_next_files_finish_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass_close_async_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass_close_async_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass_close_finish_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass_close_finish_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass__g_reserved1_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass__g_reserved1_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass__g_reserved2_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass__g_reserved2_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass__g_reserved3_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass__g_reserved3_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass__g_reserved4_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass__g_reserved4_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass__g_reserved5_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass__g_reserved5_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass__g_reserved6_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass__g_reserved6_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native void _GFileEnumeratorClass__g_reserved7_set(long jarg1, _GFileEnumeratorClass jarg1_, long jarg2);
  public final static native long _GFileEnumeratorClass__g_reserved7_get(long jarg1, _GFileEnumeratorClass jarg1_);
  public final static native long new__GFileEnumeratorClass();
  public final static native void delete__GFileEnumeratorClass(long jarg1);
  public final static native long _frida_g_file_enumerator_get_type();
  public final static native long _frida_g_file_enumerator_next_file(long jarg1, _GFileEnumerator jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_file_enumerator_close(long jarg1, _GFileEnumerator jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_enumerator_next_files_async(long jarg1, _GFileEnumerator jarg1_, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_enumerator_next_files_finish(long jarg1, _GFileEnumerator jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_file_enumerator_close_async(long jarg1, _GFileEnumerator jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_file_enumerator_close_finish(long jarg1, _GFileEnumerator jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_file_enumerator_is_closed(long jarg1, _GFileEnumerator jarg1_);
  public final static native int _frida_g_file_enumerator_has_pending(long jarg1, _GFileEnumerator jarg1_);
  public final static native void _frida_g_file_enumerator_set_pending(long jarg1, _GFileEnumerator jarg1_, int jarg2);
  public final static native long _frida_g_file_enumerator_get_container(long jarg1, _GFileEnumerator jarg1_);
  public final static native long _frida_g_file_enumerator_get_child(long jarg1, _GFileEnumerator jarg1_, long jarg2);
  public final static native int _frida_g_file_enumerator_iterate(long jarg1, _GFileEnumerator jarg1_, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _GFileIface_g_iface_set(long jarg1, _GFileIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GFileIface_g_iface_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_dup_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_dup_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_hash_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_hash_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_equal_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_equal_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_is_native_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_is_native_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_has_uri_scheme_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_has_uri_scheme_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_uri_scheme_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_uri_scheme_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_basename_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_basename_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_path_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_path_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_uri_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_uri_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_parse_name_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_parse_name_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_parent_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_parent_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_prefix_matches_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_prefix_matches_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_relative_path_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_relative_path_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_resolve_relative_path_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_resolve_relative_path_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_get_child_for_display_name_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_get_child_for_display_name_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_enumerate_children_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_enumerate_children_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_enumerate_children_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_enumerate_children_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_enumerate_children_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_enumerate_children_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_info_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_info_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_info_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_info_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_info_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_info_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_filesystem_info_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_filesystem_info_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_filesystem_info_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_filesystem_info_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_filesystem_info_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_filesystem_info_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_find_enclosing_mount_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_find_enclosing_mount_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_find_enclosing_mount_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_find_enclosing_mount_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_find_enclosing_mount_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_find_enclosing_mount_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_set_display_name_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_set_display_name_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_set_display_name_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_set_display_name_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_set_display_name_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_set_display_name_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_settable_attributes_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_settable_attributes_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__query_settable_attributes_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__query_settable_attributes_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__query_settable_attributes_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__query_settable_attributes_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_query_writable_namespaces_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_query_writable_namespaces_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__query_writable_namespaces_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__query_writable_namespaces_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__query_writable_namespaces_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__query_writable_namespaces_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_set_attribute_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_set_attribute_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_set_attributes_from_info_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_set_attributes_from_info_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_set_attributes_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_set_attributes_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_set_attributes_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_set_attributes_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_read_fn_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_read_fn_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_read_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_read_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_read_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_read_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_append_to_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_append_to_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_append_to_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_append_to_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_append_to_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_append_to_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_create_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_create_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_create_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_create_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_create_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_create_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_replace_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_replace_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_replace_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_replace_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_replace_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_replace_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_delete_file_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_delete_file_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_delete_file_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_delete_file_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_delete_file_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_delete_file_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_trash_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_trash_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_trash_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_trash_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_trash_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_trash_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_make_directory_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_make_directory_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_make_directory_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_make_directory_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_make_directory_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_make_directory_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_make_symbolic_link_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_make_symbolic_link_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__make_symbolic_link_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__make_symbolic_link_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__make_symbolic_link_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__make_symbolic_link_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_copy_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_copy_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_copy_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_copy_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_copy_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_copy_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_move_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_move_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__move_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__move_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface__move_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface__move_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_mount_mountable_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_mount_mountable_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_mount_mountable_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_mount_mountable_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_unmount_mountable_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_unmount_mountable_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_unmount_mountable_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_unmount_mountable_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_eject_mountable_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_eject_mountable_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_eject_mountable_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_eject_mountable_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_mount_enclosing_volume_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_mount_enclosing_volume_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_mount_enclosing_volume_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_mount_enclosing_volume_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_monitor_dir_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_monitor_dir_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_monitor_file_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_monitor_file_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_open_readwrite_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_open_readwrite_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_open_readwrite_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_open_readwrite_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_open_readwrite_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_open_readwrite_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_create_readwrite_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_create_readwrite_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_create_readwrite_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_create_readwrite_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_create_readwrite_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_create_readwrite_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_replace_readwrite_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_replace_readwrite_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_replace_readwrite_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_replace_readwrite_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_replace_readwrite_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_replace_readwrite_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_start_mountable_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_start_mountable_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_start_mountable_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_start_mountable_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_stop_mountable_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_stop_mountable_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_stop_mountable_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_stop_mountable_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_supports_thread_contexts_set(long jarg1, _GFileIface jarg1_, int jarg2);
  public final static native int _GFileIface_supports_thread_contexts_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_unmount_mountable_with_operation_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_unmount_mountable_with_operation_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_unmount_mountable_with_operation_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_unmount_mountable_with_operation_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_eject_mountable_with_operation_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_eject_mountable_with_operation_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_eject_mountable_with_operation_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_eject_mountable_with_operation_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_poll_mountable_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_poll_mountable_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_poll_mountable_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_poll_mountable_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_measure_disk_usage_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_measure_disk_usage_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_measure_disk_usage_async_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_measure_disk_usage_async_get(long jarg1, _GFileIface jarg1_);
  public final static native void _GFileIface_measure_disk_usage_finish_set(long jarg1, _GFileIface jarg1_, long jarg2);
  public final static native long _GFileIface_measure_disk_usage_finish_get(long jarg1, _GFileIface jarg1_);
  public final static native long new__GFileIface();
  public final static native void delete__GFileIface(long jarg1);
  public final static native long _frida_g_file_get_type();
  public final static native long _frida_g_file_new_for_path(String jarg1);
  public final static native long _frida_g_file_new_for_uri(String jarg1);
  public final static native long _frida_g_file_new_for_commandline_arg(String jarg1);
  public final static native long _frida_g_file_new_for_commandline_arg_and_cwd(String jarg1, String jarg2);
  public final static native long _frida_g_file_new_tmp(String jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_parse_name(String jarg1);
  public final static native long _frida_g_file_new_build_filename(String jarg1);
  public final static native long _frida_g_file_dup(long jarg1);
  public final static native long _frida_g_file_hash(long jarg1);
  public final static native int _frida_g_file_equal(long jarg1, long jarg2);
  public final static native String _frida_g_file_get_basename(long jarg1);
  public final static native String _frida_g_file_get_path(long jarg1);
  public final static native String _frida_g_file_peek_path(long jarg1);
  public final static native String _frida_g_file_get_uri(long jarg1);
  public final static native String _frida_g_file_get_parse_name(long jarg1);
  public final static native long _frida_g_file_get_parent(long jarg1);
  public final static native int _frida_g_file_has_parent(long jarg1, long jarg2);
  public final static native long _frida_g_file_get_child(long jarg1, String jarg2);
  public final static native long _frida_g_file_get_child_for_display_name(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_file_has_prefix(long jarg1, long jarg2);
  public final static native String _frida_g_file_get_relative_path(long jarg1, long jarg2);
  public final static native long _frida_g_file_resolve_relative_path(long jarg1, String jarg2);
  public final static native int _frida_g_file_is_native(long jarg1);
  public final static native int _frida_g_file_has_uri_scheme(long jarg1, String jarg2);
  public final static native String _frida_g_file_get_uri_scheme(long jarg1);
  public final static native long _frida_g_file_read(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_read_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_file_read_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_append_to(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native long _frida_g_file_create(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native long _frida_g_file_replace(long jarg1, String jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_file_append_to_async(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_append_to_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_create_async(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_create_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_replace_async(long jarg1, String jarg2, int jarg3, int jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long _frida_g_file_replace_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_open_readwrite(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_open_readwrite_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_file_open_readwrite_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_create_readwrite(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_file_create_readwrite_async(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_create_readwrite_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_replace_readwrite(long jarg1, String jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_file_replace_readwrite_async(long jarg1, String jarg2, int jarg3, int jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long _frida_g_file_replace_readwrite_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_query_exists(long jarg1, long jarg2, _GCancellable jarg2_);
  public final static native int _frida_g_file_query_file_type(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_);
  public final static native long _frida_g_file_query_info(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_file_query_info_async(long jarg1, String jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_file_query_info_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_query_filesystem_info(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_file_query_filesystem_info_async(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_query_filesystem_info_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_find_enclosing_mount(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_find_enclosing_mount_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_file_find_enclosing_mount_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_enumerate_children(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_file_enumerate_children_async(long jarg1, String jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_file_enumerate_children_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_set_display_name(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_file_set_display_name_async(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_set_display_name_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_delete(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_delete_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_file_delete_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_trash(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_trash_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_file_trash_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_copy(long jarg1, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6, long jarg7);
  public final static native void _frida_g_file_copy_async(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native int _frida_g_file_copy_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_move(long jarg1, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6, long jarg7);
  public final static native int _frida_g_file_make_directory(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_make_directory_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_file_make_directory_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_make_directory_with_parents(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_file_make_symbolic_link(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native long _frida_g_file_query_settable_attributes(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native long _frida_g_file_query_writable_namespaces(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_file_set_attribute(long jarg1, String jarg2, int jarg3, long jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native int _frida_g_file_set_attributes_from_info(long jarg1, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_file_set_attributes_async(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_file_set_attributes_finish(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_file_set_attribute_string(long jarg1, String jarg2, String jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_file_set_attribute_byte_string(long jarg1, String jarg2, String jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_file_set_attribute_uint32(long jarg1, String jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_file_set_attribute_int32(long jarg1, String jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_file_set_attribute_uint64(long jarg1, String jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_file_set_attribute_int64(long jarg1, String jarg2, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_file_mount_enclosing_volume(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_file_mount_enclosing_volume_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_mount_mountable(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_mount_mountable_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_unmount_mountable(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_file_unmount_mountable_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_unmount_mountable_with_operation(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_file_unmount_mountable_with_operation_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_eject_mountable(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_file_eject_mountable_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_eject_mountable_with_operation(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_file_eject_mountable_with_operation_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_copy_attributes(long jarg1, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native long _frida_g_file_monitor_directory(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native long _frida_g_file_monitor_file(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native long _frida_g_file_monitor(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_file_measure_disk_usage(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void _frida_g_file_measure_disk_usage_async(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int _frida_g_file_measure_disk_usage_finish(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_file_start_mountable(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_file_start_mountable_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_stop_mountable(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_file_stop_mountable_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_file_poll_mountable(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_file_poll_mountable_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_file_query_default_handler(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_file_query_default_handler_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_file_query_default_handler_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_file_load_contents(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_file_load_contents_async(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_file_load_contents_finish(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_file_load_partial_contents_async(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_file_load_partial_contents_finish(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native int _frida_g_file_replace_contents(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5, int jarg6, long jarg7, long jarg8, _GCancellable jarg8_, long jarg9);
  public final static native void _frida_g_file_replace_contents_async(long jarg1, String jarg2, long jarg3, String jarg4, int jarg5, int jarg6, long jarg7, _GCancellable jarg7_, long jarg8, long jarg9);
  public final static native void _frida_g_file_replace_contents_bytes_async(long jarg1, long jarg2, String jarg3, int jarg4, int jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native int _frida_g_file_replace_contents_finish(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_file_supports_thread_contexts(long jarg1);
  public final static native long _frida_g_file_load_bytes(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void _frida_g_file_load_bytes_async(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long _frida_g_file_load_bytes_finish(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_file_icon_get_type();
  public final static native long _frida_g_file_icon_new(long jarg1);
  public final static native long _frida_g_file_icon_get_file(long jarg1);
  public final static native String G_FILE_ATTRIBUTE_STANDARD_TYPE_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_IS_HIDDEN_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_IS_BACKUP_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_IS_SYMLINK_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_IS_VOLATILE_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_NAME_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_EDIT_NAME_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_COPY_NAME_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_DESCRIPTION_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_ICON_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_SYMBOLIC_ICON_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_SIZE_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_TARGET_URI_get();
  public final static native String G_FILE_ATTRIBUTE_STANDARD_SORT_ORDER_get();
  public final static native String G_FILE_ATTRIBUTE_ETAG_VALUE_get();
  public final static native String G_FILE_ATTRIBUTE_ID_FILE_get();
  public final static native String G_FILE_ATTRIBUTE_ID_FILESYSTEM_get();
  public final static native String G_FILE_ATTRIBUTE_ACCESS_CAN_READ_get();
  public final static native String G_FILE_ATTRIBUTE_ACCESS_CAN_WRITE_get();
  public final static native String G_FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE_get();
  public final static native String G_FILE_ATTRIBUTE_ACCESS_CAN_DELETE_get();
  public final static native String G_FILE_ATTRIBUTE_ACCESS_CAN_TRASH_get();
  public final static native String G_FILE_ATTRIBUTE_ACCESS_CAN_RENAME_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL_get();
  public final static native String G_FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_MODIFIED_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_MODIFIED_USEC_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_ACCESS_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_ACCESS_USEC_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_CHANGED_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_CHANGED_USEC_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_CREATED_get();
  public final static native String G_FILE_ATTRIBUTE_TIME_CREATED_USEC_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_DEVICE_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_INODE_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_MODE_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_NLINK_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_UID_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_GID_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_RDEV_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_BLOCK_SIZE_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_BLOCKS_get();
  public final static native String G_FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT_get();
  public final static native String G_FILE_ATTRIBUTE_DOS_IS_ARCHIVE_get();
  public final static native String G_FILE_ATTRIBUTE_DOS_IS_SYSTEM_get();
  public final static native String G_FILE_ATTRIBUTE_DOS_IS_MOUNTPOINT_get();
  public final static native String G_FILE_ATTRIBUTE_DOS_REPARSE_POINT_TAG_get();
  public final static native String G_FILE_ATTRIBUTE_OWNER_USER_get();
  public final static native String G_FILE_ATTRIBUTE_OWNER_USER_REAL_get();
  public final static native String G_FILE_ATTRIBUTE_OWNER_GROUP_get();
  public final static native String G_FILE_ATTRIBUTE_THUMBNAIL_PATH_get();
  public final static native String G_FILE_ATTRIBUTE_THUMBNAILING_FAILED_get();
  public final static native String G_FILE_ATTRIBUTE_THUMBNAIL_IS_VALID_get();
  public final static native String G_FILE_ATTRIBUTE_PREVIEW_ICON_get();
  public final static native String G_FILE_ATTRIBUTE_FILESYSTEM_SIZE_get();
  public final static native String G_FILE_ATTRIBUTE_FILESYSTEM_FREE_get();
  public final static native String G_FILE_ATTRIBUTE_FILESYSTEM_USED_get();
  public final static native String G_FILE_ATTRIBUTE_FILESYSTEM_TYPE_get();
  public final static native String G_FILE_ATTRIBUTE_FILESYSTEM_READONLY_get();
  public final static native String G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW_get();
  public final static native String G_FILE_ATTRIBUTE_FILESYSTEM_REMOTE_get();
  public final static native String G_FILE_ATTRIBUTE_GVFS_BACKEND_get();
  public final static native String G_FILE_ATTRIBUTE_SELINUX_CONTEXT_get();
  public final static native String G_FILE_ATTRIBUTE_TRASH_ITEM_COUNT_get();
  public final static native String G_FILE_ATTRIBUTE_TRASH_ORIG_PATH_get();
  public final static native String G_FILE_ATTRIBUTE_TRASH_DELETION_DATE_get();
  public final static native String G_FILE_ATTRIBUTE_RECENT_MODIFIED_get();
  public final static native long _frida_g_file_info_get_type();
  public final static native long _frida_g_file_info_new();
  public final static native long _frida_g_file_info_dup(long jarg1);
  public final static native void _frida_g_file_info_copy_into(long jarg1, long jarg2);
  public final static native int _frida_g_file_info_has_attribute(long jarg1, String jarg2);
  public final static native int _frida_g_file_info_has_namespace(long jarg1, String jarg2);
  public final static native long _frida_g_file_info_list_attributes(long jarg1, String jarg2);
  public final static native int _frida_g_file_info_get_attribute_data(long jarg1, String jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_file_info_get_attribute_type(long jarg1, String jarg2);
  public final static native void _frida_g_file_info_remove_attribute(long jarg1, String jarg2);
  public final static native int _frida_g_file_info_get_attribute_status(long jarg1, String jarg2);
  public final static native int _frida_g_file_info_set_attribute_status(long jarg1, String jarg2, int jarg3);
  public final static native String _frida_g_file_info_get_attribute_as_string(long jarg1, String jarg2);
  public final static native String _frida_g_file_info_get_attribute_string(long jarg1, String jarg2);
  public final static native String _frida_g_file_info_get_attribute_byte_string(long jarg1, String jarg2);
  public final static native int _frida_g_file_info_get_attribute_boolean(long jarg1, String jarg2);
  public final static native long _frida_g_file_info_get_attribute_uint32(long jarg1, String jarg2);
  public final static native int _frida_g_file_info_get_attribute_int32(long jarg1, String jarg2);
  public final static native long _frida_g_file_info_get_attribute_uint64(long jarg1, String jarg2);
  public final static native int _frida_g_file_info_get_attribute_int64(long jarg1, String jarg2);
  public final static native long _frida_g_file_info_get_attribute_object(long jarg1, String jarg2);
  public final static native long _frida_g_file_info_get_attribute_stringv(long jarg1, String jarg2);
  public final static native void _frida_g_file_info_set_attribute(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native void _frida_g_file_info_set_attribute_string(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_file_info_set_attribute_byte_string(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_file_info_set_attribute_boolean(long jarg1, String jarg2, int jarg3);
  public final static native void _frida_g_file_info_set_attribute_uint32(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_file_info_set_attribute_int32(long jarg1, String jarg2, int jarg3);
  public final static native void _frida_g_file_info_set_attribute_uint64(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_file_info_set_attribute_int64(long jarg1, String jarg2, int jarg3);
  public final static native void _frida_g_file_info_set_attribute_object(long jarg1, String jarg2, long jarg3, _GObject jarg3_);
  public final static native void _frida_g_file_info_set_attribute_stringv(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_file_info_clear_status(long jarg1);
  public final static native long _frida_g_file_info_get_deletion_date(long jarg1);
  public final static native int _frida_g_file_info_get_file_type(long jarg1);
  public final static native int _frida_g_file_info_get_is_hidden(long jarg1);
  public final static native int _frida_g_file_info_get_is_backup(long jarg1);
  public final static native int _frida_g_file_info_get_is_symlink(long jarg1);
  public final static native String _frida_g_file_info_get_name(long jarg1);
  public final static native String _frida_g_file_info_get_display_name(long jarg1);
  public final static native String _frida_g_file_info_get_edit_name(long jarg1);
  public final static native long _frida_g_file_info_get_icon(long jarg1);
  public final static native long _frida_g_file_info_get_symbolic_icon(long jarg1);
  public final static native String _frida_g_file_info_get_content_type(long jarg1);
  public final static native int _frida_g_file_info_get_size(long jarg1);
  public final static native void _frida_g_file_info_get_modification_time(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native String _frida_g_file_info_get_symlink_target(long jarg1);
  public final static native String _frida_g_file_info_get_etag(long jarg1);
  public final static native int _frida_g_file_info_get_sort_order(long jarg1);
  public final static native void _frida_g_file_info_set_attribute_mask(long jarg1, long jarg2);
  public final static native void _frida_g_file_info_unset_attribute_mask(long jarg1);
  public final static native void _frida_g_file_info_set_file_type(long jarg1, int jarg2);
  public final static native void _frida_g_file_info_set_is_hidden(long jarg1, int jarg2);
  public final static native void _frida_g_file_info_set_is_symlink(long jarg1, int jarg2);
  public final static native void _frida_g_file_info_set_name(long jarg1, String jarg2);
  public final static native void _frida_g_file_info_set_display_name(long jarg1, String jarg2);
  public final static native void _frida_g_file_info_set_edit_name(long jarg1, String jarg2);
  public final static native void _frida_g_file_info_set_icon(long jarg1, long jarg2);
  public final static native void _frida_g_file_info_set_symbolic_icon(long jarg1, long jarg2);
  public final static native void _frida_g_file_info_set_content_type(long jarg1, String jarg2);
  public final static native void _frida_g_file_info_set_size(long jarg1, int jarg2);
  public final static native void _frida_g_file_info_set_modification_time(long jarg1, long jarg2, _GTimeVal jarg2_);
  public final static native void _frida_g_file_info_set_symlink_target(long jarg1, String jarg2);
  public final static native void _frida_g_file_info_set_sort_order(long jarg1, int jarg2);
  public final static native long _frida_g_file_attribute_matcher_get_type();
  public final static native long _frida_g_file_attribute_matcher_new(String jarg1);
  public final static native long _frida_g_file_attribute_matcher_ref(long jarg1);
  public final static native void _frida_g_file_attribute_matcher_unref(long jarg1);
  public final static native long _frida_g_file_attribute_matcher_subtract(long jarg1, long jarg2);
  public final static native int _frida_g_file_attribute_matcher_matches(long jarg1, String jarg2);
  public final static native int _frida_g_file_attribute_matcher_matches_only(long jarg1, String jarg2);
  public final static native int _frida_g_file_attribute_matcher_enumerate_namespace(long jarg1, String jarg2);
  public final static native String _frida_g_file_attribute_matcher_enumerate_next(long jarg1);
  public final static native String _frida_g_file_attribute_matcher_to_string(long jarg1);
  public final static native void _GFileInputStream_parent_instance_set(long jarg1, _GFileInputStream jarg1_, long jarg2, _GInputStream jarg2_);
  public final static native long _GFileInputStream_parent_instance_get(long jarg1, _GFileInputStream jarg1_);
  public final static native void _GFileInputStream_priv_set(long jarg1, _GFileInputStream jarg1_, long jarg2);
  public final static native long _GFileInputStream_priv_get(long jarg1, _GFileInputStream jarg1_);
  public final static native long new__GFileInputStream();
  public final static native void delete__GFileInputStream(long jarg1);
  public final static native void _GFileInputStreamClass_parent_class_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2, _GInputStreamClass jarg2_);
  public final static native long _GFileInputStreamClass_parent_class_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass_tell_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass_tell_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass_can_seek_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass_can_seek_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass_seek_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass_seek_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass_query_info_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass_query_info_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass_query_info_async_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass_query_info_async_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass_query_info_finish_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass_query_info_finish_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass__g_reserved1_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass__g_reserved1_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass__g_reserved2_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass__g_reserved2_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass__g_reserved3_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass__g_reserved3_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass__g_reserved4_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass__g_reserved4_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native void _GFileInputStreamClass__g_reserved5_set(long jarg1, _GFileInputStreamClass jarg1_, long jarg2);
  public final static native long _GFileInputStreamClass__g_reserved5_get(long jarg1, _GFileInputStreamClass jarg1_);
  public final static native long new__GFileInputStreamClass();
  public final static native void delete__GFileInputStreamClass(long jarg1);
  public final static native long _frida_g_file_input_stream_get_type();
  public final static native long _frida_g_file_input_stream_query_info(long jarg1, _GFileInputStream jarg1_, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_file_input_stream_query_info_async(long jarg1, _GFileInputStream jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_input_stream_query_info_finish(long jarg1, _GFileInputStream jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_io_error_quark();
  public final static native int _frida_g_io_error_from_errno(int jarg1);
  public final static native void _GIOStream_parent_instance_set(long jarg1, _GIOStream jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GIOStream_parent_instance_get(long jarg1, _GIOStream jarg1_);
  public final static native void _GIOStream_priv_set(long jarg1, _GIOStream jarg1_, long jarg2);
  public final static native long _GIOStream_priv_get(long jarg1, _GIOStream jarg1_);
  public final static native long new__GIOStream();
  public final static native void delete__GIOStream(long jarg1);
  public final static native void _GIOStreamClass_parent_class_set(long jarg1, _GIOStreamClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GIOStreamClass_parent_class_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass_get_input_stream_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass_get_input_stream_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass_get_output_stream_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass_get_output_stream_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass_close_fn_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass_close_fn_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass_close_async_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass_close_async_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass_close_finish_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass_close_finish_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved1_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved1_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved2_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved2_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved3_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved3_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved4_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved4_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved5_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved5_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved6_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved6_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved7_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved7_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved8_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved8_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved9_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved9_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native void _GIOStreamClass__g_reserved10_set(long jarg1, _GIOStreamClass jarg1_, long jarg2);
  public final static native long _GIOStreamClass__g_reserved10_get(long jarg1, _GIOStreamClass jarg1_);
  public final static native long new__GIOStreamClass();
  public final static native void delete__GIOStreamClass(long jarg1);
  public final static native long _frida_g_io_stream_get_type();
  public final static native long _frida_g_io_stream_get_input_stream(long jarg1, _GIOStream jarg1_);
  public final static native long _frida_g_io_stream_get_output_stream(long jarg1, _GIOStream jarg1_);
  public final static native void _frida_g_io_stream_splice_async(long jarg1, _GIOStream jarg1_, long jarg2, _GIOStream jarg2_, int jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_io_stream_splice_finish(long jarg1, long jarg2);
  public final static native int _frida_g_io_stream_close(long jarg1, _GIOStream jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_io_stream_close_async(long jarg1, _GIOStream jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_io_stream_close_finish(long jarg1, _GIOStream jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_io_stream_is_closed(long jarg1, _GIOStream jarg1_);
  public final static native int _frida_g_io_stream_has_pending(long jarg1, _GIOStream jarg1_);
  public final static native int _frida_g_io_stream_set_pending(long jarg1, _GIOStream jarg1_, long jarg2);
  public final static native void _frida_g_io_stream_clear_pending(long jarg1, _GIOStream jarg1_);
  public final static native void _GFileIOStream_parent_instance_set(long jarg1, _GFileIOStream jarg1_, long jarg2, _GIOStream jarg2_);
  public final static native long _GFileIOStream_parent_instance_get(long jarg1, _GFileIOStream jarg1_);
  public final static native void _GFileIOStream_priv_set(long jarg1, _GFileIOStream jarg1_, long jarg2);
  public final static native long _GFileIOStream_priv_get(long jarg1, _GFileIOStream jarg1_);
  public final static native long new__GFileIOStream();
  public final static native void delete__GFileIOStream(long jarg1);
  public final static native void _GFileIOStreamClass_parent_class_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2, _GIOStreamClass jarg2_);
  public final static native long _GFileIOStreamClass_parent_class_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_tell_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_tell_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_can_seek_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_can_seek_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_seek_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_seek_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_can_truncate_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_can_truncate_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_truncate_fn_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_truncate_fn_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_query_info_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_query_info_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_query_info_async_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_query_info_async_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_query_info_finish_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_query_info_finish_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass_get_etag_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass_get_etag_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass__g_reserved1_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass__g_reserved1_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass__g_reserved2_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass__g_reserved2_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass__g_reserved3_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass__g_reserved3_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass__g_reserved4_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass__g_reserved4_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native void _GFileIOStreamClass__g_reserved5_set(long jarg1, _GFileIOStreamClass jarg1_, long jarg2);
  public final static native long _GFileIOStreamClass__g_reserved5_get(long jarg1, _GFileIOStreamClass jarg1_);
  public final static native long new__GFileIOStreamClass();
  public final static native void delete__GFileIOStreamClass(long jarg1);
  public final static native long _frida_g_file_io_stream_get_type();
  public final static native long _frida_g_file_io_stream_query_info(long jarg1, _GFileIOStream jarg1_, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_file_io_stream_query_info_async(long jarg1, _GFileIOStream jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_io_stream_query_info_finish(long jarg1, _GFileIOStream jarg1_, long jarg2, long jarg3);
  public final static native String _frida_g_file_io_stream_get_etag(long jarg1, _GFileIOStream jarg1_);
  public final static native void _GFileMonitor_parent_instance_set(long jarg1, _GFileMonitor jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GFileMonitor_parent_instance_get(long jarg1, _GFileMonitor jarg1_);
  public final static native void _GFileMonitor_priv_set(long jarg1, _GFileMonitor jarg1_, long jarg2);
  public final static native long _GFileMonitor_priv_get(long jarg1, _GFileMonitor jarg1_);
  public final static native long new__GFileMonitor();
  public final static native void delete__GFileMonitor(long jarg1);
  public final static native void _GFileMonitorClass_parent_class_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GFileMonitorClass_parent_class_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native void _GFileMonitorClass_changed_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2);
  public final static native long _GFileMonitorClass_changed_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native void _GFileMonitorClass_cancel_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2);
  public final static native long _GFileMonitorClass_cancel_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native void _GFileMonitorClass__g_reserved1_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2);
  public final static native long _GFileMonitorClass__g_reserved1_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native void _GFileMonitorClass__g_reserved2_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2);
  public final static native long _GFileMonitorClass__g_reserved2_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native void _GFileMonitorClass__g_reserved3_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2);
  public final static native long _GFileMonitorClass__g_reserved3_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native void _GFileMonitorClass__g_reserved4_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2);
  public final static native long _GFileMonitorClass__g_reserved4_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native void _GFileMonitorClass__g_reserved5_set(long jarg1, _GFileMonitorClass jarg1_, long jarg2);
  public final static native long _GFileMonitorClass__g_reserved5_get(long jarg1, _GFileMonitorClass jarg1_);
  public final static native long new__GFileMonitorClass();
  public final static native void delete__GFileMonitorClass(long jarg1);
  public final static native long _frida_g_file_monitor_get_type();
  public final static native int _frida_g_file_monitor_cancel(long jarg1, _GFileMonitor jarg1_);
  public final static native int _frida_g_file_monitor_is_cancelled(long jarg1, _GFileMonitor jarg1_);
  public final static native void _frida_g_file_monitor_set_rate_limit(long jarg1, _GFileMonitor jarg1_, int jarg2);
  public final static native void _frida_g_file_monitor_emit_event(long jarg1, _GFileMonitor jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _GFilenameCompleterClass_parent_class_set(long jarg1, _GFilenameCompleterClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GFilenameCompleterClass_parent_class_get(long jarg1, _GFilenameCompleterClass jarg1_);
  public final static native void _GFilenameCompleterClass_got_completion_data_set(long jarg1, _GFilenameCompleterClass jarg1_, long jarg2);
  public final static native long _GFilenameCompleterClass_got_completion_data_get(long jarg1, _GFilenameCompleterClass jarg1_);
  public final static native void _GFilenameCompleterClass__g_reserved1_set(long jarg1, _GFilenameCompleterClass jarg1_, long jarg2);
  public final static native long _GFilenameCompleterClass__g_reserved1_get(long jarg1, _GFilenameCompleterClass jarg1_);
  public final static native void _GFilenameCompleterClass__g_reserved2_set(long jarg1, _GFilenameCompleterClass jarg1_, long jarg2);
  public final static native long _GFilenameCompleterClass__g_reserved2_get(long jarg1, _GFilenameCompleterClass jarg1_);
  public final static native void _GFilenameCompleterClass__g_reserved3_set(long jarg1, _GFilenameCompleterClass jarg1_, long jarg2);
  public final static native long _GFilenameCompleterClass__g_reserved3_get(long jarg1, _GFilenameCompleterClass jarg1_);
  public final static native long new__GFilenameCompleterClass();
  public final static native void delete__GFilenameCompleterClass(long jarg1);
  public final static native long _frida_g_filename_completer_get_type();
  public final static native long _frida_g_filename_completer_new();
  public final static native String _frida_g_filename_completer_get_completion_suffix(long jarg1, String jarg2);
  public final static native long _frida_g_filename_completer_get_completions(long jarg1, String jarg2);
  public final static native void _frida_g_filename_completer_set_dirs_only(long jarg1, int jarg2);
  public final static native void _GFileOutputStream_parent_instance_set(long jarg1, _GFileOutputStream jarg1_, long jarg2, _GOutputStream jarg2_);
  public final static native long _GFileOutputStream_parent_instance_get(long jarg1, _GFileOutputStream jarg1_);
  public final static native void _GFileOutputStream_priv_set(long jarg1, _GFileOutputStream jarg1_, long jarg2);
  public final static native long _GFileOutputStream_priv_get(long jarg1, _GFileOutputStream jarg1_);
  public final static native long new__GFileOutputStream();
  public final static native void delete__GFileOutputStream(long jarg1);
  public final static native void _GFileOutputStreamClass_parent_class_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2, _GOutputStreamClass jarg2_);
  public final static native long _GFileOutputStreamClass_parent_class_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_tell_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_tell_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_can_seek_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_can_seek_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_seek_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_seek_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_can_truncate_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_can_truncate_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_truncate_fn_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_truncate_fn_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_query_info_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_query_info_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_query_info_async_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_query_info_async_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_query_info_finish_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_query_info_finish_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass_get_etag_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass_get_etag_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass__g_reserved1_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass__g_reserved1_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass__g_reserved2_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass__g_reserved2_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass__g_reserved3_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass__g_reserved3_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass__g_reserved4_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass__g_reserved4_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native void _GFileOutputStreamClass__g_reserved5_set(long jarg1, _GFileOutputStreamClass jarg1_, long jarg2);
  public final static native long _GFileOutputStreamClass__g_reserved5_get(long jarg1, _GFileOutputStreamClass jarg1_);
  public final static native long new__GFileOutputStreamClass();
  public final static native void delete__GFileOutputStreamClass(long jarg1);
  public final static native long _frida_g_file_output_stream_get_type();
  public final static native long _frida_g_file_output_stream_query_info(long jarg1, _GFileOutputStream jarg1_, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_file_output_stream_query_info_async(long jarg1, _GFileOutputStream jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_file_output_stream_query_info_finish(long jarg1, _GFileOutputStream jarg1_, long jarg2, long jarg3);
  public final static native String _frida_g_file_output_stream_get_etag(long jarg1, _GFileOutputStream jarg1_);
  public final static native void _GInetAddress_parent_instance_set(long jarg1, _GInetAddress jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GInetAddress_parent_instance_get(long jarg1, _GInetAddress jarg1_);
  public final static native void _GInetAddress_priv_set(long jarg1, _GInetAddress jarg1_, long jarg2);
  public final static native long _GInetAddress_priv_get(long jarg1, _GInetAddress jarg1_);
  public final static native long new__GInetAddress();
  public final static native void delete__GInetAddress(long jarg1);
  public final static native void _GInetAddressClass_parent_class_set(long jarg1, _GInetAddressClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GInetAddressClass_parent_class_get(long jarg1, _GInetAddressClass jarg1_);
  public final static native void _GInetAddressClass_to_string_set(long jarg1, _GInetAddressClass jarg1_, long jarg2);
  public final static native long _GInetAddressClass_to_string_get(long jarg1, _GInetAddressClass jarg1_);
  public final static native void _GInetAddressClass_to_bytes_set(long jarg1, _GInetAddressClass jarg1_, long jarg2);
  public final static native long _GInetAddressClass_to_bytes_get(long jarg1, _GInetAddressClass jarg1_);
  public final static native long new__GInetAddressClass();
  public final static native void delete__GInetAddressClass(long jarg1);
  public final static native long _frida_g_inet_address_get_type();
  public final static native long _frida_g_inet_address_new_from_string(String jarg1);
  public final static native long _frida_g_inet_address_new_from_bytes(long jarg1, int jarg2);
  public final static native long _frida_g_inet_address_new_loopback(int jarg1);
  public final static native long _frida_g_inet_address_new_any(int jarg1);
  public final static native int _frida_g_inet_address_equal(long jarg1, _GInetAddress jarg1_, long jarg2, _GInetAddress jarg2_);
  public final static native String _frida_g_inet_address_to_string(long jarg1, _GInetAddress jarg1_);
  public final static native long _frida_g_inet_address_to_bytes(long jarg1, _GInetAddress jarg1_);
  public final static native long _frida_g_inet_address_get_native_size(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_family(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_any(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_loopback(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_link_local(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_site_local(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_multicast(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_mc_global(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_mc_link_local(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_mc_node_local(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_mc_org_local(long jarg1, _GInetAddress jarg1_);
  public final static native int _frida_g_inet_address_get_is_mc_site_local(long jarg1, _GInetAddress jarg1_);
  public final static native void _GInetAddressMask_parent_instance_set(long jarg1, _GInetAddressMask jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GInetAddressMask_parent_instance_get(long jarg1, _GInetAddressMask jarg1_);
  public final static native void _GInetAddressMask_priv_set(long jarg1, _GInetAddressMask jarg1_, long jarg2);
  public final static native long _GInetAddressMask_priv_get(long jarg1, _GInetAddressMask jarg1_);
  public final static native long new__GInetAddressMask();
  public final static native void delete__GInetAddressMask(long jarg1);
  public final static native void _GInetAddressMaskClass_parent_class_set(long jarg1, _GInetAddressMaskClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GInetAddressMaskClass_parent_class_get(long jarg1, _GInetAddressMaskClass jarg1_);
  public final static native long new__GInetAddressMaskClass();
  public final static native void delete__GInetAddressMaskClass(long jarg1);
  public final static native long _frida_g_inet_address_mask_get_type();
  public final static native long _frida_g_inet_address_mask_new(long jarg1, _GInetAddress jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_inet_address_mask_new_from_string(String jarg1, long jarg2);
  public final static native String _frida_g_inet_address_mask_to_string(long jarg1, _GInetAddressMask jarg1_);
  public final static native int _frida_g_inet_address_mask_get_family(long jarg1, _GInetAddressMask jarg1_);
  public final static native long _frida_g_inet_address_mask_get_address(long jarg1, _GInetAddressMask jarg1_);
  public final static native long _frida_g_inet_address_mask_get_length(long jarg1, _GInetAddressMask jarg1_);
  public final static native int _frida_g_inet_address_mask_matches(long jarg1, _GInetAddressMask jarg1_, long jarg2, _GInetAddress jarg2_);
  public final static native int _frida_g_inet_address_mask_equal(long jarg1, _GInetAddressMask jarg1_, long jarg2, _GInetAddressMask jarg2_);
  public final static native void _GSocketAddress_parent_instance_set(long jarg1, _GSocketAddress jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSocketAddress_parent_instance_get(long jarg1, _GSocketAddress jarg1_);
  public final static native long new__GSocketAddress();
  public final static native void delete__GSocketAddress(long jarg1);
  public final static native void _GSocketAddressClass_parent_class_set(long jarg1, _GSocketAddressClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSocketAddressClass_parent_class_get(long jarg1, _GSocketAddressClass jarg1_);
  public final static native void _GSocketAddressClass_get_family_set(long jarg1, _GSocketAddressClass jarg1_, long jarg2);
  public final static native long _GSocketAddressClass_get_family_get(long jarg1, _GSocketAddressClass jarg1_);
  public final static native void _GSocketAddressClass_get_native_size_set(long jarg1, _GSocketAddressClass jarg1_, long jarg2);
  public final static native long _GSocketAddressClass_get_native_size_get(long jarg1, _GSocketAddressClass jarg1_);
  public final static native void _GSocketAddressClass_to_native_set(long jarg1, _GSocketAddressClass jarg1_, long jarg2);
  public final static native long _GSocketAddressClass_to_native_get(long jarg1, _GSocketAddressClass jarg1_);
  public final static native long new__GSocketAddressClass();
  public final static native void delete__GSocketAddressClass(long jarg1);
  public final static native long _frida_g_socket_address_get_type();
  public final static native int _frida_g_socket_address_get_family(long jarg1, _GSocketAddress jarg1_);
  public final static native long _frida_g_socket_address_new_from_native(long jarg1, long jarg2);
  public final static native int _frida_g_socket_address_to_native(long jarg1, _GSocketAddress jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int _frida_g_socket_address_get_native_size(long jarg1, _GSocketAddress jarg1_);
  public final static native void _GInetSocketAddress_parent_instance_set(long jarg1, _GInetSocketAddress jarg1_, long jarg2, _GSocketAddress jarg2_);
  public final static native long _GInetSocketAddress_parent_instance_get(long jarg1, _GInetSocketAddress jarg1_);
  public final static native void _GInetSocketAddress_priv_set(long jarg1, _GInetSocketAddress jarg1_, long jarg2);
  public final static native long _GInetSocketAddress_priv_get(long jarg1, _GInetSocketAddress jarg1_);
  public final static native long new__GInetSocketAddress();
  public final static native void delete__GInetSocketAddress(long jarg1);
  public final static native void _GInetSocketAddressClass_parent_class_set(long jarg1, _GInetSocketAddressClass jarg1_, long jarg2, _GSocketAddressClass jarg2_);
  public final static native long _GInetSocketAddressClass_parent_class_get(long jarg1, _GInetSocketAddressClass jarg1_);
  public final static native long new__GInetSocketAddressClass();
  public final static native void delete__GInetSocketAddressClass(long jarg1);
  public final static native long _frida_g_inet_socket_address_get_type();
  public final static native long _frida_g_inet_socket_address_new(long jarg1, _GInetAddress jarg1_, int jarg2);
  public final static native long _frida_g_inet_socket_address_new_from_string(String jarg1, long jarg2);
  public final static native long _frida_g_inet_socket_address_get_address(long jarg1, _GInetSocketAddress jarg1_);
  public final static native int _frida_g_inet_socket_address_get_port(long jarg1, _GInetSocketAddress jarg1_);
  public final static native long _frida_g_inet_socket_address_get_flowinfo(long jarg1, _GInetSocketAddress jarg1_);
  public final static native long _frida_g_inet_socket_address_get_scope_id(long jarg1, _GInetSocketAddress jarg1_);
  public final static native long _frida_g_app_info_create_flags_get_type();
  public final static native long _frida_g_converter_flags_get_type();
  public final static native long _frida_g_converter_result_get_type();
  public final static native long _frida_g_data_stream_byte_order_get_type();
  public final static native long _frida_g_data_stream_newline_type_get_type();
  public final static native long _frida_g_file_attribute_type_get_type();
  public final static native long _frida_g_file_attribute_info_flags_get_type();
  public final static native long _frida_g_file_attribute_status_get_type();
  public final static native long _frida_g_file_query_info_flags_get_type();
  public final static native long _frida_g_file_create_flags_get_type();
  public final static native long _frida_g_file_measure_flags_get_type();
  public final static native long _frida_g_mount_mount_flags_get_type();
  public final static native long _frida_g_mount_unmount_flags_get_type();
  public final static native long _frida_g_drive_start_flags_get_type();
  public final static native long _frida_g_drive_start_stop_type_get_type();
  public final static native long _frida_g_file_copy_flags_get_type();
  public final static native long _frida_g_file_monitor_flags_get_type();
  public final static native long _frida_g_file_type_get_type();
  public final static native long _frida_g_filesystem_preview_type_get_type();
  public final static native long _frida_g_file_monitor_event_get_type();
  public final static native long _frida_g_io_error_enum_get_type();
  public final static native long _frida_g_ask_password_flags_get_type();
  public final static native long _frida_g_password_save_get_type();
  public final static native long _frida_g_mount_operation_result_get_type();
  public final static native long _frida_g_output_stream_splice_flags_get_type();
  public final static native long _frida_g_io_stream_splice_flags_get_type();
  public final static native long _frida_g_emblem_origin_get_type();
  public final static native long _frida_g_resolver_error_get_type();
  public final static native long _frida_g_resolver_record_type_get_type();
  public final static native long _frida_g_resource_error_get_type();
  public final static native long _frida_g_resource_flags_get_type();
  public final static native long _frida_g_resource_lookup_flags_get_type();
  public final static native long _frida_g_socket_family_get_type();
  public final static native long _frida_g_socket_type_get_type();
  public final static native long _frida_g_socket_msg_flags_get_type();
  public final static native long _frida_g_socket_protocol_get_type();
  public final static native long _frida_g_zlib_compressor_format_get_type();
  public final static native long _frida_g_unix_socket_address_type_get_type();
  public final static native long _frida_g_bus_type_get_type();
  public final static native long _frida_g_bus_name_owner_flags_get_type();
  public final static native long _frida_g_bus_name_watcher_flags_get_type();
  public final static native long _frida_g_dbus_proxy_flags_get_type();
  public final static native long _frida_g_dbus_error_get_type();
  public final static native long _frida_g_dbus_connection_flags_get_type();
  public final static native long _frida_g_dbus_capability_flags_get_type();
  public final static native long _frida_g_dbus_call_flags_get_type();
  public final static native long _frida_g_dbus_message_type_get_type();
  public final static native long _frida_g_dbus_message_flags_get_type();
  public final static native long _frida_g_dbus_message_header_field_get_type();
  public final static native long _frida_g_dbus_property_info_flags_get_type();
  public final static native long _frida_g_dbus_subtree_flags_get_type();
  public final static native long _frida_g_dbus_server_flags_get_type();
  public final static native long _frida_g_dbus_signal_flags_get_type();
  public final static native long _frida_g_dbus_send_message_flags_get_type();
  public final static native long _frida_g_credentials_type_get_type();
  public final static native long _frida_g_dbus_message_byte_order_get_type();
  public final static native long _frida_g_application_flags_get_type();
  public final static native long _frida_g_tls_error_get_type();
  public final static native long _frida_g_tls_certificate_flags_get_type();
  public final static native long _frida_g_tls_authentication_mode_get_type();
  public final static native long _frida_g_tls_rehandshake_mode_get_type();
  public final static native long _frida_g_tls_password_flags_get_type();
  public final static native long _frida_g_tls_interaction_result_get_type();
  public final static native long _frida_g_dbus_interface_skeleton_flags_get_type();
  public final static native long _frida_g_dbus_object_manager_client_flags_get_type();
  public final static native long _frida_g_tls_database_verify_flags_get_type();
  public final static native long _frida_g_tls_database_lookup_flags_get_type();
  public final static native long _frida_g_tls_certificate_request_flags_get_type();
  public final static native long _frida_g_io_module_scope_flags_get_type();
  public final static native long _frida_g_socket_client_event_get_type();
  public final static native long _frida_g_socket_listener_event_get_type();
  public final static native long _frida_g_test_dbus_flags_get_type();
  public final static native long _frida_g_subprocess_flags_get_type();
  public final static native long _frida_g_notification_priority_get_type();
  public final static native long _frida_g_network_connectivity_get_type();
  public final static native long _frida_g_pollable_return_get_type();
  public final static native long _frida_g_resolver_name_lookup_flags_get_type();
  public final static native long _frida_g_settings_bind_flags_get_type();
  public final static native int G_MODULE_BIND_LAZY_get();
  public final static native int G_MODULE_BIND_LOCAL_get();
  public final static native int G_MODULE_BIND_MASK_get();
  public final static native int _frida_g_module_supported();
  public final static native long _frida_g_module_open(String jarg1, int jarg2);
  public final static native int _frida_g_module_close(long jarg1);
  public final static native void _frida_g_module_make_resident(long jarg1);
  public final static native String _frida_g_module_error();
  public final static native int _frida_g_module_symbol(long jarg1, String jarg2, long jarg3);
  public final static native String _frida_g_module_name(long jarg1);
  public final static native String _frida_g_module_build_path(String jarg1, String jarg2);
  public final static native long _frida_g_io_module_scope_new(int jarg1);
  public final static native void _frida_g_io_module_scope_free(long jarg1);
  public final static native void _frida_g_io_module_scope_block(long jarg1, String jarg2);
  public final static native long _frida_g_io_module_get_type();
  public final static native long _frida_g_io_module_new(String jarg1);
  public final static native void _frida_g_io_modules_scan_all_in_directory(String jarg1);
  public final static native long _frida_g_io_modules_load_all_in_directory(String jarg1);
  public final static native void _frida_g_io_modules_scan_all_in_directory_with_scope(String jarg1, long jarg2);
  public final static native long _frida_g_io_modules_load_all_in_directory_with_scope(String jarg1, long jarg2);
  public final static native long _frida_g_io_extension_point_register(String jarg1);
  public final static native long _frida_g_io_extension_point_lookup(String jarg1);
  public final static native void _frida_g_io_extension_point_set_required_type(long jarg1, long jarg2);
  public final static native long _frida_g_io_extension_point_get_required_type(long jarg1);
  public final static native long _frida_g_io_extension_point_get_extensions(long jarg1);
  public final static native long _frida_g_io_extension_point_get_extension_by_name(long jarg1, String jarg2);
  public final static native long _frida_g_io_extension_point_implement(String jarg1, long jarg2, String jarg3, int jarg4);
  public final static native long _frida_g_io_extension_get_type(long jarg1);
  public final static native String _frida_g_io_extension_get_name(long jarg1);
  public final static native int _frida_g_io_extension_get_priority(long jarg1);
  public final static native long _frida_g_io_extension_ref_class(long jarg1);
  public final static native void g_io_module_load(long jarg1);
  public final static native void g_io_module_unload(long jarg1);
  public final static native long g_io_module_query();
  public final static native void _frida_g_io_scheduler_push_job(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_);
  public final static native void _frida_g_io_scheduler_cancel_all_jobs();
  public final static native int _frida_g_io_scheduler_job_send_to_mainloop(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_io_scheduler_job_send_to_mainloop_async(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _GLoadableIconIface_g_iface_set(long jarg1, _GLoadableIconIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GLoadableIconIface_g_iface_get(long jarg1, _GLoadableIconIface jarg1_);
  public final static native void _GLoadableIconIface_load_set(long jarg1, _GLoadableIconIface jarg1_, long jarg2);
  public final static native long _GLoadableIconIface_load_get(long jarg1, _GLoadableIconIface jarg1_);
  public final static native void _GLoadableIconIface_load_async_set(long jarg1, _GLoadableIconIface jarg1_, long jarg2);
  public final static native long _GLoadableIconIface_load_async_get(long jarg1, _GLoadableIconIface jarg1_);
  public final static native void _GLoadableIconIface_load_finish_set(long jarg1, _GLoadableIconIface jarg1_, long jarg2);
  public final static native long _GLoadableIconIface_load_finish_get(long jarg1, _GLoadableIconIface jarg1_);
  public final static native long new__GLoadableIconIface();
  public final static native void delete__GLoadableIconIface(long jarg1);
  public final static native long _frida_g_loadable_icon_get_type();
  public final static native long _frida_g_loadable_icon_load(long jarg1, int jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_loadable_icon_load_async(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_loadable_icon_load_finish(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _GMemoryInputStream_parent_instance_set(long jarg1, _GMemoryInputStream jarg1_, long jarg2, _GInputStream jarg2_);
  public final static native long _GMemoryInputStream_parent_instance_get(long jarg1, _GMemoryInputStream jarg1_);
  public final static native void _GMemoryInputStream_priv_set(long jarg1, _GMemoryInputStream jarg1_, long jarg2);
  public final static native long _GMemoryInputStream_priv_get(long jarg1, _GMemoryInputStream jarg1_);
  public final static native long new__GMemoryInputStream();
  public final static native void delete__GMemoryInputStream(long jarg1);
  public final static native void _GMemoryInputStreamClass_parent_class_set(long jarg1, _GMemoryInputStreamClass jarg1_, long jarg2, _GInputStreamClass jarg2_);
  public final static native long _GMemoryInputStreamClass_parent_class_get(long jarg1, _GMemoryInputStreamClass jarg1_);
  public final static native void _GMemoryInputStreamClass__g_reserved1_set(long jarg1, _GMemoryInputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryInputStreamClass__g_reserved1_get(long jarg1, _GMemoryInputStreamClass jarg1_);
  public final static native void _GMemoryInputStreamClass__g_reserved2_set(long jarg1, _GMemoryInputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryInputStreamClass__g_reserved2_get(long jarg1, _GMemoryInputStreamClass jarg1_);
  public final static native void _GMemoryInputStreamClass__g_reserved3_set(long jarg1, _GMemoryInputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryInputStreamClass__g_reserved3_get(long jarg1, _GMemoryInputStreamClass jarg1_);
  public final static native void _GMemoryInputStreamClass__g_reserved4_set(long jarg1, _GMemoryInputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryInputStreamClass__g_reserved4_get(long jarg1, _GMemoryInputStreamClass jarg1_);
  public final static native void _GMemoryInputStreamClass__g_reserved5_set(long jarg1, _GMemoryInputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryInputStreamClass__g_reserved5_get(long jarg1, _GMemoryInputStreamClass jarg1_);
  public final static native long new__GMemoryInputStreamClass();
  public final static native void delete__GMemoryInputStreamClass(long jarg1);
  public final static native long _frida_g_memory_input_stream_get_type();
  public final static native long _frida_g_memory_input_stream_new();
  public final static native long _frida_g_memory_input_stream_new_from_data(long jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_memory_input_stream_new_from_bytes(long jarg1);
  public final static native void _frida_g_memory_input_stream_add_data(long jarg1, _GMemoryInputStream jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native void _frida_g_memory_input_stream_add_bytes(long jarg1, _GMemoryInputStream jarg1_, long jarg2);
  public final static native void _GMemoryOutputStream_parent_instance_set(long jarg1, _GMemoryOutputStream jarg1_, long jarg2, _GOutputStream jarg2_);
  public final static native long _GMemoryOutputStream_parent_instance_get(long jarg1, _GMemoryOutputStream jarg1_);
  public final static native void _GMemoryOutputStream_priv_set(long jarg1, _GMemoryOutputStream jarg1_, long jarg2);
  public final static native long _GMemoryOutputStream_priv_get(long jarg1, _GMemoryOutputStream jarg1_);
  public final static native long new__GMemoryOutputStream();
  public final static native void delete__GMemoryOutputStream(long jarg1);
  public final static native void _GMemoryOutputStreamClass_parent_class_set(long jarg1, _GMemoryOutputStreamClass jarg1_, long jarg2, _GOutputStreamClass jarg2_);
  public final static native long _GMemoryOutputStreamClass_parent_class_get(long jarg1, _GMemoryOutputStreamClass jarg1_);
  public final static native void _GMemoryOutputStreamClass__g_reserved1_set(long jarg1, _GMemoryOutputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryOutputStreamClass__g_reserved1_get(long jarg1, _GMemoryOutputStreamClass jarg1_);
  public final static native void _GMemoryOutputStreamClass__g_reserved2_set(long jarg1, _GMemoryOutputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryOutputStreamClass__g_reserved2_get(long jarg1, _GMemoryOutputStreamClass jarg1_);
  public final static native void _GMemoryOutputStreamClass__g_reserved3_set(long jarg1, _GMemoryOutputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryOutputStreamClass__g_reserved3_get(long jarg1, _GMemoryOutputStreamClass jarg1_);
  public final static native void _GMemoryOutputStreamClass__g_reserved4_set(long jarg1, _GMemoryOutputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryOutputStreamClass__g_reserved4_get(long jarg1, _GMemoryOutputStreamClass jarg1_);
  public final static native void _GMemoryOutputStreamClass__g_reserved5_set(long jarg1, _GMemoryOutputStreamClass jarg1_, long jarg2);
  public final static native long _GMemoryOutputStreamClass__g_reserved5_get(long jarg1, _GMemoryOutputStreamClass jarg1_);
  public final static native long new__GMemoryOutputStreamClass();
  public final static native void delete__GMemoryOutputStreamClass(long jarg1);
  public final static native long _frida_g_memory_output_stream_get_type();
  public final static native long _frida_g_memory_output_stream_new(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_memory_output_stream_new_resizable();
  public final static native long _frida_g_memory_output_stream_get_data(long jarg1, _GMemoryOutputStream jarg1_);
  public final static native long _frida_g_memory_output_stream_get_size(long jarg1, _GMemoryOutputStream jarg1_);
  public final static native long _frida_g_memory_output_stream_get_data_size(long jarg1, _GMemoryOutputStream jarg1_);
  public final static native long _frida_g_memory_output_stream_steal_data(long jarg1, _GMemoryOutputStream jarg1_);
  public final static native long _frida_g_memory_output_stream_steal_as_bytes(long jarg1, _GMemoryOutputStream jarg1_);
  public final static native void _GMountIface_g_iface_set(long jarg1, _GMountIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GMountIface_g_iface_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_changed_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_changed_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_unmounted_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_unmounted_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_root_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_root_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_name_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_name_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_icon_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_icon_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_uuid_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_uuid_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_volume_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_volume_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_drive_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_drive_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_can_unmount_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_can_unmount_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_can_eject_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_can_eject_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_unmount_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_unmount_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_unmount_finish_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_unmount_finish_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_eject_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_eject_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_eject_finish_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_eject_finish_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_remount_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_remount_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_remount_finish_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_remount_finish_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_guess_content_type_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_guess_content_type_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_guess_content_type_finish_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_guess_content_type_finish_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_guess_content_type_sync_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_guess_content_type_sync_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_pre_unmount_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_pre_unmount_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_unmount_with_operation_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_unmount_with_operation_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_unmount_with_operation_finish_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_unmount_with_operation_finish_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_eject_with_operation_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_eject_with_operation_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_eject_with_operation_finish_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_eject_with_operation_finish_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_default_location_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_default_location_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_sort_key_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_sort_key_get(long jarg1, _GMountIface jarg1_);
  public final static native void _GMountIface_get_symbolic_icon_set(long jarg1, _GMountIface jarg1_, long jarg2);
  public final static native long _GMountIface_get_symbolic_icon_get(long jarg1, _GMountIface jarg1_);
  public final static native long new__GMountIface();
  public final static native void delete__GMountIface(long jarg1);
  public final static native long _frida_g_mount_get_type();
  public final static native long _frida_g_mount_get_root(long jarg1);
  public final static native long _frida_g_mount_get_default_location(long jarg1);
  public final static native String _frida_g_mount_get_name(long jarg1);
  public final static native long _frida_g_mount_get_icon(long jarg1);
  public final static native long _frida_g_mount_get_symbolic_icon(long jarg1);
  public final static native String _frida_g_mount_get_uuid(long jarg1);
  public final static native long _frida_g_mount_get_volume(long jarg1);
  public final static native long _frida_g_mount_get_drive(long jarg1);
  public final static native int _frida_g_mount_can_unmount(long jarg1);
  public final static native int _frida_g_mount_can_eject(long jarg1);
  public final static native void _frida_g_mount_unmount(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_mount_unmount_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_mount_eject(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_mount_eject_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_mount_remount(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_mount_remount_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_mount_guess_content_type(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_mount_guess_content_type_finish(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_mount_guess_content_type_sync(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_mount_is_shadowed(long jarg1);
  public final static native void _frida_g_mount_shadow(long jarg1);
  public final static native void _frida_g_mount_unshadow(long jarg1);
  public final static native void _frida_g_mount_unmount_with_operation(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_mount_unmount_with_operation_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_mount_eject_with_operation(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_mount_eject_with_operation_finish(long jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_mount_get_sort_key(long jarg1);
  public final static native void _GMountOperation_parent_instance_set(long jarg1, _GMountOperation jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GMountOperation_parent_instance_get(long jarg1, _GMountOperation jarg1_);
  public final static native void _GMountOperation_priv_set(long jarg1, _GMountOperation jarg1_, long jarg2);
  public final static native long _GMountOperation_priv_get(long jarg1, _GMountOperation jarg1_);
  public final static native long new__GMountOperation();
  public final static native void delete__GMountOperation(long jarg1);
  public final static native void _GMountOperationClass_parent_class_set(long jarg1, _GMountOperationClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GMountOperationClass_parent_class_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass_ask_password_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass_ask_password_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass_ask_question_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass_ask_question_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass_reply_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass_reply_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass_aborted_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass_aborted_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass_show_processes_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass_show_processes_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass_show_unmount_progress_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass_show_unmount_progress_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved1_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved1_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved2_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved2_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved3_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved3_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved4_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved4_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved5_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved5_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved6_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved6_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved7_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved7_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved8_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved8_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native void _GMountOperationClass__g_reserved9_set(long jarg1, _GMountOperationClass jarg1_, long jarg2);
  public final static native long _GMountOperationClass__g_reserved9_get(long jarg1, _GMountOperationClass jarg1_);
  public final static native long new__GMountOperationClass();
  public final static native void delete__GMountOperationClass(long jarg1);
  public final static native long _frida_g_mount_operation_get_type();
  public final static native long _frida_g_mount_operation_new();
  public final static native String _frida_g_mount_operation_get_username(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_username(long jarg1, _GMountOperation jarg1_, String jarg2);
  public final static native String _frida_g_mount_operation_get_password(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_password(long jarg1, _GMountOperation jarg1_, String jarg2);
  public final static native int _frida_g_mount_operation_get_anonymous(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_anonymous(long jarg1, _GMountOperation jarg1_, int jarg2);
  public final static native String _frida_g_mount_operation_get_domain(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_domain(long jarg1, _GMountOperation jarg1_, String jarg2);
  public final static native int _frida_g_mount_operation_get_password_save(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_password_save(long jarg1, _GMountOperation jarg1_, int jarg2);
  public final static native int _frida_g_mount_operation_get_choice(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_choice(long jarg1, _GMountOperation jarg1_, int jarg2);
  public final static native void _frida_g_mount_operation_reply(long jarg1, _GMountOperation jarg1_, int jarg2);
  public final static native int _frida_g_mount_operation_get_is_tcrypt_hidden_volume(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_is_tcrypt_hidden_volume(long jarg1, _GMountOperation jarg1_, int jarg2);
  public final static native int _frida_g_mount_operation_get_is_tcrypt_system_volume(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_is_tcrypt_system_volume(long jarg1, _GMountOperation jarg1_, int jarg2);
  public final static native long _frida_g_mount_operation_get_pim(long jarg1, _GMountOperation jarg1_);
  public final static native void _frida_g_mount_operation_set_pim(long jarg1, _GMountOperation jarg1_, long jarg2);
  public final static native String G_VOLUME_MONITOR_EXTENSION_POINT_NAME_get();
  public final static native void _GVolumeMonitor_parent_instance_set(long jarg1, _GVolumeMonitor jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GVolumeMonitor_parent_instance_get(long jarg1, _GVolumeMonitor jarg1_);
  public final static native void _GVolumeMonitor_priv_set(long jarg1, _GVolumeMonitor jarg1_, long jarg2);
  public final static native long _GVolumeMonitor_priv_get(long jarg1, _GVolumeMonitor jarg1_);
  public final static native long new__GVolumeMonitor();
  public final static native void delete__GVolumeMonitor(long jarg1);
  public final static native void _GVolumeMonitorClass_parent_class_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GVolumeMonitorClass_parent_class_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_volume_added_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_volume_added_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_volume_removed_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_volume_removed_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_volume_changed_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_volume_changed_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_mount_added_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_mount_added_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_mount_removed_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_mount_removed_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_mount_pre_unmount_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_mount_pre_unmount_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_mount_changed_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_mount_changed_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_drive_connected_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_drive_connected_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_drive_disconnected_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_drive_disconnected_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_drive_changed_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_drive_changed_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_is_supported_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_is_supported_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_get_connected_drives_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_get_connected_drives_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_get_volumes_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_get_volumes_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_get_mounts_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_get_mounts_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_get_volume_for_uuid_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_get_volume_for_uuid_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_get_mount_for_uuid_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_get_mount_for_uuid_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_adopt_orphan_mount_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_adopt_orphan_mount_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_drive_eject_button_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_drive_eject_button_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass_drive_stop_button_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass_drive_stop_button_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass__g_reserved1_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass__g_reserved1_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass__g_reserved2_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass__g_reserved2_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass__g_reserved3_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass__g_reserved3_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass__g_reserved4_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass__g_reserved4_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass__g_reserved5_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass__g_reserved5_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native void _GVolumeMonitorClass__g_reserved6_set(long jarg1, _GVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GVolumeMonitorClass__g_reserved6_get(long jarg1, _GVolumeMonitorClass jarg1_);
  public final static native long new__GVolumeMonitorClass();
  public final static native void delete__GVolumeMonitorClass(long jarg1);
  public final static native long _frida_g_volume_monitor_get_type();
  public final static native long _frida_g_volume_monitor_get();
  public final static native long _frida_g_volume_monitor_get_connected_drives(long jarg1, _GVolumeMonitor jarg1_);
  public final static native long _frida_g_volume_monitor_get_volumes(long jarg1, _GVolumeMonitor jarg1_);
  public final static native long _frida_g_volume_monitor_get_mounts(long jarg1, _GVolumeMonitor jarg1_);
  public final static native long _frida_g_volume_monitor_get_volume_for_uuid(long jarg1, _GVolumeMonitor jarg1_, String jarg2);
  public final static native long _frida_g_volume_monitor_get_mount_for_uuid(long jarg1, _GVolumeMonitor jarg1_, String jarg2);
  public final static native long _frida_g_volume_monitor_adopt_orphan_mount(long jarg1);
  public final static native String G_NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME_get();
  public final static native void _GNativeVolumeMonitor_parent_instance_set(long jarg1, _GNativeVolumeMonitor jarg1_, long jarg2, _GVolumeMonitor jarg2_);
  public final static native long _GNativeVolumeMonitor_parent_instance_get(long jarg1, _GNativeVolumeMonitor jarg1_);
  public final static native long new__GNativeVolumeMonitor();
  public final static native void delete__GNativeVolumeMonitor(long jarg1);
  public final static native void _GNativeVolumeMonitorClass_parent_class_set(long jarg1, _GNativeVolumeMonitorClass jarg1_, long jarg2, _GVolumeMonitorClass jarg2_);
  public final static native long _GNativeVolumeMonitorClass_parent_class_get(long jarg1, _GNativeVolumeMonitorClass jarg1_);
  public final static native void _GNativeVolumeMonitorClass_get_mount_for_mount_path_set(long jarg1, _GNativeVolumeMonitorClass jarg1_, long jarg2);
  public final static native long _GNativeVolumeMonitorClass_get_mount_for_mount_path_get(long jarg1, _GNativeVolumeMonitorClass jarg1_);
  public final static native long new__GNativeVolumeMonitorClass();
  public final static native void delete__GNativeVolumeMonitorClass(long jarg1);
  public final static native long _frida_g_native_volume_monitor_get_type();
  public final static native void _GNetworkAddress_parent_instance_set(long jarg1, _GNetworkAddress jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GNetworkAddress_parent_instance_get(long jarg1, _GNetworkAddress jarg1_);
  public final static native void _GNetworkAddress_priv_set(long jarg1, _GNetworkAddress jarg1_, long jarg2);
  public final static native long _GNetworkAddress_priv_get(long jarg1, _GNetworkAddress jarg1_);
  public final static native long new__GNetworkAddress();
  public final static native void delete__GNetworkAddress(long jarg1);
  public final static native void _GNetworkAddressClass_parent_class_set(long jarg1, _GNetworkAddressClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GNetworkAddressClass_parent_class_get(long jarg1, _GNetworkAddressClass jarg1_);
  public final static native long new__GNetworkAddressClass();
  public final static native void delete__GNetworkAddressClass(long jarg1);
  public final static native long _frida_g_network_address_get_type();
  public final static native long _frida_g_network_address_new(String jarg1, int jarg2);
  public final static native long _frida_g_network_address_new_loopback(int jarg1);
  public final static native long _frida_g_network_address_parse(String jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_network_address_parse_uri(String jarg1, int jarg2, long jarg3);
  public final static native String _frida_g_network_address_get_hostname(long jarg1, _GNetworkAddress jarg1_);
  public final static native int _frida_g_network_address_get_port(long jarg1, _GNetworkAddress jarg1_);
  public final static native String _frida_g_network_address_get_scheme(long jarg1, _GNetworkAddress jarg1_);
  public final static native String G_NETWORK_MONITOR_EXTENSION_POINT_NAME_get();
  public final static native void _GNetworkMonitorInterface_g_iface_set(long jarg1, _GNetworkMonitorInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GNetworkMonitorInterface_g_iface_get(long jarg1, _GNetworkMonitorInterface jarg1_);
  public final static native void _GNetworkMonitorInterface_network_changed_set(long jarg1, _GNetworkMonitorInterface jarg1_, long jarg2);
  public final static native long _GNetworkMonitorInterface_network_changed_get(long jarg1, _GNetworkMonitorInterface jarg1_);
  public final static native void _GNetworkMonitorInterface_can_reach_set(long jarg1, _GNetworkMonitorInterface jarg1_, long jarg2);
  public final static native long _GNetworkMonitorInterface_can_reach_get(long jarg1, _GNetworkMonitorInterface jarg1_);
  public final static native void _GNetworkMonitorInterface_can_reach_async_set(long jarg1, _GNetworkMonitorInterface jarg1_, long jarg2);
  public final static native long _GNetworkMonitorInterface_can_reach_async_get(long jarg1, _GNetworkMonitorInterface jarg1_);
  public final static native void _GNetworkMonitorInterface_can_reach_finish_set(long jarg1, _GNetworkMonitorInterface jarg1_, long jarg2);
  public final static native long _GNetworkMonitorInterface_can_reach_finish_get(long jarg1, _GNetworkMonitorInterface jarg1_);
  public final static native long new__GNetworkMonitorInterface();
  public final static native void delete__GNetworkMonitorInterface(long jarg1);
  public final static native long _frida_g_network_monitor_get_type();
  public final static native long _frida_g_network_monitor_get_default();
  public final static native int _frida_g_network_monitor_get_network_available(long jarg1);
  public final static native int _frida_g_network_monitor_get_network_metered(long jarg1);
  public final static native int _frida_g_network_monitor_get_connectivity(long jarg1);
  public final static native int _frida_g_network_monitor_can_reach(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_network_monitor_can_reach_async(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_network_monitor_can_reach_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _GNetworkService_parent_instance_set(long jarg1, _GNetworkService jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GNetworkService_parent_instance_get(long jarg1, _GNetworkService jarg1_);
  public final static native void _GNetworkService_priv_set(long jarg1, _GNetworkService jarg1_, long jarg2);
  public final static native long _GNetworkService_priv_get(long jarg1, _GNetworkService jarg1_);
  public final static native long new__GNetworkService();
  public final static native void delete__GNetworkService(long jarg1);
  public final static native void _GNetworkServiceClass_parent_class_set(long jarg1, _GNetworkServiceClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GNetworkServiceClass_parent_class_get(long jarg1, _GNetworkServiceClass jarg1_);
  public final static native long new__GNetworkServiceClass();
  public final static native void delete__GNetworkServiceClass(long jarg1);
  public final static native long _frida_g_network_service_get_type();
  public final static native long _frida_g_network_service_new(String jarg1, String jarg2, String jarg3);
  public final static native String _frida_g_network_service_get_service(long jarg1, _GNetworkService jarg1_);
  public final static native String _frida_g_network_service_get_protocol(long jarg1, _GNetworkService jarg1_);
  public final static native String _frida_g_network_service_get_domain(long jarg1, _GNetworkService jarg1_);
  public final static native String _frida_g_network_service_get_scheme(long jarg1, _GNetworkService jarg1_);
  public final static native void _frida_g_network_service_set_scheme(long jarg1, _GNetworkService jarg1_, String jarg2);
  public final static native void _GPermission_parent_instance_set(long jarg1, _GPermission jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GPermission_parent_instance_get(long jarg1, _GPermission jarg1_);
  public final static native void _GPermission_priv_set(long jarg1, _GPermission jarg1_, long jarg2);
  public final static native long _GPermission_priv_get(long jarg1, _GPermission jarg1_);
  public final static native long new__GPermission();
  public final static native void delete__GPermission(long jarg1);
  public final static native void _GPermissionClass_parent_class_set(long jarg1, _GPermissionClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GPermissionClass_parent_class_get(long jarg1, _GPermissionClass jarg1_);
  public final static native void _GPermissionClass_acquire_set(long jarg1, _GPermissionClass jarg1_, long jarg2);
  public final static native long _GPermissionClass_acquire_get(long jarg1, _GPermissionClass jarg1_);
  public final static native void _GPermissionClass_acquire_async_set(long jarg1, _GPermissionClass jarg1_, long jarg2);
  public final static native long _GPermissionClass_acquire_async_get(long jarg1, _GPermissionClass jarg1_);
  public final static native void _GPermissionClass_acquire_finish_set(long jarg1, _GPermissionClass jarg1_, long jarg2);
  public final static native long _GPermissionClass_acquire_finish_get(long jarg1, _GPermissionClass jarg1_);
  public final static native void _GPermissionClass_release_set(long jarg1, _GPermissionClass jarg1_, long jarg2);
  public final static native long _GPermissionClass_release_get(long jarg1, _GPermissionClass jarg1_);
  public final static native void _GPermissionClass_release_async_set(long jarg1, _GPermissionClass jarg1_, long jarg2);
  public final static native long _GPermissionClass_release_async_get(long jarg1, _GPermissionClass jarg1_);
  public final static native void _GPermissionClass_release_finish_set(long jarg1, _GPermissionClass jarg1_, long jarg2);
  public final static native long _GPermissionClass_release_finish_get(long jarg1, _GPermissionClass jarg1_);
  public final static native void _GPermissionClass_reserved_set(long jarg1, _GPermissionClass jarg1_, long jarg2);
  public final static native long _GPermissionClass_reserved_get(long jarg1, _GPermissionClass jarg1_);
  public final static native long new__GPermissionClass();
  public final static native void delete__GPermissionClass(long jarg1);
  public final static native long _frida_g_permission_get_type();
  public final static native int _frida_g_permission_acquire(long jarg1, _GPermission jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_permission_acquire_async(long jarg1, _GPermission jarg1_, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_permission_acquire_finish(long jarg1, _GPermission jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_permission_release(long jarg1, _GPermission jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_permission_release_async(long jarg1, _GPermission jarg1_, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_permission_release_finish(long jarg1, _GPermission jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_permission_get_allowed(long jarg1, _GPermission jarg1_);
  public final static native int _frida_g_permission_get_can_acquire(long jarg1, _GPermission jarg1_);
  public final static native int _frida_g_permission_get_can_release(long jarg1, _GPermission jarg1_);
  public final static native void _frida_g_permission_impl_update(long jarg1, _GPermission jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void _GPollableInputStreamInterface_g_iface_set(long jarg1, _GPollableInputStreamInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GPollableInputStreamInterface_g_iface_get(long jarg1, _GPollableInputStreamInterface jarg1_);
  public final static native void _GPollableInputStreamInterface_can_poll_set(long jarg1, _GPollableInputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableInputStreamInterface_can_poll_get(long jarg1, _GPollableInputStreamInterface jarg1_);
  public final static native void _GPollableInputStreamInterface_is_readable_set(long jarg1, _GPollableInputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableInputStreamInterface_is_readable_get(long jarg1, _GPollableInputStreamInterface jarg1_);
  public final static native void _GPollableInputStreamInterface_create_source_set(long jarg1, _GPollableInputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableInputStreamInterface_create_source_get(long jarg1, _GPollableInputStreamInterface jarg1_);
  public final static native void _GPollableInputStreamInterface_read_nonblocking_set(long jarg1, _GPollableInputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableInputStreamInterface_read_nonblocking_get(long jarg1, _GPollableInputStreamInterface jarg1_);
  public final static native long new__GPollableInputStreamInterface();
  public final static native void delete__GPollableInputStreamInterface(long jarg1);
  public final static native long _frida_g_pollable_input_stream_get_type();
  public final static native int _frida_g_pollable_input_stream_can_poll(long jarg1);
  public final static native int _frida_g_pollable_input_stream_is_readable(long jarg1);
  public final static native long _frida_g_pollable_input_stream_create_source(long jarg1, long jarg2, _GCancellable jarg2_);
  public final static native int _frida_g_pollable_input_stream_read_nonblocking(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _GPollableOutputStreamInterface_g_iface_set(long jarg1, _GPollableOutputStreamInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GPollableOutputStreamInterface_g_iface_get(long jarg1, _GPollableOutputStreamInterface jarg1_);
  public final static native void _GPollableOutputStreamInterface_can_poll_set(long jarg1, _GPollableOutputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableOutputStreamInterface_can_poll_get(long jarg1, _GPollableOutputStreamInterface jarg1_);
  public final static native void _GPollableOutputStreamInterface_is_writable_set(long jarg1, _GPollableOutputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableOutputStreamInterface_is_writable_get(long jarg1, _GPollableOutputStreamInterface jarg1_);
  public final static native void _GPollableOutputStreamInterface_create_source_set(long jarg1, _GPollableOutputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableOutputStreamInterface_create_source_get(long jarg1, _GPollableOutputStreamInterface jarg1_);
  public final static native void _GPollableOutputStreamInterface_write_nonblocking_set(long jarg1, _GPollableOutputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableOutputStreamInterface_write_nonblocking_get(long jarg1, _GPollableOutputStreamInterface jarg1_);
  public final static native void _GPollableOutputStreamInterface_writev_nonblocking_set(long jarg1, _GPollableOutputStreamInterface jarg1_, long jarg2);
  public final static native long _GPollableOutputStreamInterface_writev_nonblocking_get(long jarg1, _GPollableOutputStreamInterface jarg1_);
  public final static native long new__GPollableOutputStreamInterface();
  public final static native void delete__GPollableOutputStreamInterface(long jarg1);
  public final static native long _frida_g_pollable_output_stream_get_type();
  public final static native int _frida_g_pollable_output_stream_can_poll(long jarg1);
  public final static native int _frida_g_pollable_output_stream_is_writable(long jarg1);
  public final static native long _frida_g_pollable_output_stream_create_source(long jarg1, long jarg2, _GCancellable jarg2_);
  public final static native int _frida_g_pollable_output_stream_write_nonblocking(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_pollable_output_stream_writev_nonblocking(long jarg1, long jarg2, _GOutputVector jarg2_, long jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native long _frida_g_pollable_source_new(long jarg1, _GObject jarg1_);
  public final static native long _frida_g_pollable_source_new_full(long jarg1, long jarg2, _GSource jarg2_, long jarg3, _GCancellable jarg3_);
  public final static native int _frida_g_pollable_stream_read(long jarg1, _GInputStream jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_pollable_stream_write(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_pollable_stream_write_all(long jarg1, _GOutputStream jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native long _frida_g_property_action_get_type();
  public final static native long _frida_g_property_action_new(String jarg1, long jarg2, String jarg3);
  public final static native String G_PROXY_EXTENSION_POINT_NAME_get();
  public final static native void _GProxyInterface_g_iface_set(long jarg1, _GProxyInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GProxyInterface_g_iface_get(long jarg1, _GProxyInterface jarg1_);
  public final static native void _GProxyInterface_connect_set(long jarg1, _GProxyInterface jarg1_, long jarg2);
  public final static native long _GProxyInterface_connect_get(long jarg1, _GProxyInterface jarg1_);
  public final static native void _GProxyInterface_connect_async_set(long jarg1, _GProxyInterface jarg1_, long jarg2);
  public final static native long _GProxyInterface_connect_async_get(long jarg1, _GProxyInterface jarg1_);
  public final static native void _GProxyInterface_connect_finish_set(long jarg1, _GProxyInterface jarg1_, long jarg2);
  public final static native long _GProxyInterface_connect_finish_get(long jarg1, _GProxyInterface jarg1_);
  public final static native void _GProxyInterface_supports_hostname_set(long jarg1, _GProxyInterface jarg1_, long jarg2);
  public final static native long _GProxyInterface_supports_hostname_get(long jarg1, _GProxyInterface jarg1_);
  public final static native long new__GProxyInterface();
  public final static native void delete__GProxyInterface(long jarg1);
  public final static native long _frida_g_proxy_get_type();
  public final static native long _frida_g_proxy_get_default_for_protocol(String jarg1);
  public final static native long _frida_g_proxy_connect(long jarg1, long jarg2, _GIOStream jarg2_, long jarg3, _GProxyAddress jarg3_, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_proxy_connect_async(long jarg1, long jarg2, _GIOStream jarg2_, long jarg3, _GProxyAddress jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_proxy_connect_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_proxy_supports_hostname(long jarg1);
  public final static native void _GProxyAddress_parent_instance_set(long jarg1, _GProxyAddress jarg1_, long jarg2, _GInetSocketAddress jarg2_);
  public final static native long _GProxyAddress_parent_instance_get(long jarg1, _GProxyAddress jarg1_);
  public final static native void _GProxyAddress_priv_set(long jarg1, _GProxyAddress jarg1_, long jarg2);
  public final static native long _GProxyAddress_priv_get(long jarg1, _GProxyAddress jarg1_);
  public final static native long new__GProxyAddress();
  public final static native void delete__GProxyAddress(long jarg1);
  public final static native void _GProxyAddressClass_parent_class_set(long jarg1, _GProxyAddressClass jarg1_, long jarg2, _GInetSocketAddressClass jarg2_);
  public final static native long _GProxyAddressClass_parent_class_get(long jarg1, _GProxyAddressClass jarg1_);
  public final static native long new__GProxyAddressClass();
  public final static native void delete__GProxyAddressClass(long jarg1);
  public final static native long _frida_g_proxy_address_get_type();
  public final static native long _frida_g_proxy_address_new(long jarg1, _GInetAddress jarg1_, int jarg2, String jarg3, String jarg4, int jarg5, String jarg6, String jarg7);
  public final static native String _frida_g_proxy_address_get_protocol(long jarg1, _GProxyAddress jarg1_);
  public final static native String _frida_g_proxy_address_get_destination_protocol(long jarg1, _GProxyAddress jarg1_);
  public final static native String _frida_g_proxy_address_get_destination_hostname(long jarg1, _GProxyAddress jarg1_);
  public final static native int _frida_g_proxy_address_get_destination_port(long jarg1, _GProxyAddress jarg1_);
  public final static native String _frida_g_proxy_address_get_username(long jarg1, _GProxyAddress jarg1_);
  public final static native String _frida_g_proxy_address_get_password(long jarg1, _GProxyAddress jarg1_);
  public final static native String _frida_g_proxy_address_get_uri(long jarg1, _GProxyAddress jarg1_);
  public final static native void _GSocketAddressEnumerator_parent_instance_set(long jarg1, _GSocketAddressEnumerator jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSocketAddressEnumerator_parent_instance_get(long jarg1, _GSocketAddressEnumerator jarg1_);
  public final static native long new__GSocketAddressEnumerator();
  public final static native void delete__GSocketAddressEnumerator(long jarg1);
  public final static native void _GSocketAddressEnumeratorClass_parent_class_set(long jarg1, _GSocketAddressEnumeratorClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSocketAddressEnumeratorClass_parent_class_get(long jarg1, _GSocketAddressEnumeratorClass jarg1_);
  public final static native void _GSocketAddressEnumeratorClass_next_set(long jarg1, _GSocketAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GSocketAddressEnumeratorClass_next_get(long jarg1, _GSocketAddressEnumeratorClass jarg1_);
  public final static native void _GSocketAddressEnumeratorClass_next_async_set(long jarg1, _GSocketAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GSocketAddressEnumeratorClass_next_async_get(long jarg1, _GSocketAddressEnumeratorClass jarg1_);
  public final static native void _GSocketAddressEnumeratorClass_next_finish_set(long jarg1, _GSocketAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GSocketAddressEnumeratorClass_next_finish_get(long jarg1, _GSocketAddressEnumeratorClass jarg1_);
  public final static native long new__GSocketAddressEnumeratorClass();
  public final static native void delete__GSocketAddressEnumeratorClass(long jarg1);
  public final static native long _frida_g_socket_address_enumerator_get_type();
  public final static native long _frida_g_socket_address_enumerator_next(long jarg1, _GSocketAddressEnumerator jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_socket_address_enumerator_next_async(long jarg1, _GSocketAddressEnumerator jarg1_, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long _frida_g_socket_address_enumerator_next_finish(long jarg1, _GSocketAddressEnumerator jarg1_, long jarg2, long jarg3);
  public final static native void _GProxyAddressEnumerator_parent_instance_set(long jarg1, _GProxyAddressEnumerator jarg1_, long jarg2, _GSocketAddressEnumerator jarg2_);
  public final static native long _GProxyAddressEnumerator_parent_instance_get(long jarg1, _GProxyAddressEnumerator jarg1_);
  public final static native void _GProxyAddressEnumerator_priv_set(long jarg1, _GProxyAddressEnumerator jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumerator_priv_get(long jarg1, _GProxyAddressEnumerator jarg1_);
  public final static native long new__GProxyAddressEnumerator();
  public final static native void delete__GProxyAddressEnumerator(long jarg1);
  public final static native void _GProxyAddressEnumeratorClass_parent_class_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2, _GSocketAddressEnumeratorClass jarg2_);
  public final static native long _GProxyAddressEnumeratorClass_parent_class_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native void _GProxyAddressEnumeratorClass__g_reserved1_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumeratorClass__g_reserved1_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native void _GProxyAddressEnumeratorClass__g_reserved2_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumeratorClass__g_reserved2_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native void _GProxyAddressEnumeratorClass__g_reserved3_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumeratorClass__g_reserved3_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native void _GProxyAddressEnumeratorClass__g_reserved4_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumeratorClass__g_reserved4_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native void _GProxyAddressEnumeratorClass__g_reserved5_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumeratorClass__g_reserved5_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native void _GProxyAddressEnumeratorClass__g_reserved6_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumeratorClass__g_reserved6_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native void _GProxyAddressEnumeratorClass__g_reserved7_set(long jarg1, _GProxyAddressEnumeratorClass jarg1_, long jarg2);
  public final static native long _GProxyAddressEnumeratorClass__g_reserved7_get(long jarg1, _GProxyAddressEnumeratorClass jarg1_);
  public final static native long new__GProxyAddressEnumeratorClass();
  public final static native void delete__GProxyAddressEnumeratorClass(long jarg1);
  public final static native long _frida_g_proxy_address_enumerator_get_type();
  public final static native String G_PROXY_RESOLVER_EXTENSION_POINT_NAME_get();
  public final static native void _GProxyResolverInterface_g_iface_set(long jarg1, _GProxyResolverInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GProxyResolverInterface_g_iface_get(long jarg1, _GProxyResolverInterface jarg1_);
  public final static native void _GProxyResolverInterface_is_supported_set(long jarg1, _GProxyResolverInterface jarg1_, long jarg2);
  public final static native long _GProxyResolverInterface_is_supported_get(long jarg1, _GProxyResolverInterface jarg1_);
  public final static native void _GProxyResolverInterface_lookup_set(long jarg1, _GProxyResolverInterface jarg1_, long jarg2);
  public final static native long _GProxyResolverInterface_lookup_get(long jarg1, _GProxyResolverInterface jarg1_);
  public final static native void _GProxyResolverInterface_lookup_async_set(long jarg1, _GProxyResolverInterface jarg1_, long jarg2);
  public final static native long _GProxyResolverInterface_lookup_async_get(long jarg1, _GProxyResolverInterface jarg1_);
  public final static native void _GProxyResolverInterface_lookup_finish_set(long jarg1, _GProxyResolverInterface jarg1_, long jarg2);
  public final static native long _GProxyResolverInterface_lookup_finish_get(long jarg1, _GProxyResolverInterface jarg1_);
  public final static native long new__GProxyResolverInterface();
  public final static native void delete__GProxyResolverInterface(long jarg1);
  public final static native long _frida_g_proxy_resolver_get_type();
  public final static native long _frida_g_proxy_resolver_get_default();
  public final static native int _frida_g_proxy_resolver_is_supported(long jarg1);
  public final static native long _frida_g_proxy_resolver_lookup(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_proxy_resolver_lookup_async(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_proxy_resolver_lookup_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _GResolver_parent_instance_set(long jarg1, _GResolver jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GResolver_parent_instance_get(long jarg1, _GResolver jarg1_);
  public final static native void _GResolver_priv_set(long jarg1, _GResolver jarg1_, long jarg2);
  public final static native long _GResolver_priv_get(long jarg1, _GResolver jarg1_);
  public final static native long new__GResolver();
  public final static native void delete__GResolver(long jarg1);
  public final static native int G_RESOLVER_NAME_LOOKUP_FLAGS_DEFAULT_get();
  public final static native int G_RESOLVER_NAME_LOOKUP_FLAGS_IPV4_ONLY_get();
  public final static native int G_RESOLVER_NAME_LOOKUP_FLAGS_IPV6_ONLY_get();
  public final static native void _GResolverClass_parent_class_set(long jarg1, _GResolverClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GResolverClass_parent_class_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_reload_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_reload_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_name_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_name_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_name_async_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_name_async_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_name_finish_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_name_finish_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_address_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_address_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_address_async_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_address_async_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_address_finish_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_address_finish_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_service_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_service_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_service_async_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_service_async_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_service_finish_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_service_finish_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_records_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_records_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_records_async_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_records_async_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_records_finish_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_records_finish_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_name_with_flags_async_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_name_with_flags_async_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_name_with_flags_finish_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_name_with_flags_finish_get(long jarg1, _GResolverClass jarg1_);
  public final static native void _GResolverClass_lookup_by_name_with_flags_set(long jarg1, _GResolverClass jarg1_, long jarg2);
  public final static native long _GResolverClass_lookup_by_name_with_flags_get(long jarg1, _GResolverClass jarg1_);
  public final static native long new__GResolverClass();
  public final static native void delete__GResolverClass(long jarg1);
  public final static native long _frida_g_resolver_get_type();
  public final static native long _frida_g_resolver_get_default();
  public final static native void _frida_g_resolver_set_default(long jarg1, _GResolver jarg1_);
  public final static native long _frida_g_resolver_lookup_by_name(long jarg1, _GResolver jarg1_, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_resolver_lookup_by_name_async(long jarg1, _GResolver jarg1_, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_resolver_lookup_by_name_finish(long jarg1, _GResolver jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_resolver_lookup_by_name_with_flags_async(long jarg1, _GResolver jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_resolver_lookup_by_name_with_flags_finish(long jarg1, _GResolver jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_resolver_lookup_by_name_with_flags(long jarg1, _GResolver jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_resolver_free_addresses(long jarg1, _GList jarg1_);
  public final static native String _frida_g_resolver_lookup_by_address(long jarg1, _GResolver jarg1_, long jarg2, _GInetAddress jarg2_, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_resolver_lookup_by_address_async(long jarg1, _GResolver jarg1_, long jarg2, _GInetAddress jarg2_, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native String _frida_g_resolver_lookup_by_address_finish(long jarg1, _GResolver jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_resolver_lookup_service(long jarg1, _GResolver jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_resolver_lookup_service_async(long jarg1, _GResolver jarg1_, String jarg2, String jarg3, String jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_resolver_lookup_service_finish(long jarg1, _GResolver jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_resolver_lookup_records(long jarg1, _GResolver jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_resolver_lookup_records_async(long jarg1, _GResolver jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_resolver_lookup_records_finish(long jarg1, _GResolver jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_resolver_free_targets(long jarg1, _GList jarg1_);
  public final static native long _frida_g_resolver_error_quark();
  public final static native long _frida_g_resource_error_quark();
  public final static native void _GStaticResource_data_set(long jarg1, _GStaticResource jarg1_, long jarg2);
  public final static native long _GStaticResource_data_get(long jarg1, _GStaticResource jarg1_);
  public final static native void _GStaticResource_data_len_set(long jarg1, _GStaticResource jarg1_, long jarg2);
  public final static native long _GStaticResource_data_len_get(long jarg1, _GStaticResource jarg1_);
  public final static native void _GStaticResource_resource_set(long jarg1, _GStaticResource jarg1_, long jarg2);
  public final static native long _GStaticResource_resource_get(long jarg1, _GStaticResource jarg1_);
  public final static native void _GStaticResource_next_set(long jarg1, _GStaticResource jarg1_, long jarg2, _GStaticResource jarg2_);
  public final static native long _GStaticResource_next_get(long jarg1, _GStaticResource jarg1_);
  public final static native void _GStaticResource_padding_set(long jarg1, _GStaticResource jarg1_, long jarg2);
  public final static native long _GStaticResource_padding_get(long jarg1, _GStaticResource jarg1_);
  public final static native long new__GStaticResource();
  public final static native void delete__GStaticResource(long jarg1);
  public final static native long _frida_g_resource_get_type();
  public final static native long _frida_g_resource_new_from_data(long jarg1, long jarg2);
  public final static native long _frida_g_resource_ref(long jarg1);
  public final static native void _frida_g_resource_unref(long jarg1);
  public final static native long _frida_g_resource_load(String jarg1, long jarg2);
  public final static native long _frida_g_resource_open_stream(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_resource_lookup_data(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_resource_enumerate_children(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_resource_get_info(long jarg1, String jarg2, int jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_resources_register(long jarg1);
  public final static native void _frida_g_resources_unregister(long jarg1);
  public final static native long _frida_g_resources_open_stream(String jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_resources_lookup_data(String jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_resources_enumerate_children(String jarg1, int jarg2, long jarg3);
  public final static native int _frida_g_resources_get_info(String jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _frida_g_static_resource_init(long jarg1, _GStaticResource jarg1_);
  public final static native void _frida_g_static_resource_fini(long jarg1, _GStaticResource jarg1_);
  public final static native long _frida_g_static_resource_get_resource(long jarg1, _GStaticResource jarg1_);
  public final static native void _GSeekableIface_g_iface_set(long jarg1, _GSeekableIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GSeekableIface_g_iface_get(long jarg1, _GSeekableIface jarg1_);
  public final static native void _GSeekableIface_tell_set(long jarg1, _GSeekableIface jarg1_, long jarg2);
  public final static native long _GSeekableIface_tell_get(long jarg1, _GSeekableIface jarg1_);
  public final static native void _GSeekableIface_can_seek_set(long jarg1, _GSeekableIface jarg1_, long jarg2);
  public final static native long _GSeekableIface_can_seek_get(long jarg1, _GSeekableIface jarg1_);
  public final static native void _GSeekableIface_seek_set(long jarg1, _GSeekableIface jarg1_, long jarg2);
  public final static native long _GSeekableIface_seek_get(long jarg1, _GSeekableIface jarg1_);
  public final static native void _GSeekableIface_can_truncate_set(long jarg1, _GSeekableIface jarg1_, long jarg2);
  public final static native long _GSeekableIface_can_truncate_get(long jarg1, _GSeekableIface jarg1_);
  public final static native void _GSeekableIface_truncate_fn_set(long jarg1, _GSeekableIface jarg1_, long jarg2);
  public final static native long _GSeekableIface_truncate_fn_get(long jarg1, _GSeekableIface jarg1_);
  public final static native long new__GSeekableIface();
  public final static native void delete__GSeekableIface(long jarg1);
  public final static native long _frida_g_seekable_get_type();
  public final static native int _frida_g_seekable_tell(long jarg1);
  public final static native int _frida_g_seekable_can_seek(long jarg1);
  public final static native int _frida_g_seekable_seek(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_seekable_can_truncate(long jarg1);
  public final static native int _frida_g_seekable_truncate(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native long _frida_g_settings_schema_source_get_type();
  public final static native long _frida_g_settings_schema_source_get_default();
  public final static native long _frida_g_settings_schema_source_ref(long jarg1);
  public final static native void _frida_g_settings_schema_source_unref(long jarg1);
  public final static native long _frida_g_settings_schema_source_new_from_directory(String jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_settings_schema_source_lookup(long jarg1, String jarg2, int jarg3);
  public final static native void _frida_g_settings_schema_source_list_schemas(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_settings_schema_get_type();
  public final static native long _frida_g_settings_schema_ref(long jarg1);
  public final static native void _frida_g_settings_schema_unref(long jarg1);
  public final static native String _frida_g_settings_schema_get_id(long jarg1);
  public final static native String _frida_g_settings_schema_get_path(long jarg1);
  public final static native long _frida_g_settings_schema_get_key(long jarg1, String jarg2);
  public final static native int _frida_g_settings_schema_has_key(long jarg1, String jarg2);
  public final static native long _frida_g_settings_schema_list_keys(long jarg1);
  public final static native long _frida_g_settings_schema_list_children(long jarg1);
  public final static native long _frida_g_settings_schema_key_get_type();
  public final static native long _frida_g_settings_schema_key_ref(long jarg1);
  public final static native void _frida_g_settings_schema_key_unref(long jarg1);
  public final static native long _frida_g_settings_schema_key_get_value_type(long jarg1);
  public final static native long _frida_g_settings_schema_key_get_default_value(long jarg1);
  public final static native long _frida_g_settings_schema_key_get_range(long jarg1);
  public final static native int _frida_g_settings_schema_key_range_check(long jarg1, long jarg2);
  public final static native String _frida_g_settings_schema_key_get_name(long jarg1);
  public final static native String _frida_g_settings_schema_key_get_summary(long jarg1);
  public final static native String _frida_g_settings_schema_key_get_description(long jarg1);
  public final static native void _GSettingsClass_parent_class_set(long jarg1, _GSettingsClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSettingsClass_parent_class_get(long jarg1, _GSettingsClass jarg1_);
  public final static native void _GSettingsClass_writable_changed_set(long jarg1, _GSettingsClass jarg1_, long jarg2);
  public final static native long _GSettingsClass_writable_changed_get(long jarg1, _GSettingsClass jarg1_);
  public final static native void _GSettingsClass_changed_set(long jarg1, _GSettingsClass jarg1_, long jarg2);
  public final static native long _GSettingsClass_changed_get(long jarg1, _GSettingsClass jarg1_);
  public final static native void _GSettingsClass_writable_change_event_set(long jarg1, _GSettingsClass jarg1_, long jarg2);
  public final static native long _GSettingsClass_writable_change_event_get(long jarg1, _GSettingsClass jarg1_);
  public final static native void _GSettingsClass_change_event_set(long jarg1, _GSettingsClass jarg1_, long jarg2);
  public final static native long _GSettingsClass_change_event_get(long jarg1, _GSettingsClass jarg1_);
  public final static native void _GSettingsClass_padding_set(long jarg1, _GSettingsClass jarg1_, long jarg2);
  public final static native long _GSettingsClass_padding_get(long jarg1, _GSettingsClass jarg1_);
  public final static native long new__GSettingsClass();
  public final static native void delete__GSettingsClass(long jarg1);
  public final static native void _GSettings_parent_instance_set(long jarg1, _GSettings jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSettings_parent_instance_get(long jarg1, _GSettings jarg1_);
  public final static native void _GSettings_priv_set(long jarg1, _GSettings jarg1_, long jarg2);
  public final static native long _GSettings_priv_get(long jarg1, _GSettings jarg1_);
  public final static native long new__GSettings();
  public final static native void delete__GSettings(long jarg1);
  public final static native long _frida_g_settings_get_type();
  public final static native long _frida_g_settings_list_schemas();
  public final static native long _frida_g_settings_list_relocatable_schemas();
  public final static native long _frida_g_settings_new(String jarg1);
  public final static native long _frida_g_settings_new_with_path(String jarg1, String jarg2);
  public final static native long _frida_g_settings_new_with_backend(String jarg1, long jarg2);
  public final static native long _frida_g_settings_new_with_backend_and_path(String jarg1, long jarg2, String jarg3);
  public final static native long _frida_g_settings_new_full(long jarg1, long jarg2, String jarg3);
  public final static native long _frida_g_settings_list_children(long jarg1, _GSettings jarg1_);
  public final static native long _frida_g_settings_list_keys(long jarg1, _GSettings jarg1_);
  public final static native long _frida_g_settings_get_range(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_range_check(long jarg1, _GSettings jarg1_, String jarg2, long jarg3);
  public final static native int _frida_g_settings_set_value(long jarg1, _GSettings jarg1_, String jarg2, long jarg3);
  public final static native long _frida_g_settings_get_value(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native long _frida_g_settings_get_user_value(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native long _frida_g_settings_get_default_value(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set(long jarg1, _GSettings jarg1_, String jarg2, String jarg3);
  public final static native void _frida_g_settings_get(long jarg1, _GSettings jarg1_, String jarg2, String jarg3);
  public final static native void _frida_g_settings_reset(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_get_int(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_int(long jarg1, _GSettings jarg1_, String jarg2, int jarg3);
  public final static native int _frida_g_settings_get_int64(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_int64(long jarg1, _GSettings jarg1_, String jarg2, int jarg3);
  public final static native long _frida_g_settings_get_uint(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_uint(long jarg1, _GSettings jarg1_, String jarg2, long jarg3);
  public final static native long _frida_g_settings_get_uint64(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_uint64(long jarg1, _GSettings jarg1_, String jarg2, long jarg3);
  public final static native String _frida_g_settings_get_string(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_string(long jarg1, _GSettings jarg1_, String jarg2, String jarg3);
  public final static native int _frida_g_settings_get_boolean(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_boolean(long jarg1, _GSettings jarg1_, String jarg2, int jarg3);
  public final static native double _frida_g_settings_get_double(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_double(long jarg1, _GSettings jarg1_, String jarg2, double jarg3);
  public final static native long _frida_g_settings_get_strv(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_strv(long jarg1, _GSettings jarg1_, String jarg2, long jarg3);
  public final static native int _frida_g_settings_get_enum(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_enum(long jarg1, _GSettings jarg1_, String jarg2, int jarg3);
  public final static native long _frida_g_settings_get_flags(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_set_flags(long jarg1, _GSettings jarg1_, String jarg2, long jarg3);
  public final static native long _frida_g_settings_get_child(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native int _frida_g_settings_is_writable(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native void _frida_g_settings_delay(long jarg1, _GSettings jarg1_);
  public final static native void _frida_g_settings_apply(long jarg1, _GSettings jarg1_);
  public final static native void _frida_g_settings_revert(long jarg1, _GSettings jarg1_);
  public final static native int _frida_g_settings_get_has_unapplied(long jarg1, _GSettings jarg1_);
  public final static native void _frida_g_settings_sync();
  public final static native int G_SETTINGS_BIND_GET_get();
  public final static native int G_SETTINGS_BIND_SET_get();
  public final static native int G_SETTINGS_BIND_NO_SENSITIVITY_get();
  public final static native int G_SETTINGS_BIND_GET_NO_CHANGES_get();
  public final static native int G_SETTINGS_BIND_INVERT_BOOLEAN_get();
  public final static native void _frida_g_settings_bind(long jarg1, _GSettings jarg1_, String jarg2, long jarg3, String jarg4, int jarg5);
  public final static native void _frida_g_settings_bind_with_mapping(long jarg1, _GSettings jarg1_, String jarg2, long jarg3, String jarg4, int jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void _frida_g_settings_bind_writable(long jarg1, _GSettings jarg1_, String jarg2, long jarg3, String jarg4, int jarg5);
  public final static native void _frida_g_settings_unbind(long jarg1, String jarg2);
  public final static native long _frida_g_settings_create_action(long jarg1, _GSettings jarg1_, String jarg2);
  public final static native long _frida_g_settings_get_mapped(long jarg1, _GSettings jarg1_, String jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_simple_action_get_type();
  public final static native long _frida_g_simple_action_new(String jarg1, long jarg2);
  public final static native long _frida_g_simple_action_new_stateful(String jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_simple_action_set_enabled(long jarg1, int jarg2);
  public final static native void _frida_g_simple_action_set_state(long jarg1, long jarg2);
  public final static native void _frida_g_simple_action_set_state_hint(long jarg1, long jarg2);
  public final static native void _GSimpleActionGroup_parent_instance_set(long jarg1, _GSimpleActionGroup jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSimpleActionGroup_parent_instance_get(long jarg1, _GSimpleActionGroup jarg1_);
  public final static native void _GSimpleActionGroup_priv_set(long jarg1, _GSimpleActionGroup jarg1_, long jarg2);
  public final static native long _GSimpleActionGroup_priv_get(long jarg1, _GSimpleActionGroup jarg1_);
  public final static native long new__GSimpleActionGroup();
  public final static native void delete__GSimpleActionGroup(long jarg1);
  public final static native void _GSimpleActionGroupClass_parent_class_set(long jarg1, _GSimpleActionGroupClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSimpleActionGroupClass_parent_class_get(long jarg1, _GSimpleActionGroupClass jarg1_);
  public final static native void _GSimpleActionGroupClass_padding_set(long jarg1, _GSimpleActionGroupClass jarg1_, long jarg2);
  public final static native long _GSimpleActionGroupClass_padding_get(long jarg1, _GSimpleActionGroupClass jarg1_);
  public final static native long new__GSimpleActionGroupClass();
  public final static native void delete__GSimpleActionGroupClass(long jarg1);
  public final static native long _frida_g_simple_action_group_get_type();
  public final static native long _frida_g_simple_action_group_new();
  public final static native long _frida_g_simple_action_group_lookup(long jarg1, _GSimpleActionGroup jarg1_, String jarg2);
  public final static native void _frida_g_simple_action_group_insert(long jarg1, _GSimpleActionGroup jarg1_, long jarg2);
  public final static native void _frida_g_simple_action_group_remove(long jarg1, _GSimpleActionGroup jarg1_, String jarg2);
  public final static native void _frida_g_simple_action_group_add_entries(long jarg1, _GSimpleActionGroup jarg1_, long jarg2, _GActionEntry jarg2_, int jarg3, long jarg4);
  public final static native long _frida_g_simple_async_result_get_type();
  public final static native long _frida_g_simple_async_result_new(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_simple_async_result_new_error(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, String jarg6);
  public final static native long _frida_g_simple_async_result_new_from_error(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, _GError jarg4_);
  public final static native long _frida_g_simple_async_result_new_take_error(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, _GError jarg4_);
  public final static native void _frida_g_simple_async_result_set_op_res_gpointer(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_simple_async_result_get_op_res_gpointer(long jarg1);
  public final static native void _frida_g_simple_async_result_set_op_res_gssize(long jarg1, int jarg2);
  public final static native int _frida_g_simple_async_result_get_op_res_gssize(long jarg1);
  public final static native void _frida_g_simple_async_result_set_op_res_gboolean(long jarg1, int jarg2);
  public final static native int _frida_g_simple_async_result_get_op_res_gboolean(long jarg1);
  public final static native void _frida_g_simple_async_result_set_check_cancellable(long jarg1, long jarg2, _GCancellable jarg2_);
  public final static native long _frida_g_simple_async_result_get_source_tag(long jarg1);
  public final static native void _frida_g_simple_async_result_set_handle_cancellation(long jarg1, int jarg2);
  public final static native void _frida_g_simple_async_result_complete(long jarg1);
  public final static native void _frida_g_simple_async_result_complete_in_idle(long jarg1);
  public final static native void _frida_g_simple_async_result_run_in_thread(long jarg1, long jarg2, int jarg3, long jarg4, _GCancellable jarg4_);
  public final static native void _frida_g_simple_async_result_set_from_error(long jarg1, long jarg2, _GError jarg2_);
  public final static native void _frida_g_simple_async_result_take_error(long jarg1, long jarg2, _GError jarg2_);
  public final static native int _frida_g_simple_async_result_propagate_error(long jarg1, long jarg2);
  public final static native void _frida_g_simple_async_result_set_error(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native int _frida_g_simple_async_result_is_valid(long jarg1, long jarg2, _GObject jarg2_, long jarg3);
  public final static native void _frida_g_simple_async_report_error_in_idle(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, String jarg6);
  public final static native void _frida_g_simple_async_report_gerror_in_idle(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, _GError jarg4_);
  public final static native void _frida_g_simple_async_report_take_gerror_in_idle(long jarg1, _GObject jarg1_, long jarg2, long jarg3, long jarg4, _GError jarg4_);
  public final static native long _frida_g_simple_io_stream_get_type();
  public final static native long _frida_g_simple_io_stream_new(long jarg1, _GInputStream jarg1_, long jarg2, _GOutputStream jarg2_);
  public final static native long _frida_g_simple_permission_get_type();
  public final static native long _frida_g_simple_permission_new(int jarg1);
  public final static native void _GSocketClientClass_parent_class_set(long jarg1, _GSocketClientClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSocketClientClass_parent_class_get(long jarg1, _GSocketClientClass jarg1_);
  public final static native void _GSocketClientClass_event_set(long jarg1, _GSocketClientClass jarg1_, long jarg2);
  public final static native long _GSocketClientClass_event_get(long jarg1, _GSocketClientClass jarg1_);
  public final static native void _GSocketClientClass__g_reserved1_set(long jarg1, _GSocketClientClass jarg1_, long jarg2);
  public final static native long _GSocketClientClass__g_reserved1_get(long jarg1, _GSocketClientClass jarg1_);
  public final static native void _GSocketClientClass__g_reserved2_set(long jarg1, _GSocketClientClass jarg1_, long jarg2);
  public final static native long _GSocketClientClass__g_reserved2_get(long jarg1, _GSocketClientClass jarg1_);
  public final static native void _GSocketClientClass__g_reserved3_set(long jarg1, _GSocketClientClass jarg1_, long jarg2);
  public final static native long _GSocketClientClass__g_reserved3_get(long jarg1, _GSocketClientClass jarg1_);
  public final static native void _GSocketClientClass__g_reserved4_set(long jarg1, _GSocketClientClass jarg1_, long jarg2);
  public final static native long _GSocketClientClass__g_reserved4_get(long jarg1, _GSocketClientClass jarg1_);
  public final static native long new__GSocketClientClass();
  public final static native void delete__GSocketClientClass(long jarg1);
  public final static native void _GSocketClient_parent_instance_set(long jarg1, _GSocketClient jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSocketClient_parent_instance_get(long jarg1, _GSocketClient jarg1_);
  public final static native void _GSocketClient_priv_set(long jarg1, _GSocketClient jarg1_, long jarg2);
  public final static native long _GSocketClient_priv_get(long jarg1, _GSocketClient jarg1_);
  public final static native long new__GSocketClient();
  public final static native void delete__GSocketClient(long jarg1);
  public final static native long _frida_g_socket_client_get_type();
  public final static native long _frida_g_socket_client_new();
  public final static native int _frida_g_socket_client_get_family(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_family(long jarg1, _GSocketClient jarg1_, int jarg2);
  public final static native int _frida_g_socket_client_get_socket_type(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_socket_type(long jarg1, _GSocketClient jarg1_, int jarg2);
  public final static native int _frida_g_socket_client_get_protocol(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_protocol(long jarg1, _GSocketClient jarg1_, int jarg2);
  public final static native long _frida_g_socket_client_get_local_address(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_local_address(long jarg1, _GSocketClient jarg1_, long jarg2, _GSocketAddress jarg2_);
  public final static native long _frida_g_socket_client_get_timeout(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_timeout(long jarg1, _GSocketClient jarg1_, long jarg2);
  public final static native int _frida_g_socket_client_get_enable_proxy(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_enable_proxy(long jarg1, _GSocketClient jarg1_, int jarg2);
  public final static native int _frida_g_socket_client_get_tls(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_tls(long jarg1, _GSocketClient jarg1_, int jarg2);
  public final static native int _frida_g_socket_client_get_tls_validation_flags(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_tls_validation_flags(long jarg1, _GSocketClient jarg1_, int jarg2);
  public final static native long _frida_g_socket_client_get_proxy_resolver(long jarg1, _GSocketClient jarg1_);
  public final static native void _frida_g_socket_client_set_proxy_resolver(long jarg1, _GSocketClient jarg1_, long jarg2);
  public final static native long _frida_g_socket_client_connect(long jarg1, _GSocketClient jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native long _frida_g_socket_client_connect_to_host(long jarg1, _GSocketClient jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native long _frida_g_socket_client_connect_to_service(long jarg1, _GSocketClient jarg1_, String jarg2, String jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native long _frida_g_socket_client_connect_to_uri(long jarg1, _GSocketClient jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_socket_client_connect_async(long jarg1, _GSocketClient jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long _frida_g_socket_client_connect_finish(long jarg1, _GSocketClient jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_socket_client_connect_to_host_async(long jarg1, _GSocketClient jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_socket_client_connect_to_host_finish(long jarg1, _GSocketClient jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_socket_client_connect_to_service_async(long jarg1, _GSocketClient jarg1_, String jarg2, String jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_socket_client_connect_to_service_finish(long jarg1, _GSocketClient jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_socket_client_connect_to_uri_async(long jarg1, _GSocketClient jarg1_, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long _frida_g_socket_client_connect_to_uri_finish(long jarg1, _GSocketClient jarg1_, long jarg2, long jarg3);
  public final static native void _frida_g_socket_client_add_application_proxy(long jarg1, _GSocketClient jarg1_, String jarg2);
  public final static native void _GSocketConnectableIface_g_iface_set(long jarg1, _GSocketConnectableIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GSocketConnectableIface_g_iface_get(long jarg1, _GSocketConnectableIface jarg1_);
  public final static native void _GSocketConnectableIface_enumerate_set(long jarg1, _GSocketConnectableIface jarg1_, long jarg2);
  public final static native long _GSocketConnectableIface_enumerate_get(long jarg1, _GSocketConnectableIface jarg1_);
  public final static native void _GSocketConnectableIface_proxy_enumerate_set(long jarg1, _GSocketConnectableIface jarg1_, long jarg2);
  public final static native long _GSocketConnectableIface_proxy_enumerate_get(long jarg1, _GSocketConnectableIface jarg1_);
  public final static native void _GSocketConnectableIface_to_string_set(long jarg1, _GSocketConnectableIface jarg1_, long jarg2);
  public final static native long _GSocketConnectableIface_to_string_get(long jarg1, _GSocketConnectableIface jarg1_);
  public final static native long new__GSocketConnectableIface();
  public final static native void delete__GSocketConnectableIface(long jarg1);
  public final static native long _frida_g_socket_connectable_get_type();
  public final static native long _frida_g_socket_connectable_enumerate(long jarg1);
  public final static native long _frida_g_socket_connectable_proxy_enumerate(long jarg1);
  public final static native String _frida_g_socket_connectable_to_string(long jarg1);
  public final static native void _GSocketClass_parent_class_set(long jarg1, _GSocketClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSocketClass_parent_class_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved1_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved1_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved2_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved2_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved3_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved3_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved4_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved4_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved5_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved5_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved6_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved6_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved7_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved7_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved8_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved8_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved9_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved9_get(long jarg1, _GSocketClass jarg1_);
  public final static native void _GSocketClass__g_reserved10_set(long jarg1, _GSocketClass jarg1_, long jarg2);
  public final static native long _GSocketClass__g_reserved10_get(long jarg1, _GSocketClass jarg1_);
  public final static native long new__GSocketClass();
  public final static native void delete__GSocketClass(long jarg1);
  public final static native void _GSocket_parent_instance_set(long jarg1, _GSocket jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSocket_parent_instance_get(long jarg1, _GSocket jarg1_);
  public final static native void _GSocket_priv_set(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native long _GSocket_priv_get(long jarg1, _GSocket jarg1_);
  public final static native long new__GSocket();
  public final static native void delete__GSocket(long jarg1);
  public final static native long _frida_g_socket_get_type();
  public final static native long _frida_g_socket_new(int jarg1, int jarg2, int jarg3, long jarg4);
  public final static native long _frida_g_socket_new_from_fd(int jarg1, long jarg2);
  public final static native int _frida_g_socket_get_fd(long jarg1, _GSocket jarg1_);
  public final static native int _frida_g_socket_get_family(long jarg1, _GSocket jarg1_);
  public final static native int _frida_g_socket_get_socket_type(long jarg1, _GSocket jarg1_);
  public final static native int _frida_g_socket_get_protocol(long jarg1, _GSocket jarg1_);
  public final static native long _frida_g_socket_get_local_address(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native long _frida_g_socket_get_remote_address(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native void _frida_g_socket_set_blocking(long jarg1, _GSocket jarg1_, int jarg2);
  public final static native int _frida_g_socket_get_blocking(long jarg1, _GSocket jarg1_);
  public final static native void _frida_g_socket_set_keepalive(long jarg1, _GSocket jarg1_, int jarg2);
  public final static native int _frida_g_socket_get_keepalive(long jarg1, _GSocket jarg1_);
  public final static native int _frida_g_socket_get_listen_backlog(long jarg1, _GSocket jarg1_);
  public final static native void _frida_g_socket_set_listen_backlog(long jarg1, _GSocket jarg1_, int jarg2);
  public final static native long _frida_g_socket_get_timeout(long jarg1, _GSocket jarg1_);
  public final static native void _frida_g_socket_set_timeout(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native long _frida_g_socket_get_ttl(long jarg1, _GSocket jarg1_);
  public final static native void _frida_g_socket_set_ttl(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native int _frida_g_socket_get_broadcast(long jarg1, _GSocket jarg1_);
  public final static native void _frida_g_socket_set_broadcast(long jarg1, _GSocket jarg1_, int jarg2);
  public final static native int _frida_g_socket_get_multicast_loopback(long jarg1, _GSocket jarg1_);
  public final static native void _frida_g_socket_set_multicast_loopback(long jarg1, _GSocket jarg1_, int jarg2);
  public final static native long _frida_g_socket_get_multicast_ttl(long jarg1, _GSocket jarg1_);
  public final static native void _frida_g_socket_set_multicast_ttl(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native int _frida_g_socket_is_connected(long jarg1, _GSocket jarg1_);
  public final static native int _frida_g_socket_bind(long jarg1, _GSocket jarg1_, long jarg2, _GSocketAddress jarg2_, int jarg3, long jarg4);
  public final static native int _frida_g_socket_join_multicast_group(long jarg1, _GSocket jarg1_, long jarg2, _GInetAddress jarg2_, int jarg3, String jarg4, long jarg5);
  public final static native int _frida_g_socket_leave_multicast_group(long jarg1, _GSocket jarg1_, long jarg2, _GInetAddress jarg2_, int jarg3, String jarg4, long jarg5);
  public final static native int _frida_g_socket_join_multicast_group_ssm(long jarg1, _GSocket jarg1_, long jarg2, _GInetAddress jarg2_, long jarg3, _GInetAddress jarg3_, String jarg4, long jarg5);
  public final static native int _frida_g_socket_leave_multicast_group_ssm(long jarg1, _GSocket jarg1_, long jarg2, _GInetAddress jarg2_, long jarg3, _GInetAddress jarg3_, String jarg4, long jarg5);
  public final static native int _frida_g_socket_connect(long jarg1, _GSocket jarg1_, long jarg2, _GSocketAddress jarg2_, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_socket_check_connect_result(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native int _frida_g_socket_get_available_bytes(long jarg1, _GSocket jarg1_);
  public final static native int _frida_g_socket_condition_check(long jarg1, _GSocket jarg1_, int jarg2);
  public final static native int _frida_g_socket_condition_wait(long jarg1, _GSocket jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_socket_condition_timed_wait(long jarg1, _GSocket jarg1_, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native long _frida_g_socket_accept(long jarg1, _GSocket jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native int _frida_g_socket_listen(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native int _frida_g_socket_receive(long jarg1, _GSocket jarg1_, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_socket_receive_from(long jarg1, _GSocket jarg1_, long jarg2, String jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_socket_send(long jarg1, _GSocket jarg1_, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_socket_send_to(long jarg1, _GSocket jarg1_, long jarg2, _GSocketAddress jarg2_, String jarg3, long jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_socket_receive_message(long jarg1, _GSocket jarg1_, long jarg2, long jarg3, _GInputVector jarg3_, int jarg4, long jarg5, long jarg6, long jarg7, long jarg8, _GCancellable jarg8_, long jarg9);
  public final static native int _frida_g_socket_send_message(long jarg1, _GSocket jarg1_, long jarg2, _GSocketAddress jarg2_, long jarg3, _GOutputVector jarg3_, int jarg4, long jarg5, int jarg6, int jarg7, long jarg8, _GCancellable jarg8_, long jarg9);
  public final static native int _frida_g_socket_receive_messages(long jarg1, _GSocket jarg1_, long jarg2, _GInputMessage jarg2_, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_socket_send_messages(long jarg1, _GSocket jarg1_, long jarg2, _GOutputMessage jarg2_, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_socket_close(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native int _frida_g_socket_shutdown(long jarg1, _GSocket jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_socket_is_closed(long jarg1, _GSocket jarg1_);
  public final static native long _frida_g_socket_create_source(long jarg1, _GSocket jarg1_, int jarg2, long jarg3, _GCancellable jarg3_);
  public final static native int _frida_g_socket_speaks_ipv4(long jarg1, _GSocket jarg1_);
  public final static native long _frida_g_socket_get_credentials(long jarg1, _GSocket jarg1_, long jarg2);
  public final static native int _frida_g_socket_receive_with_blocking(long jarg1, _GSocket jarg1_, String jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_socket_send_with_blocking(long jarg1, _GSocket jarg1_, String jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native int _frida_g_socket_send_message_with_timeout(long jarg1, _GSocket jarg1_, long jarg2, _GSocketAddress jarg2_, long jarg3, _GOutputVector jarg3_, int jarg4, long jarg5, int jarg6, int jarg7, int jarg8, long jarg9, long jarg10, _GCancellable jarg10_, long jarg11);
  public final static native int _frida_g_socket_get_option(long jarg1, _GSocket jarg1_, int jarg2, int jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_socket_set_option(long jarg1, _GSocket jarg1_, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void _GSocketConnectionClass_parent_class_set(long jarg1, _GSocketConnectionClass jarg1_, long jarg2, _GIOStreamClass jarg2_);
  public final static native long _GSocketConnectionClass_parent_class_get(long jarg1, _GSocketConnectionClass jarg1_);
  public final static native void _GSocketConnectionClass__g_reserved1_set(long jarg1, _GSocketConnectionClass jarg1_, long jarg2);
  public final static native long _GSocketConnectionClass__g_reserved1_get(long jarg1, _GSocketConnectionClass jarg1_);
  public final static native void _GSocketConnectionClass__g_reserved2_set(long jarg1, _GSocketConnectionClass jarg1_, long jarg2);
  public final static native long _GSocketConnectionClass__g_reserved2_get(long jarg1, _GSocketConnectionClass jarg1_);
  public final static native void _GSocketConnectionClass__g_reserved3_set(long jarg1, _GSocketConnectionClass jarg1_, long jarg2);
  public final static native long _GSocketConnectionClass__g_reserved3_get(long jarg1, _GSocketConnectionClass jarg1_);
  public final static native void _GSocketConnectionClass__g_reserved4_set(long jarg1, _GSocketConnectionClass jarg1_, long jarg2);
  public final static native long _GSocketConnectionClass__g_reserved4_get(long jarg1, _GSocketConnectionClass jarg1_);
  public final static native void _GSocketConnectionClass__g_reserved5_set(long jarg1, _GSocketConnectionClass jarg1_, long jarg2);
  public final static native long _GSocketConnectionClass__g_reserved5_get(long jarg1, _GSocketConnectionClass jarg1_);
  public final static native void _GSocketConnectionClass__g_reserved6_set(long jarg1, _GSocketConnectionClass jarg1_, long jarg2);
  public final static native long _GSocketConnectionClass__g_reserved6_get(long jarg1, _GSocketConnectionClass jarg1_);
  public final static native long new__GSocketConnectionClass();
  public final static native void delete__GSocketConnectionClass(long jarg1);
  public final static native void _GSocketConnection_parent_instance_set(long jarg1, _GSocketConnection jarg1_, long jarg2, _GIOStream jarg2_);
  public final static native long _GSocketConnection_parent_instance_get(long jarg1, _GSocketConnection jarg1_);
  public final static native void _GSocketConnection_priv_set(long jarg1, _GSocketConnection jarg1_, long jarg2);
  public final static native long _GSocketConnection_priv_get(long jarg1, _GSocketConnection jarg1_);
  public final static native long new__GSocketConnection();
  public final static native void delete__GSocketConnection(long jarg1);
  public final static native long _frida_g_socket_connection_get_type();
  public final static native int _frida_g_socket_connection_is_connected(long jarg1, _GSocketConnection jarg1_);
  public final static native int _frida_g_socket_connection_connect(long jarg1, _GSocketConnection jarg1_, long jarg2, _GSocketAddress jarg2_, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_socket_connection_connect_async(long jarg1, _GSocketConnection jarg1_, long jarg2, _GSocketAddress jarg2_, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_socket_connection_connect_finish(long jarg1, _GSocketConnection jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_socket_connection_get_socket(long jarg1, _GSocketConnection jarg1_);
  public final static native long _frida_g_socket_connection_get_local_address(long jarg1, _GSocketConnection jarg1_, long jarg2);
  public final static native long _frida_g_socket_connection_get_remote_address(long jarg1, _GSocketConnection jarg1_, long jarg2);
  public final static native void _frida_g_socket_connection_factory_register_type(long jarg1, int jarg2, int jarg3, int jarg4);
  public final static native long _frida_g_socket_connection_factory_lookup_type(int jarg1, int jarg2, int jarg3);
  public final static native long _frida_g_socket_connection_factory_create_connection(long jarg1, _GSocket jarg1_);
  public final static native void _GSocketControlMessageClass_parent_class_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSocketControlMessageClass_parent_class_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass_get_size_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass_get_size_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass_get_level_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass_get_level_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass_get_type_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass_get_type_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass_serialize_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass_serialize_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass_deserialize_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass_deserialize_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass__g_reserved1_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass__g_reserved1_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass__g_reserved2_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass__g_reserved2_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass__g_reserved3_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass__g_reserved3_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass__g_reserved4_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass__g_reserved4_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native void _GSocketControlMessageClass__g_reserved5_set(long jarg1, _GSocketControlMessageClass jarg1_, long jarg2);
  public final static native long _GSocketControlMessageClass__g_reserved5_get(long jarg1, _GSocketControlMessageClass jarg1_);
  public final static native long new__GSocketControlMessageClass();
  public final static native void delete__GSocketControlMessageClass(long jarg1);
  public final static native void _GSocketControlMessage_parent_instance_set(long jarg1, _GSocketControlMessage jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSocketControlMessage_parent_instance_get(long jarg1, _GSocketControlMessage jarg1_);
  public final static native void _GSocketControlMessage_priv_set(long jarg1, _GSocketControlMessage jarg1_, long jarg2);
  public final static native long _GSocketControlMessage_priv_get(long jarg1, _GSocketControlMessage jarg1_);
  public final static native long new__GSocketControlMessage();
  public final static native void delete__GSocketControlMessage(long jarg1);
  public final static native long _frida_g_socket_control_message_get_type();
  public final static native long _frida_g_socket_control_message_get_size(long jarg1, _GSocketControlMessage jarg1_);
  public final static native int _frida_g_socket_control_message_get_level(long jarg1, _GSocketControlMessage jarg1_);
  public final static native int _frida_g_socket_control_message_get_msg_type(long jarg1, _GSocketControlMessage jarg1_);
  public final static native void _frida_g_socket_control_message_serialize(long jarg1, _GSocketControlMessage jarg1_, long jarg2);
  public final static native long _frida_g_socket_control_message_deserialize(int jarg1, int jarg2, long jarg3, long jarg4);
  public final static native void _GSocketListenerClass_parent_class_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSocketListenerClass_parent_class_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native void _GSocketListenerClass_changed_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2);
  public final static native long _GSocketListenerClass_changed_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native void _GSocketListenerClass_event_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2);
  public final static native long _GSocketListenerClass_event_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native void _GSocketListenerClass__g_reserved2_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2);
  public final static native long _GSocketListenerClass__g_reserved2_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native void _GSocketListenerClass__g_reserved3_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2);
  public final static native long _GSocketListenerClass__g_reserved3_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native void _GSocketListenerClass__g_reserved4_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2);
  public final static native long _GSocketListenerClass__g_reserved4_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native void _GSocketListenerClass__g_reserved5_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2);
  public final static native long _GSocketListenerClass__g_reserved5_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native void _GSocketListenerClass__g_reserved6_set(long jarg1, _GSocketListenerClass jarg1_, long jarg2);
  public final static native long _GSocketListenerClass__g_reserved6_get(long jarg1, _GSocketListenerClass jarg1_);
  public final static native long new__GSocketListenerClass();
  public final static native void delete__GSocketListenerClass(long jarg1);
  public final static native void _GSocketListener_parent_instance_set(long jarg1, _GSocketListener jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSocketListener_parent_instance_get(long jarg1, _GSocketListener jarg1_);
  public final static native void _GSocketListener_priv_set(long jarg1, _GSocketListener jarg1_, long jarg2);
  public final static native long _GSocketListener_priv_get(long jarg1, _GSocketListener jarg1_);
  public final static native long new__GSocketListener();
  public final static native void delete__GSocketListener(long jarg1);
  public final static native long _frida_g_socket_listener_get_type();
  public final static native long _frida_g_socket_listener_new();
  public final static native void _frida_g_socket_listener_set_backlog(long jarg1, _GSocketListener jarg1_, int jarg2);
  public final static native int _frida_g_socket_listener_add_socket(long jarg1, _GSocketListener jarg1_, long jarg2, _GSocket jarg2_, long jarg3, _GObject jarg3_, long jarg4);
  public final static native int _frida_g_socket_listener_add_address(long jarg1, _GSocketListener jarg1_, long jarg2, _GSocketAddress jarg2_, int jarg3, int jarg4, long jarg5, _GObject jarg5_, long jarg6, long jarg7);
  public final static native int _frida_g_socket_listener_add_inet_port(long jarg1, _GSocketListener jarg1_, int jarg2, long jarg3, _GObject jarg3_, long jarg4);
  public final static native int _frida_g_socket_listener_add_any_inet_port(long jarg1, _GSocketListener jarg1_, long jarg2, _GObject jarg2_, long jarg3);
  public final static native long _frida_g_socket_listener_accept_socket(long jarg1, _GSocketListener jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_socket_listener_accept_socket_async(long jarg1, _GSocketListener jarg1_, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long _frida_g_socket_listener_accept_socket_finish(long jarg1, _GSocketListener jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_socket_listener_accept(long jarg1, _GSocketListener jarg1_, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_socket_listener_accept_async(long jarg1, _GSocketListener jarg1_, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long _frida_g_socket_listener_accept_finish(long jarg1, _GSocketListener jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_socket_listener_close(long jarg1, _GSocketListener jarg1_);
  public final static native void _GSocketServiceClass_parent_class_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2, _GSocketListenerClass jarg2_);
  public final static native long _GSocketServiceClass_parent_class_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native void _GSocketServiceClass_incoming_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2);
  public final static native long _GSocketServiceClass_incoming_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native void _GSocketServiceClass__g_reserved1_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2);
  public final static native long _GSocketServiceClass__g_reserved1_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native void _GSocketServiceClass__g_reserved2_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2);
  public final static native long _GSocketServiceClass__g_reserved2_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native void _GSocketServiceClass__g_reserved3_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2);
  public final static native long _GSocketServiceClass__g_reserved3_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native void _GSocketServiceClass__g_reserved4_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2);
  public final static native long _GSocketServiceClass__g_reserved4_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native void _GSocketServiceClass__g_reserved5_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2);
  public final static native long _GSocketServiceClass__g_reserved5_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native void _GSocketServiceClass__g_reserved6_set(long jarg1, _GSocketServiceClass jarg1_, long jarg2);
  public final static native long _GSocketServiceClass__g_reserved6_get(long jarg1, _GSocketServiceClass jarg1_);
  public final static native long new__GSocketServiceClass();
  public final static native void delete__GSocketServiceClass(long jarg1);
  public final static native void _GSocketService_parent_instance_set(long jarg1, _GSocketService jarg1_, long jarg2, _GSocketListener jarg2_);
  public final static native long _GSocketService_parent_instance_get(long jarg1, _GSocketService jarg1_);
  public final static native void _GSocketService_priv_set(long jarg1, _GSocketService jarg1_, long jarg2);
  public final static native long _GSocketService_priv_get(long jarg1, _GSocketService jarg1_);
  public final static native long new__GSocketService();
  public final static native void delete__GSocketService(long jarg1);
  public final static native long _frida_g_socket_service_get_type();
  public final static native long _frida_g_socket_service_new();
  public final static native void _frida_g_socket_service_start(long jarg1, _GSocketService jarg1_);
  public final static native void _frida_g_socket_service_stop(long jarg1, _GSocketService jarg1_);
  public final static native int _frida_g_socket_service_is_active(long jarg1, _GSocketService jarg1_);
  public final static native long _frida_g_srv_target_get_type();
  public final static native long _frida_g_srv_target_new(String jarg1, int jarg2, int jarg3, int jarg4);
  public final static native long _frida_g_srv_target_copy(long jarg1);
  public final static native void _frida_g_srv_target_free(long jarg1);
  public final static native String _frida_g_srv_target_get_hostname(long jarg1);
  public final static native int _frida_g_srv_target_get_port(long jarg1);
  public final static native int _frida_g_srv_target_get_priority(long jarg1);
  public final static native int _frida_g_srv_target_get_weight(long jarg1);
  public final static native long _frida_g_srv_target_list_sort(long jarg1, _GList jarg1_);
  public final static native void _GSimpleProxyResolver_parent_instance_set(long jarg1, _GSimpleProxyResolver jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GSimpleProxyResolver_parent_instance_get(long jarg1, _GSimpleProxyResolver jarg1_);
  public final static native void _GSimpleProxyResolver_priv_set(long jarg1, _GSimpleProxyResolver jarg1_, long jarg2);
  public final static native long _GSimpleProxyResolver_priv_get(long jarg1, _GSimpleProxyResolver jarg1_);
  public final static native long new__GSimpleProxyResolver();
  public final static native void delete__GSimpleProxyResolver(long jarg1);
  public final static native void _GSimpleProxyResolverClass_parent_class_set(long jarg1, _GSimpleProxyResolverClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GSimpleProxyResolverClass_parent_class_get(long jarg1, _GSimpleProxyResolverClass jarg1_);
  public final static native void _GSimpleProxyResolverClass__g_reserved1_set(long jarg1, _GSimpleProxyResolverClass jarg1_, long jarg2);
  public final static native long _GSimpleProxyResolverClass__g_reserved1_get(long jarg1, _GSimpleProxyResolverClass jarg1_);
  public final static native void _GSimpleProxyResolverClass__g_reserved2_set(long jarg1, _GSimpleProxyResolverClass jarg1_, long jarg2);
  public final static native long _GSimpleProxyResolverClass__g_reserved2_get(long jarg1, _GSimpleProxyResolverClass jarg1_);
  public final static native void _GSimpleProxyResolverClass__g_reserved3_set(long jarg1, _GSimpleProxyResolverClass jarg1_, long jarg2);
  public final static native long _GSimpleProxyResolverClass__g_reserved3_get(long jarg1, _GSimpleProxyResolverClass jarg1_);
  public final static native void _GSimpleProxyResolverClass__g_reserved4_set(long jarg1, _GSimpleProxyResolverClass jarg1_, long jarg2);
  public final static native long _GSimpleProxyResolverClass__g_reserved4_get(long jarg1, _GSimpleProxyResolverClass jarg1_);
  public final static native void _GSimpleProxyResolverClass__g_reserved5_set(long jarg1, _GSimpleProxyResolverClass jarg1_, long jarg2);
  public final static native long _GSimpleProxyResolverClass__g_reserved5_get(long jarg1, _GSimpleProxyResolverClass jarg1_);
  public final static native long new__GSimpleProxyResolverClass();
  public final static native void delete__GSimpleProxyResolverClass(long jarg1);
  public final static native long _frida_g_simple_proxy_resolver_get_type();
  public final static native long _frida_g_simple_proxy_resolver_new(String jarg1, long jarg2);
  public final static native void _frida_g_simple_proxy_resolver_set_default_proxy(long jarg1, _GSimpleProxyResolver jarg1_, String jarg2);
  public final static native void _frida_g_simple_proxy_resolver_set_ignore_hosts(long jarg1, _GSimpleProxyResolver jarg1_, long jarg2);
  public final static native void _frida_g_simple_proxy_resolver_set_uri_proxy(long jarg1, _GSimpleProxyResolver jarg1_, String jarg2, String jarg3);
  public final static native long _frida_g_task_get_type();
  public final static native long _frida_g_task_new(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void _frida_g_task_report_error(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, _GError jarg5_);
  public final static native void _frida_g_task_report_new_error(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, String jarg7);
  public final static native void _frida_g_task_set_task_data(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_task_set_priority(long jarg1, int jarg2);
  public final static native void _frida_g_task_set_check_cancellable(long jarg1, int jarg2);
  public final static native void _frida_g_task_set_source_tag(long jarg1, long jarg2);
  public final static native void _frida_g_task_set_name(long jarg1, String jarg2);
  public final static native long _frida_g_task_get_source_object(long jarg1);
  public final static native long _frida_g_task_get_task_data(long jarg1);
  public final static native int _frida_g_task_get_priority(long jarg1);
  public final static native long _frida_g_task_get_context(long jarg1);
  public final static native long _frida_g_task_get_cancellable(long jarg1);
  public final static native int _frida_g_task_get_check_cancellable(long jarg1);
  public final static native long _frida_g_task_get_source_tag(long jarg1);
  public final static native String _frida_g_task_get_name(long jarg1);
  public final static native int _frida_g_task_is_valid(long jarg1, long jarg2);
  public final static native void _frida_g_task_run_in_thread(long jarg1, long jarg2);
  public final static native void _frida_g_task_run_in_thread_sync(long jarg1, long jarg2);
  public final static native int _frida_g_task_set_return_on_cancel(long jarg1, int jarg2);
  public final static native int _frida_g_task_get_return_on_cancel(long jarg1);
  public final static native void _frida_g_task_attach_source(long jarg1, long jarg2, _GSource jarg2_, long jarg3);
  public final static native void _frida_g_task_return_pointer(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_task_return_boolean(long jarg1, int jarg2);
  public final static native void _frida_g_task_return_int(long jarg1, int jarg2);
  public final static native void _frida_g_task_return_error(long jarg1, long jarg2, _GError jarg2_);
  public final static native void _frida_g_task_return_new_error(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native int _frida_g_task_return_error_if_cancelled(long jarg1);
  public final static native long _frida_g_task_propagate_pointer(long jarg1, long jarg2);
  public final static native int _frida_g_task_propagate_boolean(long jarg1, long jarg2);
  public final static native int _frida_g_task_propagate_int(long jarg1, long jarg2);
  public final static native int _frida_g_task_had_error(long jarg1);
  public final static native int _frida_g_task_get_completed(long jarg1);
  public final static native long _frida_g_subprocess_get_type();
  public final static native long _frida_g_subprocess_new(int jarg1, long jarg2, String jarg3);
  public final static native long _frida_g_subprocess_newv(long jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_subprocess_get_stdin_pipe(long jarg1);
  public final static native long _frida_g_subprocess_get_stdout_pipe(long jarg1);
  public final static native long _frida_g_subprocess_get_stderr_pipe(long jarg1);
  public final static native String _frida_g_subprocess_get_identifier(long jarg1);
  public final static native void _frida_g_subprocess_send_signal(long jarg1, int jarg2);
  public final static native void _frida_g_subprocess_force_exit(long jarg1);
  public final static native int _frida_g_subprocess_wait(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_subprocess_wait_async(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_subprocess_wait_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_subprocess_wait_check(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_subprocess_wait_check_async(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native int _frida_g_subprocess_wait_check_finish(long jarg1, long jarg2, long jarg3);
  public final static native int _frida_g_subprocess_get_status(long jarg1);
  public final static native int _frida_g_subprocess_get_successful(long jarg1);
  public final static native int _frida_g_subprocess_get_if_exited(long jarg1);
  public final static native int _frida_g_subprocess_get_exit_status(long jarg1);
  public final static native int _frida_g_subprocess_get_if_signaled(long jarg1);
  public final static native int _frida_g_subprocess_get_term_sig(long jarg1);
  public final static native int _frida_g_subprocess_communicate(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_subprocess_communicate_async(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_subprocess_communicate_finish(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int _frida_g_subprocess_communicate_utf8(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5, long jarg6);
  public final static native void _frida_g_subprocess_communicate_utf8_async(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_subprocess_communicate_utf8_finish(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long _frida_g_subprocess_launcher_get_type();
  public final static native long _frida_g_subprocess_launcher_new(int jarg1);
  public final static native long _frida_g_subprocess_launcher_spawn(long jarg1, long jarg2, String jarg3);
  public final static native long _frida_g_subprocess_launcher_spawnv(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_subprocess_launcher_set_environ(long jarg1, long jarg2);
  public final static native void _frida_g_subprocess_launcher_setenv(long jarg1, String jarg2, String jarg3, int jarg4);
  public final static native void _frida_g_subprocess_launcher_unsetenv(long jarg1, String jarg2);
  public final static native String _frida_g_subprocess_launcher_getenv(long jarg1, String jarg2);
  public final static native void _frida_g_subprocess_launcher_set_cwd(long jarg1, String jarg2);
  public final static native void _frida_g_subprocess_launcher_set_flags(long jarg1, int jarg2);
  public final static native void _frida_g_subprocess_launcher_set_stdin_file_path(long jarg1, String jarg2);
  public final static native void _frida_g_subprocess_launcher_take_stdin_fd(long jarg1, int jarg2);
  public final static native void _frida_g_subprocess_launcher_set_stdout_file_path(long jarg1, String jarg2);
  public final static native void _frida_g_subprocess_launcher_take_stdout_fd(long jarg1, int jarg2);
  public final static native void _frida_g_subprocess_launcher_set_stderr_file_path(long jarg1, String jarg2);
  public final static native void _frida_g_subprocess_launcher_take_stderr_fd(long jarg1, int jarg2);
  public final static native void _frida_g_subprocess_launcher_take_fd(long jarg1, int jarg2, int jarg3);
  public final static native void _frida_g_subprocess_launcher_set_child_setup(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _GTcpConnectionClass_parent_class_set(long jarg1, _GTcpConnectionClass jarg1_, long jarg2, _GSocketConnectionClass jarg2_);
  public final static native long _GTcpConnectionClass_parent_class_get(long jarg1, _GTcpConnectionClass jarg1_);
  public final static native long new__GTcpConnectionClass();
  public final static native void delete__GTcpConnectionClass(long jarg1);
  public final static native void _GTcpConnection_parent_instance_set(long jarg1, _GTcpConnection jarg1_, long jarg2, _GSocketConnection jarg2_);
  public final static native long _GTcpConnection_parent_instance_get(long jarg1, _GTcpConnection jarg1_);
  public final static native void _GTcpConnection_priv_set(long jarg1, _GTcpConnection jarg1_, long jarg2);
  public final static native long _GTcpConnection_priv_get(long jarg1, _GTcpConnection jarg1_);
  public final static native long new__GTcpConnection();
  public final static native void delete__GTcpConnection(long jarg1);
  public final static native long _frida_g_tcp_connection_get_type();
  public final static native void _frida_g_tcp_connection_set_graceful_disconnect(long jarg1, _GTcpConnection jarg1_, int jarg2);
  public final static native int _frida_g_tcp_connection_get_graceful_disconnect(long jarg1, _GTcpConnection jarg1_);
  public final static native void _GTcpWrapperConnectionClass_parent_class_set(long jarg1, _GTcpWrapperConnectionClass jarg1_, long jarg2, _GTcpConnectionClass jarg2_);
  public final static native long _GTcpWrapperConnectionClass_parent_class_get(long jarg1, _GTcpWrapperConnectionClass jarg1_);
  public final static native long new__GTcpWrapperConnectionClass();
  public final static native void delete__GTcpWrapperConnectionClass(long jarg1);
  public final static native void _GTcpWrapperConnection_parent_instance_set(long jarg1, _GTcpWrapperConnection jarg1_, long jarg2, _GTcpConnection jarg2_);
  public final static native long _GTcpWrapperConnection_parent_instance_get(long jarg1, _GTcpWrapperConnection jarg1_);
  public final static native void _GTcpWrapperConnection_priv_set(long jarg1, _GTcpWrapperConnection jarg1_, long jarg2);
  public final static native long _GTcpWrapperConnection_priv_get(long jarg1, _GTcpWrapperConnection jarg1_);
  public final static native long new__GTcpWrapperConnection();
  public final static native void delete__GTcpWrapperConnection(long jarg1);
  public final static native long _frida_g_tcp_wrapper_connection_get_type();
  public final static native long _frida_g_tcp_wrapper_connection_new(long jarg1, _GIOStream jarg1_, long jarg2, _GSocket jarg2_);
  public final static native long _frida_g_tcp_wrapper_connection_get_base_io_stream(long jarg1, _GTcpWrapperConnection jarg1_);
  public final static native long _frida_g_test_dbus_get_type();
  public final static native long _frida_g_test_dbus_new(int jarg1);
  public final static native int _frida_g_test_dbus_get_flags(long jarg1);
  public final static native String _frida_g_test_dbus_get_bus_address(long jarg1);
  public final static native void _frida_g_test_dbus_add_service_dir(long jarg1, String jarg2);
  public final static native void _frida_g_test_dbus_up(long jarg1);
  public final static native void _frida_g_test_dbus_stop(long jarg1);
  public final static native void _frida_g_test_dbus_down(long jarg1);
  public final static native void _frida_g_test_dbus_unset();
  public final static native long _frida_g_themed_icon_get_type();
  public final static native long _frida_g_themed_icon_new(String jarg1);
  public final static native long _frida_g_themed_icon_new_with_default_fallbacks(String jarg1);
  public final static native long _frida_g_themed_icon_new_from_names(long jarg1, int jarg2);
  public final static native void _frida_g_themed_icon_prepend_name(long jarg1, String jarg2);
  public final static native void _frida_g_themed_icon_append_name(long jarg1, String jarg2);
  public final static native long _frida_g_themed_icon_get_names(long jarg1);
  public final static native void _GThreadedSocketServiceClass_parent_class_set(long jarg1, _GThreadedSocketServiceClass jarg1_, long jarg2, _GSocketServiceClass jarg2_);
  public final static native long _GThreadedSocketServiceClass_parent_class_get(long jarg1, _GThreadedSocketServiceClass jarg1_);
  public final static native void _GThreadedSocketServiceClass_run_set(long jarg1, _GThreadedSocketServiceClass jarg1_, long jarg2);
  public final static native long _GThreadedSocketServiceClass_run_get(long jarg1, _GThreadedSocketServiceClass jarg1_);
  public final static native void _GThreadedSocketServiceClass__g_reserved1_set(long jarg1, _GThreadedSocketServiceClass jarg1_, long jarg2);
  public final static native long _GThreadedSocketServiceClass__g_reserved1_get(long jarg1, _GThreadedSocketServiceClass jarg1_);
  public final static native void _GThreadedSocketServiceClass__g_reserved2_set(long jarg1, _GThreadedSocketServiceClass jarg1_, long jarg2);
  public final static native long _GThreadedSocketServiceClass__g_reserved2_get(long jarg1, _GThreadedSocketServiceClass jarg1_);
  public final static native void _GThreadedSocketServiceClass__g_reserved3_set(long jarg1, _GThreadedSocketServiceClass jarg1_, long jarg2);
  public final static native long _GThreadedSocketServiceClass__g_reserved3_get(long jarg1, _GThreadedSocketServiceClass jarg1_);
  public final static native void _GThreadedSocketServiceClass__g_reserved4_set(long jarg1, _GThreadedSocketServiceClass jarg1_, long jarg2);
  public final static native long _GThreadedSocketServiceClass__g_reserved4_get(long jarg1, _GThreadedSocketServiceClass jarg1_);
  public final static native void _GThreadedSocketServiceClass__g_reserved5_set(long jarg1, _GThreadedSocketServiceClass jarg1_, long jarg2);
  public final static native long _GThreadedSocketServiceClass__g_reserved5_get(long jarg1, _GThreadedSocketServiceClass jarg1_);
  public final static native long new__GThreadedSocketServiceClass();
  public final static native void delete__GThreadedSocketServiceClass(long jarg1);
  public final static native void _GThreadedSocketService_parent_instance_set(long jarg1, _GThreadedSocketService jarg1_, long jarg2, _GSocketService jarg2_);
  public final static native long _GThreadedSocketService_parent_instance_get(long jarg1, _GThreadedSocketService jarg1_);
  public final static native void _GThreadedSocketService_priv_set(long jarg1, _GThreadedSocketService jarg1_, long jarg2);
  public final static native long _GThreadedSocketService_priv_get(long jarg1, _GThreadedSocketService jarg1_);
  public final static native long new__GThreadedSocketService();
  public final static native void delete__GThreadedSocketService(long jarg1);
  public final static native long _frida_g_threaded_socket_service_get_type();
  public final static native long _frida_g_threaded_socket_service_new(int jarg1);
  public final static native String G_TLS_BACKEND_EXTENSION_POINT_NAME_get();
  public final static native void _GTlsBackendInterface_g_iface_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GTlsBackendInterface_g_iface_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_supports_tls_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_supports_tls_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_get_certificate_type_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_get_certificate_type_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_get_client_connection_type_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_get_client_connection_type_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_get_server_connection_type_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_get_server_connection_type_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_get_file_database_type_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_get_file_database_type_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_get_default_database_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_get_default_database_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_supports_dtls_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_supports_dtls_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_get_dtls_client_connection_type_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_get_dtls_client_connection_type_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native void _GTlsBackendInterface_get_dtls_server_connection_type_set(long jarg1, _GTlsBackendInterface jarg1_, long jarg2);
  public final static native long _GTlsBackendInterface_get_dtls_server_connection_type_get(long jarg1, _GTlsBackendInterface jarg1_);
  public final static native long new__GTlsBackendInterface();
  public final static native void delete__GTlsBackendInterface(long jarg1);
  public final static native long _frida_g_tls_backend_get_type();
  public final static native long _frida_g_tls_backend_get_default();
  public final static native long _frida_g_tls_backend_get_default_database(long jarg1);
  public final static native void _frida_g_tls_backend_set_default_database(long jarg1, long jarg2, _GTlsDatabase jarg2_);
  public final static native int _frida_g_tls_backend_supports_tls(long jarg1);
  public final static native int _frida_g_tls_backend_supports_dtls(long jarg1);
  public final static native long _frida_g_tls_backend_get_certificate_type(long jarg1);
  public final static native long _frida_g_tls_backend_get_client_connection_type(long jarg1);
  public final static native long _frida_g_tls_backend_get_server_connection_type(long jarg1);
  public final static native long _frida_g_tls_backend_get_file_database_type(long jarg1);
  public final static native long _frida_g_tls_backend_get_dtls_client_connection_type(long jarg1);
  public final static native long _frida_g_tls_backend_get_dtls_server_connection_type(long jarg1);
  public final static native void _GTlsCertificate_parent_instance_set(long jarg1, _GTlsCertificate jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GTlsCertificate_parent_instance_get(long jarg1, _GTlsCertificate jarg1_);
  public final static native void _GTlsCertificate_priv_set(long jarg1, _GTlsCertificate jarg1_, long jarg2);
  public final static native long _GTlsCertificate_priv_get(long jarg1, _GTlsCertificate jarg1_);
  public final static native long new__GTlsCertificate();
  public final static native void delete__GTlsCertificate(long jarg1);
  public final static native void _GTlsCertificateClass_parent_class_set(long jarg1, _GTlsCertificateClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GTlsCertificateClass_parent_class_get(long jarg1, _GTlsCertificateClass jarg1_);
  public final static native void _GTlsCertificateClass_verify_set(long jarg1, _GTlsCertificateClass jarg1_, long jarg2);
  public final static native long _GTlsCertificateClass_verify_get(long jarg1, _GTlsCertificateClass jarg1_);
  public final static native void _GTlsCertificateClass_padding_set(long jarg1, _GTlsCertificateClass jarg1_, long jarg2);
  public final static native long _GTlsCertificateClass_padding_get(long jarg1, _GTlsCertificateClass jarg1_);
  public final static native long new__GTlsCertificateClass();
  public final static native void delete__GTlsCertificateClass(long jarg1);
  public final static native long _frida_g_tls_certificate_get_type();
  public final static native long _frida_g_tls_certificate_new_from_pem(String jarg1, int jarg2, long jarg3);
  public final static native long _frida_g_tls_certificate_new_from_file(String jarg1, long jarg2);
  public final static native long _frida_g_tls_certificate_new_from_files(String jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_tls_certificate_list_new_from_file(String jarg1, long jarg2);
  public final static native long _frida_g_tls_certificate_get_issuer(long jarg1, _GTlsCertificate jarg1_);
  public final static native int _frida_g_tls_certificate_verify(long jarg1, _GTlsCertificate jarg1_, long jarg2, long jarg3, _GTlsCertificate jarg3_);
  public final static native int _frida_g_tls_certificate_is_same(long jarg1, _GTlsCertificate jarg1_, long jarg2, _GTlsCertificate jarg2_);
  public final static native void _GTlsConnection_parent_instance_set(long jarg1, _GTlsConnection jarg1_, long jarg2, _GIOStream jarg2_);
  public final static native long _GTlsConnection_parent_instance_get(long jarg1, _GTlsConnection jarg1_);
  public final static native void _GTlsConnection_priv_set(long jarg1, _GTlsConnection jarg1_, long jarg2);
  public final static native long _GTlsConnection_priv_get(long jarg1, _GTlsConnection jarg1_);
  public final static native long new__GTlsConnection();
  public final static native void delete__GTlsConnection(long jarg1);
  public final static native void _GTlsConnectionClass_parent_class_set(long jarg1, _GTlsConnectionClass jarg1_, long jarg2, _GIOStreamClass jarg2_);
  public final static native long _GTlsConnectionClass_parent_class_get(long jarg1, _GTlsConnectionClass jarg1_);
  public final static native void _GTlsConnectionClass_accept_certificate_set(long jarg1, _GTlsConnectionClass jarg1_, long jarg2);
  public final static native long _GTlsConnectionClass_accept_certificate_get(long jarg1, _GTlsConnectionClass jarg1_);
  public final static native void _GTlsConnectionClass_handshake_set(long jarg1, _GTlsConnectionClass jarg1_, long jarg2);
  public final static native long _GTlsConnectionClass_handshake_get(long jarg1, _GTlsConnectionClass jarg1_);
  public final static native void _GTlsConnectionClass_handshake_async_set(long jarg1, _GTlsConnectionClass jarg1_, long jarg2);
  public final static native long _GTlsConnectionClass_handshake_async_get(long jarg1, _GTlsConnectionClass jarg1_);
  public final static native void _GTlsConnectionClass_handshake_finish_set(long jarg1, _GTlsConnectionClass jarg1_, long jarg2);
  public final static native long _GTlsConnectionClass_handshake_finish_get(long jarg1, _GTlsConnectionClass jarg1_);
  public final static native void _GTlsConnectionClass_padding_set(long jarg1, _GTlsConnectionClass jarg1_, long jarg2);
  public final static native long _GTlsConnectionClass_padding_get(long jarg1, _GTlsConnectionClass jarg1_);
  public final static native long new__GTlsConnectionClass();
  public final static native void delete__GTlsConnectionClass(long jarg1);
  public final static native long _frida_g_tls_connection_get_type();
  public final static native void _frida_g_tls_connection_set_use_system_certdb(long jarg1, _GTlsConnection jarg1_, int jarg2);
  public final static native int _frida_g_tls_connection_get_use_system_certdb(long jarg1, _GTlsConnection jarg1_);
  public final static native void _frida_g_tls_connection_set_database(long jarg1, _GTlsConnection jarg1_, long jarg2, _GTlsDatabase jarg2_);
  public final static native long _frida_g_tls_connection_get_database(long jarg1, _GTlsConnection jarg1_);
  public final static native void _frida_g_tls_connection_set_certificate(long jarg1, _GTlsConnection jarg1_, long jarg2, _GTlsCertificate jarg2_);
  public final static native long _frida_g_tls_connection_get_certificate(long jarg1, _GTlsConnection jarg1_);
  public final static native void _frida_g_tls_connection_set_interaction(long jarg1, _GTlsConnection jarg1_, long jarg2, _GTlsInteraction jarg2_);
  public final static native long _frida_g_tls_connection_get_interaction(long jarg1, _GTlsConnection jarg1_);
  public final static native long _frida_g_tls_connection_get_peer_certificate(long jarg1, _GTlsConnection jarg1_);
  public final static native int _frida_g_tls_connection_get_peer_certificate_errors(long jarg1, _GTlsConnection jarg1_);
  public final static native void _frida_g_tls_connection_set_require_close_notify(long jarg1, _GTlsConnection jarg1_, int jarg2);
  public final static native int _frida_g_tls_connection_get_require_close_notify(long jarg1, _GTlsConnection jarg1_);
  public final static native void _frida_g_tls_connection_set_rehandshake_mode(long jarg1, _GTlsConnection jarg1_, int jarg2);
  public final static native int _frida_g_tls_connection_get_rehandshake_mode(long jarg1, _GTlsConnection jarg1_);
  public final static native void _frida_g_tls_connection_set_advertised_protocols(long jarg1, _GTlsConnection jarg1_, long jarg2);
  public final static native String _frida_g_tls_connection_get_negotiated_protocol(long jarg1, _GTlsConnection jarg1_);
  public final static native int _frida_g_tls_connection_handshake(long jarg1, _GTlsConnection jarg1_, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void _frida_g_tls_connection_handshake_async(long jarg1, _GTlsConnection jarg1_, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_tls_connection_handshake_finish(long jarg1, _GTlsConnection jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_tls_error_quark();
  public final static native int _frida_g_tls_connection_emit_accept_certificate(long jarg1, _GTlsConnection jarg1_, long jarg2, _GTlsCertificate jarg2_, int jarg3);
  public final static native void _GTlsClientConnectionInterface_g_iface_set(long jarg1, _GTlsClientConnectionInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GTlsClientConnectionInterface_g_iface_get(long jarg1, _GTlsClientConnectionInterface jarg1_);
  public final static native void _GTlsClientConnectionInterface_copy_session_state_set(long jarg1, _GTlsClientConnectionInterface jarg1_, long jarg2);
  public final static native long _GTlsClientConnectionInterface_copy_session_state_get(long jarg1, _GTlsClientConnectionInterface jarg1_);
  public final static native long new__GTlsClientConnectionInterface();
  public final static native void delete__GTlsClientConnectionInterface(long jarg1);
  public final static native long _frida_g_tls_client_connection_get_type();
  public final static native long _frida_g_tls_client_connection_new(long jarg1, _GIOStream jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_tls_client_connection_get_validation_flags(long jarg1);
  public final static native void _frida_g_tls_client_connection_set_validation_flags(long jarg1, int jarg2);
  public final static native long _frida_g_tls_client_connection_get_server_identity(long jarg1);
  public final static native void _frida_g_tls_client_connection_set_server_identity(long jarg1, long jarg2);
  public final static native int _frida_g_tls_client_connection_get_use_ssl3(long jarg1);
  public final static native void _frida_g_tls_client_connection_set_use_ssl3(long jarg1, int jarg2);
  public final static native long _frida_g_tls_client_connection_get_accepted_cas(long jarg1);
  public final static native void _frida_g_tls_client_connection_copy_session_state(long jarg1, long jarg2);
  public final static native String G_TLS_DATABASE_PURPOSE_AUTHENTICATE_SERVER_get();
  public final static native String G_TLS_DATABASE_PURPOSE_AUTHENTICATE_CLIENT_get();
  public final static native void _GTlsDatabase_parent_instance_set(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GTlsDatabase_parent_instance_get(long jarg1, _GTlsDatabase jarg1_);
  public final static native void _GTlsDatabase_priv_set(long jarg1, _GTlsDatabase jarg1_, long jarg2);
  public final static native long _GTlsDatabase_priv_get(long jarg1, _GTlsDatabase jarg1_);
  public final static native long new__GTlsDatabase();
  public final static native void delete__GTlsDatabase(long jarg1);
  public final static native void _GTlsDatabaseClass_parent_class_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GTlsDatabaseClass_parent_class_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_verify_chain_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_verify_chain_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_verify_chain_async_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_verify_chain_async_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_verify_chain_finish_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_verify_chain_finish_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_create_certificate_handle_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_create_certificate_handle_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificate_for_handle_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificate_for_handle_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificate_for_handle_async_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificate_for_handle_async_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificate_for_handle_finish_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificate_for_handle_finish_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificate_issuer_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificate_issuer_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificate_issuer_async_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificate_issuer_async_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificate_issuer_finish_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificate_issuer_finish_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificates_issued_by_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificates_issued_by_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificates_issued_by_async_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificates_issued_by_async_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_lookup_certificates_issued_by_finish_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_lookup_certificates_issued_by_finish_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native void _GTlsDatabaseClass_padding_set(long jarg1, _GTlsDatabaseClass jarg1_, long jarg2);
  public final static native long _GTlsDatabaseClass_padding_get(long jarg1, _GTlsDatabaseClass jarg1_);
  public final static native long new__GTlsDatabaseClass();
  public final static native void delete__GTlsDatabaseClass(long jarg1);
  public final static native long _frida_g_tls_database_get_type();
  public final static native int _frida_g_tls_database_verify_chain(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GTlsCertificate jarg2_, String jarg3, long jarg4, long jarg5, _GTlsInteraction jarg5_, int jarg6, long jarg7, _GCancellable jarg7_, long jarg8);
  public final static native void _frida_g_tls_database_verify_chain_async(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GTlsCertificate jarg2_, String jarg3, long jarg4, long jarg5, _GTlsInteraction jarg5_, int jarg6, long jarg7, _GCancellable jarg7_, long jarg8, long jarg9);
  public final static native int _frida_g_tls_database_verify_chain_finish(long jarg1, _GTlsDatabase jarg1_, long jarg2, long jarg3);
  public final static native String _frida_g_tls_database_create_certificate_handle(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GTlsCertificate jarg2_);
  public final static native long _frida_g_tls_database_lookup_certificate_for_handle(long jarg1, _GTlsDatabase jarg1_, String jarg2, long jarg3, _GTlsInteraction jarg3_, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_tls_database_lookup_certificate_for_handle_async(long jarg1, _GTlsDatabase jarg1_, String jarg2, long jarg3, _GTlsInteraction jarg3_, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_tls_database_lookup_certificate_for_handle_finish(long jarg1, _GTlsDatabase jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_tls_database_lookup_certificate_issuer(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GTlsCertificate jarg2_, long jarg3, _GTlsInteraction jarg3_, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_tls_database_lookup_certificate_issuer_async(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GTlsCertificate jarg2_, long jarg3, _GTlsInteraction jarg3_, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_tls_database_lookup_certificate_issuer_finish(long jarg1, _GTlsDatabase jarg1_, long jarg2, long jarg3);
  public final static native long _frida_g_tls_database_lookup_certificates_issued_by(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GByteArray jarg2_, long jarg3, _GTlsInteraction jarg3_, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void _frida_g_tls_database_lookup_certificates_issued_by_async(long jarg1, _GTlsDatabase jarg1_, long jarg2, _GByteArray jarg2_, long jarg3, _GTlsInteraction jarg3_, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long _frida_g_tls_database_lookup_certificates_issued_by_finish(long jarg1, _GTlsDatabase jarg1_, long jarg2, long jarg3);
  public final static native void _GTlsFileDatabaseInterface_g_iface_set(long jarg1, _GTlsFileDatabaseInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GTlsFileDatabaseInterface_g_iface_get(long jarg1, _GTlsFileDatabaseInterface jarg1_);
  public final static native void _GTlsFileDatabaseInterface_padding_set(long jarg1, _GTlsFileDatabaseInterface jarg1_, long jarg2);
  public final static native long _GTlsFileDatabaseInterface_padding_get(long jarg1, _GTlsFileDatabaseInterface jarg1_);
  public final static native long new__GTlsFileDatabaseInterface();
  public final static native void delete__GTlsFileDatabaseInterface(long jarg1);
  public final static native long _frida_g_tls_file_database_get_type();
  public final static native long _frida_g_tls_file_database_new(String jarg1, long jarg2);
  public final static native void _GTlsInteraction_parent_instance_set(long jarg1, _GTlsInteraction jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GTlsInteraction_parent_instance_get(long jarg1, _GTlsInteraction jarg1_);
  public final static native void _GTlsInteraction_priv_set(long jarg1, _GTlsInteraction jarg1_, long jarg2);
  public final static native long _GTlsInteraction_priv_get(long jarg1, _GTlsInteraction jarg1_);
  public final static native long new__GTlsInteraction();
  public final static native void delete__GTlsInteraction(long jarg1);
  public final static native void _GTlsInteractionClass_parent_class_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GTlsInteractionClass_parent_class_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native void _GTlsInteractionClass_ask_password_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2);
  public final static native long _GTlsInteractionClass_ask_password_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native void _GTlsInteractionClass_ask_password_async_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2);
  public final static native long _GTlsInteractionClass_ask_password_async_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native void _GTlsInteractionClass_ask_password_finish_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2);
  public final static native long _GTlsInteractionClass_ask_password_finish_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native void _GTlsInteractionClass_request_certificate_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2);
  public final static native long _GTlsInteractionClass_request_certificate_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native void _GTlsInteractionClass_request_certificate_async_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2);
  public final static native long _GTlsInteractionClass_request_certificate_async_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native void _GTlsInteractionClass_request_certificate_finish_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2);
  public final static native long _GTlsInteractionClass_request_certificate_finish_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native void _GTlsInteractionClass_padding_set(long jarg1, _GTlsInteractionClass jarg1_, long jarg2);
  public final static native long _GTlsInteractionClass_padding_get(long jarg1, _GTlsInteractionClass jarg1_);
  public final static native long new__GTlsInteractionClass();
  public final static native void delete__GTlsInteractionClass(long jarg1);
  public final static native long _frida_g_tls_interaction_get_type();
  public final static native int _frida_g_tls_interaction_invoke_ask_password(long jarg1, _GTlsInteraction jarg1_, long jarg2, _GTlsPassword jarg2_, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int _frida_g_tls_interaction_ask_password(long jarg1, _GTlsInteraction jarg1_, long jarg2, _GTlsPassword jarg2_, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_g_tls_interaction_ask_password_async(long jarg1, _GTlsInteraction jarg1_, long jarg2, _GTlsPassword jarg2_, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_tls_interaction_ask_password_finish(long jarg1, _GTlsInteraction jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_tls_interaction_invoke_request_certificate(long jarg1, _GTlsInteraction jarg1_, long jarg2, _GTlsConnection jarg2_, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native int _frida_g_tls_interaction_request_certificate(long jarg1, _GTlsInteraction jarg1_, long jarg2, _GTlsConnection jarg2_, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void _frida_g_tls_interaction_request_certificate_async(long jarg1, _GTlsInteraction jarg1_, long jarg2, _GTlsConnection jarg2_, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_tls_interaction_request_certificate_finish(long jarg1, _GTlsInteraction jarg1_, long jarg2, long jarg3);
  public final static native void _GTlsServerConnectionInterface_g_iface_set(long jarg1, _GTlsServerConnectionInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GTlsServerConnectionInterface_g_iface_get(long jarg1, _GTlsServerConnectionInterface jarg1_);
  public final static native long new__GTlsServerConnectionInterface();
  public final static native void delete__GTlsServerConnectionInterface(long jarg1);
  public final static native long _frida_g_tls_server_connection_get_type();
  public final static native long _frida_g_tls_server_connection_new(long jarg1, _GIOStream jarg1_, long jarg2, _GTlsCertificate jarg2_, long jarg3);
  public final static native void _GTlsPassword_parent_instance_set(long jarg1, _GTlsPassword jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GTlsPassword_parent_instance_get(long jarg1, _GTlsPassword jarg1_);
  public final static native void _GTlsPassword_priv_set(long jarg1, _GTlsPassword jarg1_, long jarg2);
  public final static native long _GTlsPassword_priv_get(long jarg1, _GTlsPassword jarg1_);
  public final static native long new__GTlsPassword();
  public final static native void delete__GTlsPassword(long jarg1);
  public final static native void _GTlsPasswordClass_parent_class_set(long jarg1, _GTlsPasswordClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GTlsPasswordClass_parent_class_get(long jarg1, _GTlsPasswordClass jarg1_);
  public final static native void _GTlsPasswordClass_get_value_set(long jarg1, _GTlsPasswordClass jarg1_, long jarg2);
  public final static native long _GTlsPasswordClass_get_value_get(long jarg1, _GTlsPasswordClass jarg1_);
  public final static native void _GTlsPasswordClass_set_value_set(long jarg1, _GTlsPasswordClass jarg1_, long jarg2);
  public final static native long _GTlsPasswordClass_set_value_get(long jarg1, _GTlsPasswordClass jarg1_);
  public final static native void _GTlsPasswordClass_get_default_warning_set(long jarg1, _GTlsPasswordClass jarg1_, long jarg2);
  public final static native long _GTlsPasswordClass_get_default_warning_get(long jarg1, _GTlsPasswordClass jarg1_);
  public final static native void _GTlsPasswordClass_padding_set(long jarg1, _GTlsPasswordClass jarg1_, long jarg2);
  public final static native long _GTlsPasswordClass_padding_get(long jarg1, _GTlsPasswordClass jarg1_);
  public final static native long new__GTlsPasswordClass();
  public final static native void delete__GTlsPasswordClass(long jarg1);
  public final static native long _frida_g_tls_password_get_type();
  public final static native long _frida_g_tls_password_new(int jarg1, String jarg2);
  public final static native long _frida_g_tls_password_get_value(long jarg1, _GTlsPassword jarg1_, long jarg2);
  public final static native void _frida_g_tls_password_set_value(long jarg1, _GTlsPassword jarg1_, long jarg2, int jarg3);
  public final static native void _frida_g_tls_password_set_value_full(long jarg1, _GTlsPassword jarg1_, long jarg2, int jarg3, long jarg4);
  public final static native int _frida_g_tls_password_get_flags(long jarg1, _GTlsPassword jarg1_);
  public final static native void _frida_g_tls_password_set_flags(long jarg1, _GTlsPassword jarg1_, int jarg2);
  public final static native String _frida_g_tls_password_get_description(long jarg1, _GTlsPassword jarg1_);
  public final static native void _frida_g_tls_password_set_description(long jarg1, _GTlsPassword jarg1_, String jarg2);
  public final static native String _frida_g_tls_password_get_warning(long jarg1, _GTlsPassword jarg1_);
  public final static native void _frida_g_tls_password_set_warning(long jarg1, _GTlsPassword jarg1_, String jarg2);
  public final static native String G_VFS_EXTENSION_POINT_NAME_get();
  public final static native void _GVfs_parent_instance_set(long jarg1, _GVfs jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GVfs_parent_instance_get(long jarg1, _GVfs jarg1_);
  public final static native long new__GVfs();
  public final static native void delete__GVfs(long jarg1);
  public final static native void _GVfsClass_parent_class_set(long jarg1, _GVfsClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GVfsClass_parent_class_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_is_active_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_is_active_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_get_file_for_path_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_get_file_for_path_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_get_file_for_uri_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_get_file_for_uri_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_get_supported_uri_schemes_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_get_supported_uri_schemes_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_parse_name_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_parse_name_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_local_file_add_info_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_local_file_add_info_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_add_writable_namespaces_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_add_writable_namespaces_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_local_file_set_attributes_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_local_file_set_attributes_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_local_file_removed_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_local_file_removed_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_local_file_moved_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_local_file_moved_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass_deserialize_icon_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass_deserialize_icon_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass__g_reserved1_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass__g_reserved1_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass__g_reserved2_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass__g_reserved2_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass__g_reserved3_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass__g_reserved3_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass__g_reserved4_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass__g_reserved4_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass__g_reserved5_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass__g_reserved5_get(long jarg1, _GVfsClass jarg1_);
  public final static native void _GVfsClass__g_reserved6_set(long jarg1, _GVfsClass jarg1_, long jarg2);
  public final static native long _GVfsClass__g_reserved6_get(long jarg1, _GVfsClass jarg1_);
  public final static native long new__GVfsClass();
  public final static native void delete__GVfsClass(long jarg1);
  public final static native long _frida_g_vfs_get_type();
  public final static native int _frida_g_vfs_is_active(long jarg1, _GVfs jarg1_);
  public final static native long _frida_g_vfs_get_file_for_path(long jarg1, _GVfs jarg1_, String jarg2);
  public final static native long _frida_g_vfs_get_file_for_uri(long jarg1, _GVfs jarg1_, String jarg2);
  public final static native long _frida_g_vfs_get_supported_uri_schemes(long jarg1, _GVfs jarg1_);
  public final static native long _frida_g_vfs_parse_name(long jarg1, _GVfs jarg1_, String jarg2);
  public final static native long _frida_g_vfs_get_default();
  public final static native long _frida_g_vfs_get_local();
  public final static native int _frida_g_vfs_register_uri_scheme(long jarg1, _GVfs jarg1_, String jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int _frida_g_vfs_unregister_uri_scheme(long jarg1, _GVfs jarg1_, String jarg2);
  public final static native String G_VOLUME_IDENTIFIER_KIND_HAL_UDI_get();
  public final static native String G_VOLUME_IDENTIFIER_KIND_UNIX_DEVICE_get();
  public final static native String G_VOLUME_IDENTIFIER_KIND_LABEL_get();
  public final static native String G_VOLUME_IDENTIFIER_KIND_UUID_get();
  public final static native String G_VOLUME_IDENTIFIER_KIND_NFS_MOUNT_get();
  public final static native String G_VOLUME_IDENTIFIER_KIND_CLASS_get();
  public final static native void _GVolumeIface_g_iface_set(long jarg1, _GVolumeIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GVolumeIface_g_iface_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_changed_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_changed_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_removed_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_removed_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_name_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_name_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_icon_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_icon_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_uuid_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_uuid_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_drive_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_drive_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_mount_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_mount_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_can_mount_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_can_mount_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_can_eject_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_can_eject_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_mount_fn_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_mount_fn_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_mount_finish_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_mount_finish_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_eject_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_eject_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_eject_finish_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_eject_finish_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_identifier_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_identifier_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_enumerate_identifiers_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_enumerate_identifiers_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_should_automount_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_should_automount_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_activation_root_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_activation_root_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_eject_with_operation_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_eject_with_operation_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_eject_with_operation_finish_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_eject_with_operation_finish_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_sort_key_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_sort_key_get(long jarg1, _GVolumeIface jarg1_);
  public final static native void _GVolumeIface_get_symbolic_icon_set(long jarg1, _GVolumeIface jarg1_, long jarg2);
  public final static native long _GVolumeIface_get_symbolic_icon_get(long jarg1, _GVolumeIface jarg1_);
  public final static native long new__GVolumeIface();
  public final static native void delete__GVolumeIface(long jarg1);
  public final static native long _frida_g_volume_get_type();
  public final static native String _frida_g_volume_get_name(long jarg1);
  public final static native long _frida_g_volume_get_icon(long jarg1);
  public final static native long _frida_g_volume_get_symbolic_icon(long jarg1);
  public final static native String _frida_g_volume_get_uuid(long jarg1);
  public final static native long _frida_g_volume_get_drive(long jarg1);
  public final static native long _frida_g_volume_get_mount(long jarg1);
  public final static native int _frida_g_volume_can_mount(long jarg1);
  public final static native int _frida_g_volume_can_eject(long jarg1);
  public final static native int _frida_g_volume_should_automount(long jarg1);
  public final static native void _frida_g_volume_mount(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_volume_mount_finish(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_volume_eject(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_g_volume_eject_finish(long jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_volume_get_identifier(long jarg1, String jarg2);
  public final static native long _frida_g_volume_enumerate_identifiers(long jarg1);
  public final static native long _frida_g_volume_get_activation_root(long jarg1);
  public final static native void _frida_g_volume_eject_with_operation(long jarg1, int jarg2, long jarg3, _GMountOperation jarg3_, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native int _frida_g_volume_eject_with_operation_finish(long jarg1, long jarg2, long jarg3);
  public final static native String _frida_g_volume_get_sort_key(long jarg1);
  public final static native void _GZlibCompressorClass_parent_class_set(long jarg1, _GZlibCompressorClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GZlibCompressorClass_parent_class_get(long jarg1, _GZlibCompressorClass jarg1_);
  public final static native long new__GZlibCompressorClass();
  public final static native void delete__GZlibCompressorClass(long jarg1);
  public final static native long _frida_g_zlib_compressor_get_type();
  public final static native long _frida_g_zlib_compressor_new(int jarg1, int jarg2);
  public final static native long _frida_g_zlib_compressor_get_file_info(long jarg1);
  public final static native void _frida_g_zlib_compressor_set_file_info(long jarg1, long jarg2);
  public final static native void _GZlibDecompressorClass_parent_class_set(long jarg1, _GZlibDecompressorClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GZlibDecompressorClass_parent_class_get(long jarg1, _GZlibDecompressorClass jarg1_);
  public final static native long new__GZlibDecompressorClass();
  public final static native void delete__GZlibDecompressorClass(long jarg1);
  public final static native long _frida_g_zlib_decompressor_get_type();
  public final static native long _frida_g_zlib_decompressor_new(int jarg1);
  public final static native long _frida_g_zlib_decompressor_get_file_info(long jarg1);
  public final static native void _GDBusInterfaceIface_parent_iface_set(long jarg1, _GDBusInterfaceIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDBusInterfaceIface_parent_iface_get(long jarg1, _GDBusInterfaceIface jarg1_);
  public final static native void _GDBusInterfaceIface_get_info_set(long jarg1, _GDBusInterfaceIface jarg1_, long jarg2);
  public final static native long _GDBusInterfaceIface_get_info_get(long jarg1, _GDBusInterfaceIface jarg1_);
  public final static native void _GDBusInterfaceIface_get_object_set(long jarg1, _GDBusInterfaceIface jarg1_, long jarg2);
  public final static native long _GDBusInterfaceIface_get_object_get(long jarg1, _GDBusInterfaceIface jarg1_);
  public final static native void _GDBusInterfaceIface_set_object_set(long jarg1, _GDBusInterfaceIface jarg1_, long jarg2);
  public final static native long _GDBusInterfaceIface_set_object_get(long jarg1, _GDBusInterfaceIface jarg1_);
  public final static native void _GDBusInterfaceIface_dup_object_set(long jarg1, _GDBusInterfaceIface jarg1_, long jarg2);
  public final static native long _GDBusInterfaceIface_dup_object_get(long jarg1, _GDBusInterfaceIface jarg1_);
  public final static native long new__GDBusInterfaceIface();
  public final static native void delete__GDBusInterfaceIface(long jarg1);
  public final static native long _frida_g_dbus_interface_get_type();
  public final static native long _frida_g_dbus_interface_get_info(long jarg1);
  public final static native long _frida_g_dbus_interface_get_object(long jarg1);
  public final static native void _frida_g_dbus_interface_set_object(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_interface_dup_object(long jarg1);
  public final static native void _GDBusInterfaceSkeleton_parent_instance_set(long jarg1, _GDBusInterfaceSkeleton jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GDBusInterfaceSkeleton_parent_instance_get(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native void _GDBusInterfaceSkeleton_priv_set(long jarg1, _GDBusInterfaceSkeleton jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeleton_priv_get(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native long new__GDBusInterfaceSkeleton();
  public final static native void delete__GDBusInterfaceSkeleton(long jarg1);
  public final static native void _GDBusInterfaceSkeletonClass_parent_class_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GDBusInterfaceSkeletonClass_parent_class_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native void _GDBusInterfaceSkeletonClass_get_info_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeletonClass_get_info_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native void _GDBusInterfaceSkeletonClass_get_vtable_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeletonClass_get_vtable_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native void _GDBusInterfaceSkeletonClass_get_properties_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeletonClass_get_properties_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native void _GDBusInterfaceSkeletonClass_flush_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeletonClass_flush_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native void _GDBusInterfaceSkeletonClass_vfunc_padding_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeletonClass_vfunc_padding_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native void _GDBusInterfaceSkeletonClass_g_authorize_method_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeletonClass_g_authorize_method_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native void _GDBusInterfaceSkeletonClass_signal_padding_set(long jarg1, _GDBusInterfaceSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusInterfaceSkeletonClass_signal_padding_get(long jarg1, _GDBusInterfaceSkeletonClass jarg1_);
  public final static native long new__GDBusInterfaceSkeletonClass();
  public final static native void delete__GDBusInterfaceSkeletonClass(long jarg1);
  public final static native long _frida_g_dbus_interface_skeleton_get_type();
  public final static native int _frida_g_dbus_interface_skeleton_get_flags(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native void _frida_g_dbus_interface_skeleton_set_flags(long jarg1, _GDBusInterfaceSkeleton jarg1_, int jarg2);
  public final static native long _frida_g_dbus_interface_skeleton_get_info(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native long _frida_g_dbus_interface_skeleton_get_vtable(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native long _frida_g_dbus_interface_skeleton_get_properties(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native void _frida_g_dbus_interface_skeleton_flush(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native int _frida_g_dbus_interface_skeleton_export(long jarg1, _GDBusInterfaceSkeleton jarg1_, long jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_dbus_interface_skeleton_unexport(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native void _frida_g_dbus_interface_skeleton_unexport_from_connection(long jarg1, _GDBusInterfaceSkeleton jarg1_, long jarg2);
  public final static native long _frida_g_dbus_interface_skeleton_get_connection(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native long _frida_g_dbus_interface_skeleton_get_connections(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native int _frida_g_dbus_interface_skeleton_has_connection(long jarg1, _GDBusInterfaceSkeleton jarg1_, long jarg2);
  public final static native String _frida_g_dbus_interface_skeleton_get_object_path(long jarg1, _GDBusInterfaceSkeleton jarg1_);
  public final static native void _GDBusObjectIface_parent_iface_set(long jarg1, _GDBusObjectIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDBusObjectIface_parent_iface_get(long jarg1, _GDBusObjectIface jarg1_);
  public final static native void _GDBusObjectIface_get_object_path_set(long jarg1, _GDBusObjectIface jarg1_, long jarg2);
  public final static native long _GDBusObjectIface_get_object_path_get(long jarg1, _GDBusObjectIface jarg1_);
  public final static native void _GDBusObjectIface_get_interfaces_set(long jarg1, _GDBusObjectIface jarg1_, long jarg2);
  public final static native long _GDBusObjectIface_get_interfaces_get(long jarg1, _GDBusObjectIface jarg1_);
  public final static native void _GDBusObjectIface_get_interface_set(long jarg1, _GDBusObjectIface jarg1_, long jarg2);
  public final static native long _GDBusObjectIface_get_interface_get(long jarg1, _GDBusObjectIface jarg1_);
  public final static native void _GDBusObjectIface_interface_added_set(long jarg1, _GDBusObjectIface jarg1_, long jarg2);
  public final static native long _GDBusObjectIface_interface_added_get(long jarg1, _GDBusObjectIface jarg1_);
  public final static native void _GDBusObjectIface_interface_removed_set(long jarg1, _GDBusObjectIface jarg1_, long jarg2);
  public final static native long _GDBusObjectIface_interface_removed_get(long jarg1, _GDBusObjectIface jarg1_);
  public final static native long new__GDBusObjectIface();
  public final static native void delete__GDBusObjectIface(long jarg1);
  public final static native long _frida_g_dbus_object_get_type();
  public final static native String _frida_g_dbus_object_get_object_path(long jarg1);
  public final static native long _frida_g_dbus_object_get_interfaces(long jarg1);
  public final static native long _frida_g_dbus_object_get_interface(long jarg1, String jarg2);
  public final static native void _GDBusObjectSkeleton_parent_instance_set(long jarg1, _GDBusObjectSkeleton jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GDBusObjectSkeleton_parent_instance_get(long jarg1, _GDBusObjectSkeleton jarg1_);
  public final static native void _GDBusObjectSkeleton_priv_set(long jarg1, _GDBusObjectSkeleton jarg1_, long jarg2);
  public final static native long _GDBusObjectSkeleton_priv_get(long jarg1, _GDBusObjectSkeleton jarg1_);
  public final static native long new__GDBusObjectSkeleton();
  public final static native void delete__GDBusObjectSkeleton(long jarg1);
  public final static native void _GDBusObjectSkeletonClass_parent_class_set(long jarg1, _GDBusObjectSkeletonClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GDBusObjectSkeletonClass_parent_class_get(long jarg1, _GDBusObjectSkeletonClass jarg1_);
  public final static native void _GDBusObjectSkeletonClass_authorize_method_set(long jarg1, _GDBusObjectSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusObjectSkeletonClass_authorize_method_get(long jarg1, _GDBusObjectSkeletonClass jarg1_);
  public final static native void _GDBusObjectSkeletonClass_padding_set(long jarg1, _GDBusObjectSkeletonClass jarg1_, long jarg2);
  public final static native long _GDBusObjectSkeletonClass_padding_get(long jarg1, _GDBusObjectSkeletonClass jarg1_);
  public final static native long new__GDBusObjectSkeletonClass();
  public final static native void delete__GDBusObjectSkeletonClass(long jarg1);
  public final static native long _frida_g_dbus_object_skeleton_get_type();
  public final static native long _frida_g_dbus_object_skeleton_new(String jarg1);
  public final static native void _frida_g_dbus_object_skeleton_flush(long jarg1, _GDBusObjectSkeleton jarg1_);
  public final static native void _frida_g_dbus_object_skeleton_add_interface(long jarg1, _GDBusObjectSkeleton jarg1_, long jarg2, _GDBusInterfaceSkeleton jarg2_);
  public final static native void _frida_g_dbus_object_skeleton_remove_interface(long jarg1, _GDBusObjectSkeleton jarg1_, long jarg2, _GDBusInterfaceSkeleton jarg2_);
  public final static native void _frida_g_dbus_object_skeleton_remove_interface_by_name(long jarg1, _GDBusObjectSkeleton jarg1_, String jarg2);
  public final static native void _frida_g_dbus_object_skeleton_set_object_path(long jarg1, _GDBusObjectSkeleton jarg1_, String jarg2);
  public final static native void _GDBusObjectProxy_parent_instance_set(long jarg1, _GDBusObjectProxy jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GDBusObjectProxy_parent_instance_get(long jarg1, _GDBusObjectProxy jarg1_);
  public final static native void _GDBusObjectProxy_priv_set(long jarg1, _GDBusObjectProxy jarg1_, long jarg2);
  public final static native long _GDBusObjectProxy_priv_get(long jarg1, _GDBusObjectProxy jarg1_);
  public final static native long new__GDBusObjectProxy();
  public final static native void delete__GDBusObjectProxy(long jarg1);
  public final static native void _GDBusObjectProxyClass_parent_class_set(long jarg1, _GDBusObjectProxyClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GDBusObjectProxyClass_parent_class_get(long jarg1, _GDBusObjectProxyClass jarg1_);
  public final static native void _GDBusObjectProxyClass_padding_set(long jarg1, _GDBusObjectProxyClass jarg1_, long jarg2);
  public final static native long _GDBusObjectProxyClass_padding_get(long jarg1, _GDBusObjectProxyClass jarg1_);
  public final static native long new__GDBusObjectProxyClass();
  public final static native void delete__GDBusObjectProxyClass(long jarg1);
  public final static native long _frida_g_dbus_object_proxy_get_type();
  public final static native long _frida_g_dbus_object_proxy_new(long jarg1, String jarg2);
  public final static native long _frida_g_dbus_object_proxy_get_connection(long jarg1, _GDBusObjectProxy jarg1_);
  public final static native void _GDBusObjectManagerIface_parent_iface_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GDBusObjectManagerIface_parent_iface_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_get_object_path_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_get_object_path_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_get_objects_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_get_objects_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_get_object_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_get_object_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_get_interface_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_get_interface_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_object_added_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_object_added_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_object_removed_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_object_removed_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_interface_added_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_interface_added_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native void _GDBusObjectManagerIface_interface_removed_set(long jarg1, _GDBusObjectManagerIface jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerIface_interface_removed_get(long jarg1, _GDBusObjectManagerIface jarg1_);
  public final static native long new__GDBusObjectManagerIface();
  public final static native void delete__GDBusObjectManagerIface(long jarg1);
  public final static native long _frida_g_dbus_object_manager_get_type();
  public final static native String _frida_g_dbus_object_manager_get_object_path(long jarg1);
  public final static native long _frida_g_dbus_object_manager_get_objects(long jarg1);
  public final static native long _frida_g_dbus_object_manager_get_object(long jarg1, String jarg2);
  public final static native long _frida_g_dbus_object_manager_get_interface(long jarg1, String jarg2, String jarg3);
  public final static native void _GDBusObjectManagerClient_parent_instance_set(long jarg1, _GDBusObjectManagerClient jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GDBusObjectManagerClient_parent_instance_get(long jarg1, _GDBusObjectManagerClient jarg1_);
  public final static native void _GDBusObjectManagerClient_priv_set(long jarg1, _GDBusObjectManagerClient jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerClient_priv_get(long jarg1, _GDBusObjectManagerClient jarg1_);
  public final static native long new__GDBusObjectManagerClient();
  public final static native void delete__GDBusObjectManagerClient(long jarg1);
  public final static native void _GDBusObjectManagerClientClass_parent_class_set(long jarg1, _GDBusObjectManagerClientClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GDBusObjectManagerClientClass_parent_class_get(long jarg1, _GDBusObjectManagerClientClass jarg1_);
  public final static native void _GDBusObjectManagerClientClass_interface_proxy_signal_set(long jarg1, _GDBusObjectManagerClientClass jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerClientClass_interface_proxy_signal_get(long jarg1, _GDBusObjectManagerClientClass jarg1_);
  public final static native void _GDBusObjectManagerClientClass_interface_proxy_properties_changed_set(long jarg1, _GDBusObjectManagerClientClass jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerClientClass_interface_proxy_properties_changed_get(long jarg1, _GDBusObjectManagerClientClass jarg1_);
  public final static native void _GDBusObjectManagerClientClass_padding_set(long jarg1, _GDBusObjectManagerClientClass jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerClientClass_padding_get(long jarg1, _GDBusObjectManagerClientClass jarg1_);
  public final static native long new__GDBusObjectManagerClientClass();
  public final static native void delete__GDBusObjectManagerClientClass(long jarg1);
  public final static native long _frida_g_dbus_object_manager_client_get_type();
  public final static native void _frida_g_dbus_object_manager_client_new(long jarg1, int jarg2, String jarg3, String jarg4, long jarg5, long jarg6, long jarg7, long jarg8, _GCancellable jarg8_, long jarg9, long jarg10);
  public final static native long _frida_g_dbus_object_manager_client_new_finish(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_object_manager_client_new_sync(long jarg1, int jarg2, String jarg3, String jarg4, long jarg5, long jarg6, long jarg7, long jarg8, _GCancellable jarg8_, long jarg9);
  public final static native void _frida_g_dbus_object_manager_client_new_for_bus(int jarg1, int jarg2, String jarg3, String jarg4, long jarg5, long jarg6, long jarg7, long jarg8, _GCancellable jarg8_, long jarg9, long jarg10);
  public final static native long _frida_g_dbus_object_manager_client_new_for_bus_finish(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_object_manager_client_new_for_bus_sync(int jarg1, int jarg2, String jarg3, String jarg4, long jarg5, long jarg6, long jarg7, long jarg8, _GCancellable jarg8_, long jarg9);
  public final static native long _frida_g_dbus_object_manager_client_get_connection(long jarg1, _GDBusObjectManagerClient jarg1_);
  public final static native int _frida_g_dbus_object_manager_client_get_flags(long jarg1, _GDBusObjectManagerClient jarg1_);
  public final static native String _frida_g_dbus_object_manager_client_get_name(long jarg1, _GDBusObjectManagerClient jarg1_);
  public final static native String _frida_g_dbus_object_manager_client_get_name_owner(long jarg1, _GDBusObjectManagerClient jarg1_);
  public final static native void _GDBusObjectManagerServer_parent_instance_set(long jarg1, _GDBusObjectManagerServer jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GDBusObjectManagerServer_parent_instance_get(long jarg1, _GDBusObjectManagerServer jarg1_);
  public final static native void _GDBusObjectManagerServer_priv_set(long jarg1, _GDBusObjectManagerServer jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerServer_priv_get(long jarg1, _GDBusObjectManagerServer jarg1_);
  public final static native long new__GDBusObjectManagerServer();
  public final static native void delete__GDBusObjectManagerServer(long jarg1);
  public final static native void _GDBusObjectManagerServerClass_parent_class_set(long jarg1, _GDBusObjectManagerServerClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GDBusObjectManagerServerClass_parent_class_get(long jarg1, _GDBusObjectManagerServerClass jarg1_);
  public final static native void _GDBusObjectManagerServerClass_padding_set(long jarg1, _GDBusObjectManagerServerClass jarg1_, long jarg2);
  public final static native long _GDBusObjectManagerServerClass_padding_get(long jarg1, _GDBusObjectManagerServerClass jarg1_);
  public final static native long new__GDBusObjectManagerServerClass();
  public final static native void delete__GDBusObjectManagerServerClass(long jarg1);
  public final static native long _frida_g_dbus_object_manager_server_get_type();
  public final static native long _frida_g_dbus_object_manager_server_new(String jarg1);
  public final static native long _frida_g_dbus_object_manager_server_get_connection(long jarg1, _GDBusObjectManagerServer jarg1_);
  public final static native void _frida_g_dbus_object_manager_server_set_connection(long jarg1, _GDBusObjectManagerServer jarg1_, long jarg2);
  public final static native void _frida_g_dbus_object_manager_server_export(long jarg1, _GDBusObjectManagerServer jarg1_, long jarg2, _GDBusObjectSkeleton jarg2_);
  public final static native void _frida_g_dbus_object_manager_server_export_uniquely(long jarg1, _GDBusObjectManagerServer jarg1_, long jarg2, _GDBusObjectSkeleton jarg2_);
  public final static native int _frida_g_dbus_object_manager_server_is_exported(long jarg1, _GDBusObjectManagerServer jarg1_, long jarg2, _GDBusObjectSkeleton jarg2_);
  public final static native int _frida_g_dbus_object_manager_server_unexport(long jarg1, _GDBusObjectManagerServer jarg1_, String jarg2);
  public final static native long _frida_g_dbus_action_group_get_type();
  public final static native long _frida_g_dbus_action_group_get(long jarg1, String jarg2, String jarg3);
  public final static native void _GRemoteActionGroupInterface_g_iface_set(long jarg1, _GRemoteActionGroupInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GRemoteActionGroupInterface_g_iface_get(long jarg1, _GRemoteActionGroupInterface jarg1_);
  public final static native void _GRemoteActionGroupInterface_activate_action_full_set(long jarg1, _GRemoteActionGroupInterface jarg1_, long jarg2);
  public final static native long _GRemoteActionGroupInterface_activate_action_full_get(long jarg1, _GRemoteActionGroupInterface jarg1_);
  public final static native void _GRemoteActionGroupInterface_change_action_state_full_set(long jarg1, _GRemoteActionGroupInterface jarg1_, long jarg2);
  public final static native long _GRemoteActionGroupInterface_change_action_state_full_get(long jarg1, _GRemoteActionGroupInterface jarg1_);
  public final static native long new__GRemoteActionGroupInterface();
  public final static native void delete__GRemoteActionGroupInterface(long jarg1);
  public final static native long _frida_g_remote_action_group_get_type();
  public final static native void _frida_g_remote_action_group_activate_action_full(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_remote_action_group_change_action_state_full(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native String G_MENU_ATTRIBUTE_ACTION_get();
  public final static native String G_MENU_ATTRIBUTE_ACTION_NAMESPACE_get();
  public final static native String G_MENU_ATTRIBUTE_TARGET_get();
  public final static native String G_MENU_ATTRIBUTE_LABEL_get();
  public final static native String G_MENU_ATTRIBUTE_ICON_get();
  public final static native String G_MENU_LINK_SUBMENU_get();
  public final static native String G_MENU_LINK_SECTION_get();
  public final static native void _GMenuModel_parent_instance_set(long jarg1, _GMenuModel jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GMenuModel_parent_instance_get(long jarg1, _GMenuModel jarg1_);
  public final static native void _GMenuModel_priv_set(long jarg1, _GMenuModel jarg1_, long jarg2);
  public final static native long _GMenuModel_priv_get(long jarg1, _GMenuModel jarg1_);
  public final static native long new__GMenuModel();
  public final static native void delete__GMenuModel(long jarg1);
  public final static native void _GMenuModelClass_parent_class_set(long jarg1, _GMenuModelClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GMenuModelClass_parent_class_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_is_mutable_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_is_mutable_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_get_n_items_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_get_n_items_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_get_item_attributes_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_get_item_attributes_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_iterate_item_attributes_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_iterate_item_attributes_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_get_item_attribute_value_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_get_item_attribute_value_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_get_item_links_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_get_item_links_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_iterate_item_links_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_iterate_item_links_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native void _GMenuModelClass_get_item_link_set(long jarg1, _GMenuModelClass jarg1_, long jarg2);
  public final static native long _GMenuModelClass_get_item_link_get(long jarg1, _GMenuModelClass jarg1_);
  public final static native long new__GMenuModelClass();
  public final static native void delete__GMenuModelClass(long jarg1);
  public final static native long _frida_g_menu_model_get_type();
  public final static native int _frida_g_menu_model_is_mutable(long jarg1, _GMenuModel jarg1_);
  public final static native int _frida_g_menu_model_get_n_items(long jarg1, _GMenuModel jarg1_);
  public final static native long _frida_g_menu_model_iterate_item_attributes(long jarg1, _GMenuModel jarg1_, int jarg2);
  public final static native long _frida_g_menu_model_get_item_attribute_value(long jarg1, _GMenuModel jarg1_, int jarg2, String jarg3, long jarg4);
  public final static native int _frida_g_menu_model_get_item_attribute(long jarg1, _GMenuModel jarg1_, int jarg2, String jarg3, String jarg4);
  public final static native long _frida_g_menu_model_iterate_item_links(long jarg1, _GMenuModel jarg1_, int jarg2);
  public final static native long _frida_g_menu_model_get_item_link(long jarg1, _GMenuModel jarg1_, int jarg2, String jarg3);
  public final static native void _frida_g_menu_model_items_changed(long jarg1, _GMenuModel jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native void _GMenuAttributeIter_parent_instance_set(long jarg1, _GMenuAttributeIter jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GMenuAttributeIter_parent_instance_get(long jarg1, _GMenuAttributeIter jarg1_);
  public final static native void _GMenuAttributeIter_priv_set(long jarg1, _GMenuAttributeIter jarg1_, long jarg2);
  public final static native long _GMenuAttributeIter_priv_get(long jarg1, _GMenuAttributeIter jarg1_);
  public final static native long new__GMenuAttributeIter();
  public final static native void delete__GMenuAttributeIter(long jarg1);
  public final static native void _GMenuAttributeIterClass_parent_class_set(long jarg1, _GMenuAttributeIterClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GMenuAttributeIterClass_parent_class_get(long jarg1, _GMenuAttributeIterClass jarg1_);
  public final static native void _GMenuAttributeIterClass_get_next_set(long jarg1, _GMenuAttributeIterClass jarg1_, long jarg2);
  public final static native long _GMenuAttributeIterClass_get_next_get(long jarg1, _GMenuAttributeIterClass jarg1_);
  public final static native long new__GMenuAttributeIterClass();
  public final static native void delete__GMenuAttributeIterClass(long jarg1);
  public final static native long _frida_g_menu_attribute_iter_get_type();
  public final static native int _frida_g_menu_attribute_iter_get_next(long jarg1, _GMenuAttributeIter jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_menu_attribute_iter_next(long jarg1, _GMenuAttributeIter jarg1_);
  public final static native String _frida_g_menu_attribute_iter_get_name(long jarg1, _GMenuAttributeIter jarg1_);
  public final static native long _frida_g_menu_attribute_iter_get_value(long jarg1, _GMenuAttributeIter jarg1_);
  public final static native void _GMenuLinkIter_parent_instance_set(long jarg1, _GMenuLinkIter jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _GMenuLinkIter_parent_instance_get(long jarg1, _GMenuLinkIter jarg1_);
  public final static native void _GMenuLinkIter_priv_set(long jarg1, _GMenuLinkIter jarg1_, long jarg2);
  public final static native long _GMenuLinkIter_priv_get(long jarg1, _GMenuLinkIter jarg1_);
  public final static native long new__GMenuLinkIter();
  public final static native void delete__GMenuLinkIter(long jarg1);
  public final static native void _GMenuLinkIterClass_parent_class_set(long jarg1, _GMenuLinkIterClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _GMenuLinkIterClass_parent_class_get(long jarg1, _GMenuLinkIterClass jarg1_);
  public final static native void _GMenuLinkIterClass_get_next_set(long jarg1, _GMenuLinkIterClass jarg1_, long jarg2);
  public final static native long _GMenuLinkIterClass_get_next_get(long jarg1, _GMenuLinkIterClass jarg1_);
  public final static native long new__GMenuLinkIterClass();
  public final static native void delete__GMenuLinkIterClass(long jarg1);
  public final static native long _frida_g_menu_link_iter_get_type();
  public final static native int _frida_g_menu_link_iter_get_next(long jarg1, _GMenuLinkIter jarg1_, long jarg2, long jarg3);
  public final static native int _frida_g_menu_link_iter_next(long jarg1, _GMenuLinkIter jarg1_);
  public final static native String _frida_g_menu_link_iter_get_name(long jarg1, _GMenuLinkIter jarg1_);
  public final static native long _frida_g_menu_link_iter_get_value(long jarg1, _GMenuLinkIter jarg1_);
  public final static native long _frida_g_menu_get_type();
  public final static native long _frida_g_menu_new();
  public final static native void _frida_g_menu_freeze(long jarg1);
  public final static native void _frida_g_menu_insert_item(long jarg1, int jarg2, long jarg3);
  public final static native void _frida_g_menu_prepend_item(long jarg1, long jarg2);
  public final static native void _frida_g_menu_append_item(long jarg1, long jarg2);
  public final static native void _frida_g_menu_remove(long jarg1, int jarg2);
  public final static native void _frida_g_menu_remove_all(long jarg1);
  public final static native void _frida_g_menu_insert(long jarg1, int jarg2, String jarg3, String jarg4);
  public final static native void _frida_g_menu_prepend(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_menu_append(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_menu_insert_section(long jarg1, int jarg2, String jarg3, long jarg4, _GMenuModel jarg4_);
  public final static native void _frida_g_menu_prepend_section(long jarg1, String jarg2, long jarg3, _GMenuModel jarg3_);
  public final static native void _frida_g_menu_append_section(long jarg1, String jarg2, long jarg3, _GMenuModel jarg3_);
  public final static native void _frida_g_menu_insert_submenu(long jarg1, int jarg2, String jarg3, long jarg4, _GMenuModel jarg4_);
  public final static native void _frida_g_menu_prepend_submenu(long jarg1, String jarg2, long jarg3, _GMenuModel jarg3_);
  public final static native void _frida_g_menu_append_submenu(long jarg1, String jarg2, long jarg3, _GMenuModel jarg3_);
  public final static native long _frida_g_menu_item_get_type();
  public final static native long _frida_g_menu_item_new(String jarg1, String jarg2);
  public final static native long _frida_g_menu_item_new_from_model(long jarg1, _GMenuModel jarg1_, int jarg2);
  public final static native long _frida_g_menu_item_new_submenu(String jarg1, long jarg2, _GMenuModel jarg2_);
  public final static native long _frida_g_menu_item_new_section(String jarg1, long jarg2, _GMenuModel jarg2_);
  public final static native long _frida_g_menu_item_get_attribute_value(long jarg1, String jarg2, long jarg3);
  public final static native int _frida_g_menu_item_get_attribute(long jarg1, String jarg2, String jarg3);
  public final static native long _frida_g_menu_item_get_link(long jarg1, String jarg2);
  public final static native void _frida_g_menu_item_set_attribute_value(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_menu_item_set_attribute(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_menu_item_set_link(long jarg1, String jarg2, long jarg3, _GMenuModel jarg3_);
  public final static native void _frida_g_menu_item_set_label(long jarg1, String jarg2);
  public final static native void _frida_g_menu_item_set_submenu(long jarg1, long jarg2, _GMenuModel jarg2_);
  public final static native void _frida_g_menu_item_set_section(long jarg1, long jarg2, _GMenuModel jarg2_);
  public final static native void _frida_g_menu_item_set_action_and_target_value(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_g_menu_item_set_action_and_target(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_menu_item_set_detailed_action(long jarg1, String jarg2);
  public final static native void _frida_g_menu_item_set_icon(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_connection_export_menu_model(long jarg1, String jarg2, long jarg3, _GMenuModel jarg3_, long jarg4);
  public final static native void _frida_g_dbus_connection_unexport_menu_model(long jarg1, long jarg2);
  public final static native long _frida_g_dbus_menu_model_get_type();
  public final static native long _frida_g_dbus_menu_model_get(long jarg1, String jarg2, String jarg3);
  public final static native long _frida_g_notification_get_type();
  public final static native long _frida_g_notification_new(String jarg1);
  public final static native void _frida_g_notification_set_title(long jarg1, String jarg2);
  public final static native void _frida_g_notification_set_body(long jarg1, String jarg2);
  public final static native void _frida_g_notification_set_icon(long jarg1, long jarg2);
  public final static native void _frida_g_notification_set_urgent(long jarg1, int jarg2);
  public final static native void _frida_g_notification_set_priority(long jarg1, int jarg2);
  public final static native void _frida_g_notification_add_button(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_notification_add_button_with_target(long jarg1, String jarg2, String jarg3, String jarg4);
  public final static native void _frida_g_notification_add_button_with_target_value(long jarg1, String jarg2, String jarg3, long jarg4);
  public final static native void _frida_g_notification_set_default_action(long jarg1, String jarg2);
  public final static native void _frida_g_notification_set_default_action_and_target(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_g_notification_set_default_action_and_target_value(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_g_list_model_get_type();
  public final static native long G_LIST_MODEL(long jarg1);
  public final static native int G_IS_LIST_MODEL(long jarg1);
  public final static native long G_LIST_MODEL_GET_IFACE(long jarg1);
  public final static native void _GListModelInterface_g_iface_set(long jarg1, _GListModelInterface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _GListModelInterface_g_iface_get(long jarg1, _GListModelInterface jarg1_);
  public final static native void _GListModelInterface_get_item_type_set(long jarg1, _GListModelInterface jarg1_, long jarg2);
  public final static native long _GListModelInterface_get_item_type_get(long jarg1, _GListModelInterface jarg1_);
  public final static native void _GListModelInterface_get_n_items_set(long jarg1, _GListModelInterface jarg1_, long jarg2);
  public final static native long _GListModelInterface_get_n_items_get(long jarg1, _GListModelInterface jarg1_);
  public final static native void _GListModelInterface_get_item_set(long jarg1, _GListModelInterface jarg1_, long jarg2);
  public final static native long _GListModelInterface_get_item_get(long jarg1, _GListModelInterface jarg1_);
  public final static native long new__GListModelInterface();
  public final static native void delete__GListModelInterface(long jarg1);
  public final static native long _frida_g_list_model_get_item_type(long jarg1);
  public final static native long _frida_g_list_model_get_n_items(long jarg1);
  public final static native long _frida_g_list_model_get_item(long jarg1, long jarg2);
  public final static native long _frida_g_list_model_get_object(long jarg1, long jarg2);
  public final static native void _frida_g_list_model_items_changed(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long _frida_g_list_store_get_type();
  public final static native void GListStoreClass_parent_class_set(long jarg1, GListStoreClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long GListStoreClass_parent_class_get(long jarg1, GListStoreClass jarg1_);
  public final static native long new_GListStoreClass();
  public final static native void delete_GListStoreClass(long jarg1);
  public final static native long G_LIST_STORE(long jarg1);
  public final static native int G_IS_LIST_STORE(long jarg1);
  public final static native long _frida_g_list_store_new(long jarg1);
  public final static native void _frida_g_list_store_insert(long jarg1, long jarg2, long jarg3);
  public final static native long _frida_g_list_store_insert_sorted(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _frida_g_list_store_sort(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_g_list_store_append(long jarg1, long jarg2);
  public final static native void _frida_g_list_store_remove(long jarg1, long jarg2);
  public final static native void _frida_g_list_store_remove_all(long jarg1);
  public final static native void _frida_g_list_store_splice(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void _frida_gio_init();
  public final static native void _frida_gio_shutdown();
  public final static native void _frida_gio_deinit();
  public final static native void _frida_gio_prepare_to_fork();
  public final static native void _frida_gio_recover_from_fork_in_parent();
  public final static native void _frida_gio_recover_from_fork_in_child();
  public final static native int JSON_MAJOR_VERSION_get();
  public final static native int JSON_MINOR_VERSION_get();
  public final static native int JSON_MICRO_VERSION_get();
  public final static native String JSON_VERSION_S_get();
  public final static native int JSON_VERSION_HEX_get();
  public final static native int JSON_VERSION_1_0_get();
  public final static native int JSON_VERSION_1_2_get();
  public final static native int JSON_VERSION_1_4_get();
  public final static native int JSON_VERSION_1_6_get();
  public final static native int JSON_VERSION_CUR_STABLE_get();
  public final static native int JSON_VERSION_PREV_STABLE_get();
  public final static native int JSON_VERSION_MIN_REQUIRED_get();
  public final static native int JSON_VERSION_MAX_ALLOWED_get();
  public final static native long _frida_json_node_get_type();
  public final static native long _frida_json_node_new(int jarg1);
  public final static native long _frida_json_node_alloc();
  public final static native long _frida_json_node_init(long jarg1, int jarg2);
  public final static native long _frida_json_node_init_object(long jarg1, long jarg2);
  public final static native long _frida_json_node_init_array(long jarg1, long jarg2);
  public final static native long _frida_json_node_init_int(long jarg1, int jarg2);
  public final static native long _frida_json_node_init_double(long jarg1, double jarg2);
  public final static native long _frida_json_node_init_boolean(long jarg1, int jarg2);
  public final static native long _frida_json_node_init_string(long jarg1, String jarg2);
  public final static native long _frida_json_node_init_null(long jarg1);
  public final static native long _frida_json_node_copy(long jarg1);
  public final static native void _frida_json_node_free(long jarg1);
  public final static native long _frida_json_node_ref(long jarg1);
  public final static native void _frida_json_node_unref(long jarg1);
  public final static native int _frida_json_node_get_node_type(long jarg1);
  public final static native long _frida_json_node_get_value_type(long jarg1);
  public final static native void _frida_json_node_set_parent(long jarg1, long jarg2);
  public final static native long _frida_json_node_get_parent(long jarg1);
  public final static native String _frida_json_node_type_name(long jarg1);
  public final static native void _frida_json_node_set_object(long jarg1, long jarg2);
  public final static native void _frida_json_node_take_object(long jarg1, long jarg2);
  public final static native long _frida_json_node_get_object(long jarg1);
  public final static native long _frida_json_node_dup_object(long jarg1);
  public final static native void _frida_json_node_set_array(long jarg1, long jarg2);
  public final static native void _frida_json_node_take_array(long jarg1, long jarg2);
  public final static native long _frida_json_node_get_array(long jarg1);
  public final static native long _frida_json_node_dup_array(long jarg1);
  public final static native void _frida_json_node_set_value(long jarg1, long jarg2, _GValue jarg2_);
  public final static native void _frida_json_node_get_value(long jarg1, long jarg2, _GValue jarg2_);
  public final static native void _frida_json_node_set_string(long jarg1, String jarg2);
  public final static native String _frida_json_node_get_string(long jarg1);
  public final static native String _frida_json_node_dup_string(long jarg1);
  public final static native void _frida_json_node_set_int(long jarg1, int jarg2);
  public final static native int _frida_json_node_get_int(long jarg1);
  public final static native void _frida_json_node_set_double(long jarg1, double jarg2);
  public final static native double _frida_json_node_get_double(long jarg1);
  public final static native void _frida_json_node_set_boolean(long jarg1, int jarg2);
  public final static native int _frida_json_node_get_boolean(long jarg1);
  public final static native int _frida_json_node_is_null(long jarg1);
  public final static native void _frida_json_node_seal(long jarg1);
  public final static native int _frida_json_node_is_immutable(long jarg1);
  public final static native long _frida_json_string_hash(long jarg1);
  public final static native int _frida_json_string_equal(long jarg1, long jarg2);
  public final static native int _frida_json_string_compare(long jarg1, long jarg2);
  public final static native long _frida_json_node_hash(long jarg1);
  public final static native int _frida_json_node_equal(long jarg1, long jarg2);
  public final static native long _frida_json_object_get_type();
  public final static native long _frida_json_object_new();
  public final static native long _frida_json_object_ref(long jarg1);
  public final static native void _frida_json_object_unref(long jarg1);
  public final static native void _frida_json_object_add_member(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_json_object_set_member(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_json_object_set_int_member(long jarg1, String jarg2, int jarg3);
  public final static native void _frida_json_object_set_double_member(long jarg1, String jarg2, double jarg3);
  public final static native void _frida_json_object_set_boolean_member(long jarg1, String jarg2, int jarg3);
  public final static native void _frida_json_object_set_string_member(long jarg1, String jarg2, String jarg3);
  public final static native void _frida_json_object_set_null_member(long jarg1, String jarg2);
  public final static native void _frida_json_object_set_array_member(long jarg1, String jarg2, long jarg3);
  public final static native void _frida_json_object_set_object_member(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_json_object_get_members(long jarg1);
  public final static native long _frida_json_object_get_member(long jarg1, String jarg2);
  public final static native long _frida_json_object_dup_member(long jarg1, String jarg2);
  public final static native int _frida_json_object_get_int_member(long jarg1, String jarg2);
  public final static native int _frida_json_object_get_int_member_with_default(long jarg1, String jarg2, int jarg3);
  public final static native double _frida_json_object_get_double_member(long jarg1, String jarg2);
  public final static native double _frida_json_object_get_double_member_with_default(long jarg1, String jarg2, double jarg3);
  public final static native int _frida_json_object_get_boolean_member(long jarg1, String jarg2);
  public final static native int _frida_json_object_get_boolean_member_with_default(long jarg1, String jarg2, int jarg3);
  public final static native String _frida_json_object_get_string_member(long jarg1, String jarg2);
  public final static native String _frida_json_object_get_string_member_with_default(long jarg1, String jarg2, String jarg3);
  public final static native int _frida_json_object_get_null_member(long jarg1, String jarg2);
  public final static native long _frida_json_object_get_array_member(long jarg1, String jarg2);
  public final static native long _frida_json_object_get_object_member(long jarg1, String jarg2);
  public final static native int _frida_json_object_has_member(long jarg1, String jarg2);
  public final static native void _frida_json_object_remove_member(long jarg1, String jarg2);
  public final static native long _frida_json_object_get_values(long jarg1);
  public final static native long _frida_json_object_get_size(long jarg1);
  public final static native void _frida_json_object_foreach_member(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_json_object_seal(long jarg1);
  public final static native int _frida_json_object_is_immutable(long jarg1);
  public final static native long _frida_json_object_hash(long jarg1);
  public final static native int _frida_json_object_equal(long jarg1, long jarg2);
  public final static native void JsonObjectIter_priv_pointer_set(long jarg1, JsonObjectIter jarg1_, long jarg2);
  public final static native long JsonObjectIter_priv_pointer_get(long jarg1, JsonObjectIter jarg1_);
  public final static native void JsonObjectIter_priv_int_set(long jarg1, JsonObjectIter jarg1_, long jarg2);
  public final static native long JsonObjectIter_priv_int_get(long jarg1, JsonObjectIter jarg1_);
  public final static native void JsonObjectIter_priv_boolean_set(long jarg1, JsonObjectIter jarg1_, long jarg2);
  public final static native long JsonObjectIter_priv_boolean_get(long jarg1, JsonObjectIter jarg1_);
  public final static native long new_JsonObjectIter();
  public final static native void delete_JsonObjectIter(long jarg1);
  public final static native void _frida_json_object_iter_init(long jarg1, JsonObjectIter jarg1_, long jarg2);
  public final static native int _frida_json_object_iter_next(long jarg1, JsonObjectIter jarg1_, long jarg2, long jarg3);
  public final static native long _frida_json_array_get_type();
  public final static native long _frida_json_array_new();
  public final static native long _frida_json_array_sized_new(long jarg1);
  public final static native long _frida_json_array_ref(long jarg1);
  public final static native void _frida_json_array_unref(long jarg1);
  public final static native void _frida_json_array_add_element(long jarg1, long jarg2);
  public final static native void _frida_json_array_add_int_element(long jarg1, int jarg2);
  public final static native void _frida_json_array_add_double_element(long jarg1, double jarg2);
  public final static native void _frida_json_array_add_boolean_element(long jarg1, int jarg2);
  public final static native void _frida_json_array_add_string_element(long jarg1, String jarg2);
  public final static native void _frida_json_array_add_null_element(long jarg1);
  public final static native void _frida_json_array_add_array_element(long jarg1, long jarg2);
  public final static native void _frida_json_array_add_object_element(long jarg1, long jarg2);
  public final static native long _frida_json_array_get_elements(long jarg1);
  public final static native long _frida_json_array_get_element(long jarg1, long jarg2);
  public final static native int _frida_json_array_get_int_element(long jarg1, long jarg2);
  public final static native double _frida_json_array_get_double_element(long jarg1, long jarg2);
  public final static native int _frida_json_array_get_boolean_element(long jarg1, long jarg2);
  public final static native String _frida_json_array_get_string_element(long jarg1, long jarg2);
  public final static native int _frida_json_array_get_null_element(long jarg1, long jarg2);
  public final static native long _frida_json_array_get_array_element(long jarg1, long jarg2);
  public final static native long _frida_json_array_get_object_element(long jarg1, long jarg2);
  public final static native long _frida_json_array_dup_element(long jarg1, long jarg2);
  public final static native void _frida_json_array_remove_element(long jarg1, long jarg2);
  public final static native long _frida_json_array_get_length(long jarg1);
  public final static native void _frida_json_array_foreach_element(long jarg1, long jarg2, long jarg3);
  public final static native void _frida_json_array_seal(long jarg1);
  public final static native int _frida_json_array_is_immutable(long jarg1);
  public final static native long _frida_json_array_hash(long jarg1);
  public final static native int _frida_json_array_equal(long jarg1, long jarg2);
  public final static native void _JsonBuilder_parent_instance_set(long jarg1, _JsonBuilder jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _JsonBuilder_parent_instance_get(long jarg1, _JsonBuilder jarg1_);
  public final static native void _JsonBuilder_priv_set(long jarg1, _JsonBuilder jarg1_, long jarg2);
  public final static native long _JsonBuilder_priv_get(long jarg1, _JsonBuilder jarg1_);
  public final static native long new__JsonBuilder();
  public final static native void delete__JsonBuilder(long jarg1);
  public final static native void _JsonBuilderClass_parent_class_set(long jarg1, _JsonBuilderClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _JsonBuilderClass_parent_class_get(long jarg1, _JsonBuilderClass jarg1_);
  public final static native void _JsonBuilderClass__json_reserved1_set(long jarg1, _JsonBuilderClass jarg1_, long jarg2);
  public final static native long _JsonBuilderClass__json_reserved1_get(long jarg1, _JsonBuilderClass jarg1_);
  public final static native void _JsonBuilderClass__json_reserved2_set(long jarg1, _JsonBuilderClass jarg1_, long jarg2);
  public final static native long _JsonBuilderClass__json_reserved2_get(long jarg1, _JsonBuilderClass jarg1_);
  public final static native long new__JsonBuilderClass();
  public final static native void delete__JsonBuilderClass(long jarg1);
  public final static native long _frida_json_builder_get_type();
  public final static native long _frida_json_builder_new();
  public final static native long _frida_json_builder_new_immutable();
  public final static native long _frida_json_builder_get_root(long jarg1, _JsonBuilder jarg1_);
  public final static native void _frida_json_builder_reset(long jarg1, _JsonBuilder jarg1_);
  public final static native long _frida_json_builder_begin_array(long jarg1, _JsonBuilder jarg1_);
  public final static native long _frida_json_builder_end_array(long jarg1, _JsonBuilder jarg1_);
  public final static native long _frida_json_builder_begin_object(long jarg1, _JsonBuilder jarg1_);
  public final static native long _frida_json_builder_end_object(long jarg1, _JsonBuilder jarg1_);
  public final static native long _frida_json_builder_set_member_name(long jarg1, _JsonBuilder jarg1_, String jarg2);
  public final static native long _frida_json_builder_add_value(long jarg1, _JsonBuilder jarg1_, long jarg2);
  public final static native long _frida_json_builder_add_int_value(long jarg1, _JsonBuilder jarg1_, int jarg2);
  public final static native long _frida_json_builder_add_double_value(long jarg1, _JsonBuilder jarg1_, double jarg2);
  public final static native long _frida_json_builder_add_boolean_value(long jarg1, _JsonBuilder jarg1_, int jarg2);
  public final static native long _frida_json_builder_add_string_value(long jarg1, _JsonBuilder jarg1_, String jarg2);
  public final static native long _frida_json_builder_add_null_value(long jarg1, _JsonBuilder jarg1_);
  public final static native void _JsonGenerator_parent_instance_set(long jarg1, _JsonGenerator jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _JsonGenerator_parent_instance_get(long jarg1, _JsonGenerator jarg1_);
  public final static native void _JsonGenerator_priv_set(long jarg1, _JsonGenerator jarg1_, long jarg2);
  public final static native long _JsonGenerator_priv_get(long jarg1, _JsonGenerator jarg1_);
  public final static native long new__JsonGenerator();
  public final static native void delete__JsonGenerator(long jarg1);
  public final static native void _JsonGeneratorClass_parent_class_set(long jarg1, _JsonGeneratorClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _JsonGeneratorClass_parent_class_get(long jarg1, _JsonGeneratorClass jarg1_);
  public final static native void _JsonGeneratorClass__json_reserved1_set(long jarg1, _JsonGeneratorClass jarg1_, long jarg2);
  public final static native long _JsonGeneratorClass__json_reserved1_get(long jarg1, _JsonGeneratorClass jarg1_);
  public final static native void _JsonGeneratorClass__json_reserved2_set(long jarg1, _JsonGeneratorClass jarg1_, long jarg2);
  public final static native long _JsonGeneratorClass__json_reserved2_get(long jarg1, _JsonGeneratorClass jarg1_);
  public final static native void _JsonGeneratorClass__json_reserved3_set(long jarg1, _JsonGeneratorClass jarg1_, long jarg2);
  public final static native long _JsonGeneratorClass__json_reserved3_get(long jarg1, _JsonGeneratorClass jarg1_);
  public final static native void _JsonGeneratorClass__json_reserved4_set(long jarg1, _JsonGeneratorClass jarg1_, long jarg2);
  public final static native long _JsonGeneratorClass__json_reserved4_get(long jarg1, _JsonGeneratorClass jarg1_);
  public final static native long new__JsonGeneratorClass();
  public final static native void delete__JsonGeneratorClass(long jarg1);
  public final static native long _frida_json_generator_get_type();
  public final static native long _frida_json_generator_new();
  public final static native void _frida_json_generator_set_pretty(long jarg1, _JsonGenerator jarg1_, int jarg2);
  public final static native int _frida_json_generator_get_pretty(long jarg1, _JsonGenerator jarg1_);
  public final static native void _frida_json_generator_set_indent(long jarg1, _JsonGenerator jarg1_, long jarg2);
  public final static native long _frida_json_generator_get_indent(long jarg1, _JsonGenerator jarg1_);
  public final static native void _frida_json_generator_set_indent_char(long jarg1, _JsonGenerator jarg1_, long jarg2);
  public final static native long _frida_json_generator_get_indent_char(long jarg1, _JsonGenerator jarg1_);
  public final static native void _frida_json_generator_set_root(long jarg1, _JsonGenerator jarg1_, long jarg2);
  public final static native long _frida_json_generator_get_root(long jarg1, _JsonGenerator jarg1_);
  public final static native long _frida_json_generator_to_gstring(long jarg1, _JsonGenerator jarg1_, long jarg2, _GString jarg2_);
  public final static native String _frida_json_generator_to_data(long jarg1, _JsonGenerator jarg1_, long jarg2);
  public final static native int _frida_json_generator_to_file(long jarg1, _JsonGenerator jarg1_, String jarg2, long jarg3);
  public final static native int _frida_json_generator_to_stream(long jarg1, _JsonGenerator jarg1_, long jarg2, _GOutputStream jarg2_, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _JsonParser_parent_instance_set(long jarg1, _JsonParser jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _JsonParser_parent_instance_get(long jarg1, _JsonParser jarg1_);
  public final static native void _JsonParser_priv_set(long jarg1, _JsonParser jarg1_, long jarg2);
  public final static native long _JsonParser_priv_get(long jarg1, _JsonParser jarg1_);
  public final static native long new__JsonParser();
  public final static native void delete__JsonParser(long jarg1);
  public final static native void _JsonParserClass_parent_class_set(long jarg1, _JsonParserClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _JsonParserClass_parent_class_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_parse_start_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_parse_start_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_object_start_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_object_start_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_object_member_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_object_member_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_object_end_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_object_end_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_array_start_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_array_start_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_array_element_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_array_element_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_array_end_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_array_end_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_parse_end_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_parse_end_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass_error_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass_error_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved1_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved1_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved2_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved2_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved3_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved3_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved4_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved4_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved5_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved5_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved6_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved6_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved7_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved7_get(long jarg1, _JsonParserClass jarg1_);
  public final static native void _JsonParserClass__json_reserved8_set(long jarg1, _JsonParserClass jarg1_, long jarg2);
  public final static native long _JsonParserClass__json_reserved8_get(long jarg1, _JsonParserClass jarg1_);
  public final static native long new__JsonParserClass();
  public final static native void delete__JsonParserClass(long jarg1);
  public final static native long _frida_json_parser_error_quark();
  public final static native long _frida_json_parser_get_type();
  public final static native long _frida_json_parser_new();
  public final static native long _frida_json_parser_new_immutable();
  public final static native int _frida_json_parser_load_from_file(long jarg1, _JsonParser jarg1_, String jarg2, long jarg3);
  public final static native int _frida_json_parser_load_from_data(long jarg1, _JsonParser jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native int _frida_json_parser_load_from_stream(long jarg1, _JsonParser jarg1_, long jarg2, _GInputStream jarg2_, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void _frida_json_parser_load_from_stream_async(long jarg1, _JsonParser jarg1_, long jarg2, _GInputStream jarg2_, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native int _frida_json_parser_load_from_stream_finish(long jarg1, _JsonParser jarg1_, long jarg2, long jarg3);
  public final static native long _frida_json_parser_get_root(long jarg1, _JsonParser jarg1_);
  public final static native long _frida_json_parser_steal_root(long jarg1, _JsonParser jarg1_);
  public final static native long _frida_json_parser_get_current_line(long jarg1, _JsonParser jarg1_);
  public final static native long _frida_json_parser_get_current_pos(long jarg1, _JsonParser jarg1_);
  public final static native int _frida_json_parser_has_assignment(long jarg1, _JsonParser jarg1_, long jarg2);
  public final static native long _frida_json_path_get_type();
  public final static native long _frida_json_path_error_quark();
  public final static native long _frida_json_path_new();
  public final static native int _frida_json_path_compile(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_json_path_match(long jarg1, long jarg2);
  public final static native long _frida_json_path_query(String jarg1, long jarg2, long jarg3);
  public final static native void _JsonReader_parent_instance_set(long jarg1, _JsonReader jarg1_, long jarg2, _GObject jarg2_);
  public final static native long _JsonReader_parent_instance_get(long jarg1, _JsonReader jarg1_);
  public final static native void _JsonReader_priv_set(long jarg1, _JsonReader jarg1_, long jarg2);
  public final static native long _JsonReader_priv_get(long jarg1, _JsonReader jarg1_);
  public final static native long new__JsonReader();
  public final static native void delete__JsonReader(long jarg1);
  public final static native void _JsonReaderClass_parent_class_set(long jarg1, _JsonReaderClass jarg1_, long jarg2, _GObjectClass jarg2_);
  public final static native long _JsonReaderClass_parent_class_get(long jarg1, _JsonReaderClass jarg1_);
  public final static native void _JsonReaderClass__json_padding0_set(long jarg1, _JsonReaderClass jarg1_, long jarg2);
  public final static native long _JsonReaderClass__json_padding0_get(long jarg1, _JsonReaderClass jarg1_);
  public final static native void _JsonReaderClass__json_padding1_set(long jarg1, _JsonReaderClass jarg1_, long jarg2);
  public final static native long _JsonReaderClass__json_padding1_get(long jarg1, _JsonReaderClass jarg1_);
  public final static native void _JsonReaderClass__json_padding2_set(long jarg1, _JsonReaderClass jarg1_, long jarg2);
  public final static native long _JsonReaderClass__json_padding2_get(long jarg1, _JsonReaderClass jarg1_);
  public final static native void _JsonReaderClass__json_padding3_set(long jarg1, _JsonReaderClass jarg1_, long jarg2);
  public final static native long _JsonReaderClass__json_padding3_get(long jarg1, _JsonReaderClass jarg1_);
  public final static native void _JsonReaderClass__json_padding4_set(long jarg1, _JsonReaderClass jarg1_, long jarg2);
  public final static native long _JsonReaderClass__json_padding4_get(long jarg1, _JsonReaderClass jarg1_);
  public final static native long new__JsonReaderClass();
  public final static native void delete__JsonReaderClass(long jarg1);
  public final static native long _frida_json_reader_error_quark();
  public final static native long _frida_json_reader_get_type();
  public final static native long _frida_json_reader_new(long jarg1);
  public final static native void _frida_json_reader_set_root(long jarg1, _JsonReader jarg1_, long jarg2);
  public final static native long _frida_json_reader_get_error(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_is_array(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_read_element(long jarg1, _JsonReader jarg1_, long jarg2);
  public final static native void _frida_json_reader_end_element(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_count_elements(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_is_object(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_read_member(long jarg1, _JsonReader jarg1_, String jarg2);
  public final static native void _frida_json_reader_end_member(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_count_members(long jarg1, _JsonReader jarg1_);
  public final static native long _frida_json_reader_list_members(long jarg1, _JsonReader jarg1_);
  public final static native String _frida_json_reader_get_member_name(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_is_value(long jarg1, _JsonReader jarg1_);
  public final static native long _frida_json_reader_get_value(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_get_int_value(long jarg1, _JsonReader jarg1_);
  public final static native double _frida_json_reader_get_double_value(long jarg1, _JsonReader jarg1_);
  public final static native String _frida_json_reader_get_string_value(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_get_boolean_value(long jarg1, _JsonReader jarg1_);
  public final static native int _frida_json_reader_get_null_value(long jarg1, _JsonReader jarg1_);
  public final static native long _frida_json_from_string(String jarg1, long jarg2);
  public final static native String _frida_json_to_string(long jarg1, int jarg2);
  public final static native long _frida_json_parser_error_get_type();
  public final static native long _frida_json_path_error_get_type();
  public final static native long _frida_json_reader_error_get_type();
  public final static native long _frida_json_node_type_get_type();
  public final static native void _JsonSerializableIface_g_iface_set(long jarg1, _JsonSerializableIface jarg1_, long jarg2, _GTypeInterface jarg2_);
  public final static native long _JsonSerializableIface_g_iface_get(long jarg1, _JsonSerializableIface jarg1_);
  public final static native void _JsonSerializableIface_serialize_property_set(long jarg1, _JsonSerializableIface jarg1_, long jarg2);
  public final static native long _JsonSerializableIface_serialize_property_get(long jarg1, _JsonSerializableIface jarg1_);
  public final static native void _JsonSerializableIface_deserialize_property_set(long jarg1, _JsonSerializableIface jarg1_, long jarg2);
  public final static native long _JsonSerializableIface_deserialize_property_get(long jarg1, _JsonSerializableIface jarg1_);
  public final static native void _JsonSerializableIface_find_property_set(long jarg1, _JsonSerializableIface jarg1_, long jarg2);
  public final static native long _JsonSerializableIface_find_property_get(long jarg1, _JsonSerializableIface jarg1_);
  public final static native void _JsonSerializableIface_list_properties_set(long jarg1, _JsonSerializableIface jarg1_, long jarg2);
  public final static native long _JsonSerializableIface_list_properties_get(long jarg1, _JsonSerializableIface jarg1_);
  public final static native void _JsonSerializableIface_set_property_set(long jarg1, _JsonSerializableIface jarg1_, long jarg2);
  public final static native long _JsonSerializableIface_set_property_get(long jarg1, _JsonSerializableIface jarg1_);
  public final static native void _JsonSerializableIface_get_property_set(long jarg1, _JsonSerializableIface jarg1_, long jarg2);
  public final static native long _JsonSerializableIface_get_property_get(long jarg1, _JsonSerializableIface jarg1_);
  public final static native long new__JsonSerializableIface();
  public final static native void delete__JsonSerializableIface(long jarg1);
  public final static native long _frida_json_serializable_get_type();
  public final static native long _frida_json_serializable_serialize_property(long jarg1, String jarg2, long jarg3, _GValue jarg3_, long jarg4, _GParamSpec jarg4_);
  public final static native int _frida_json_serializable_deserialize_property(long jarg1, String jarg2, long jarg3, _GValue jarg3_, long jarg4, _GParamSpec jarg4_, long jarg5);
  public final static native long _frida_json_serializable_find_property(long jarg1, String jarg2);
  public final static native long _frida_json_serializable_list_properties(long jarg1, long jarg2);
  public final static native void _frida_json_serializable_set_property(long jarg1, long jarg2, _GParamSpec jarg2_, long jarg3, _GValue jarg3_);
  public final static native void _frida_json_serializable_get_property(long jarg1, long jarg2, _GParamSpec jarg2_, long jarg3, _GValue jarg3_);
  public final static native long _frida_json_serializable_default_serialize_property(long jarg1, String jarg2, long jarg3, _GValue jarg3_, long jarg4, _GParamSpec jarg4_);
  public final static native int _frida_json_serializable_default_deserialize_property(long jarg1, String jarg2, long jarg3, _GValue jarg3_, long jarg4, _GParamSpec jarg4_, long jarg5);
  public final static native void _frida_json_boxed_register_serialize_func(long jarg1, int jarg2, long jarg3);
  public final static native void _frida_json_boxed_register_deserialize_func(long jarg1, int jarg2, long jarg3);
  public final static native int _frida_json_boxed_can_serialize(long jarg1, long jarg2);
  public final static native int _frida_json_boxed_can_deserialize(long jarg1, int jarg2);
  public final static native long _frida_json_boxed_serialize(long jarg1, long jarg2);
  public final static native long _frida_json_boxed_deserialize(long jarg1, long jarg2);
  public final static native long _frida_json_gobject_serialize(long jarg1, _GObject jarg1_);
  public final static native long _frida_json_gobject_deserialize(long jarg1, long jarg2);
  public final static native long _frida_json_gobject_from_data(long jarg1, String jarg2, int jarg3, long jarg4);
  public final static native String _frida_json_gobject_to_data(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long _frida_json_construct_gobject(long jarg1, String jarg2, long jarg3, long jarg4);
  public final static native String _frida_json_serialize_gobject(long jarg1, _GObject jarg1_, long jarg2);
  public final static native long _frida_json_gvariant_serialize(long jarg1);
  public final static native String _frida_json_gvariant_serialize_data(long jarg1, long jarg2);
  public final static native long _frida_json_gvariant_deserialize(long jarg1, String jarg2, long jarg3);
  public final static native long _frida_json_gvariant_deserialize_data(String jarg1, int jarg2, String jarg3, long jarg4);
  public final static native int FRIDA_SESSION_DETACH_REASON_APPLICATION_REQUESTED_get();
  public final static native void frida_init();
  public final static native void frida_shutdown();
  public final static native void frida_deinit();
  public final static native long frida_get_main_context();
  public final static native void frida_unref(long jarg1);
  public final static native void frida_version(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native String frida_version_string();
  public final static native long frida_device_manager_new();
  public final static native void frida_device_manager_close(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_device_manager_close_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_device_manager_close_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_manager_get_device_by_id(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_device_manager_get_device_by_id_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_get_device_by_id_sync(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_manager_get_device_by_type(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_device_manager_get_device_by_type_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_get_device_by_type_sync(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_manager_get_device(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long frida_device_manager_get_device_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_get_device_sync(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void frida_device_manager_find_device_by_id(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_device_manager_find_device_by_id_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_find_device_by_id_sync(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_manager_find_device_by_type(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_device_manager_find_device_by_type_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_find_device_by_type_sync(long jarg1, int jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_manager_find_device(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long frida_device_manager_find_device_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_find_device_sync(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void frida_device_manager_enumerate_devices(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long frida_device_manager_enumerate_devices_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_enumerate_devices_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_manager_add_remote_device(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long frida_device_manager_add_remote_device_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_manager_add_remote_device_sync(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_device_manager_remove_remote_device(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native void frida_device_manager_remove_remote_device_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_device_manager_remove_remote_device_sync(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int frida_device_list_size(long jarg1);
  public final static native long frida_device_list_get(long jarg1, int jarg2);
  public final static native String frida_device_get_id(long jarg1);
  public final static native String frida_device_get_name(long jarg1);
  public final static native long frida_device_get_icon(long jarg1);
  public final static native int frida_device_get_dtype(long jarg1);
  public final static native long frida_device_get_manager(long jarg1);
  public final static native int frida_device_is_lost(long jarg1);
  public final static native void frida_device_get_frontmost_application(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long frida_device_get_frontmost_application_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_get_frontmost_application_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_enumerate_applications(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long frida_device_enumerate_applications_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_enumerate_applications_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_get_process_by_pid(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long frida_device_get_process_by_pid_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_get_process_by_pid_sync(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_device_get_process_by_name(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_device_get_process_by_name_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_get_process_by_name_sync(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_get_process(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long frida_device_get_process_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_get_process_sync(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void frida_device_find_process_by_pid(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long frida_device_find_process_by_pid_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_find_process_by_pid_sync(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_device_find_process_by_name(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_device_find_process_by_name_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_find_process_by_name_sync(long jarg1, String jarg2, int jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_find_process(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6, long jarg7);
  public final static native long frida_device_find_process_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_find_process_sync(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, _GCancellable jarg5_, long jarg6);
  public final static native void frida_device_enumerate_processes(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long frida_device_enumerate_processes_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_enumerate_processes_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_enable_spawn_gating(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_device_enable_spawn_gating_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_device_enable_spawn_gating_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_disable_spawn_gating(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_device_disable_spawn_gating_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_device_disable_spawn_gating_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_enumerate_pending_spawn(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long frida_device_enumerate_pending_spawn_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_enumerate_pending_spawn_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_enumerate_pending_children(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native long frida_device_enumerate_pending_children_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_enumerate_pending_children_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_device_spawn(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_device_spawn_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_spawn_sync(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_input(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native void frida_device_input_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_device_input_sync(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_device_resume(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native void frida_device_resume_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_device_resume_sync(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_device_kill(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native void frida_device_kill_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_device_kill_sync(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_device_attach(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long frida_device_attach_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_attach_sync(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_device_inject_library_file(long jarg1, long jarg2, String jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long frida_device_inject_library_file_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_inject_library_file_sync(long jarg1, long jarg2, String jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native void frida_device_inject_library_blob(long jarg1, long jarg2, long jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long frida_device_inject_library_blob_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_inject_library_blob_sync(long jarg1, long jarg2, long jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native void frida_device_open_channel(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long frida_device_open_channel_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_device_open_channel_sync(long jarg1, String jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native int frida_application_list_size(long jarg1);
  public final static native long frida_application_list_get(long jarg1, int jarg2);
  public final static native String frida_application_get_identifier(long jarg1);
  public final static native String frida_application_get_name(long jarg1);
  public final static native long frida_application_get_pid(long jarg1);
  public final static native long frida_application_get_small_icon(long jarg1);
  public final static native long frida_application_get_large_icon(long jarg1);
  public final static native int frida_process_list_size(long jarg1);
  public final static native long frida_process_list_get(long jarg1, int jarg2);
  public final static native long frida_process_get_pid(long jarg1);
  public final static native String frida_process_get_name(long jarg1);
  public final static native long frida_process_get_small_icon(long jarg1);
  public final static native long frida_process_get_large_icon(long jarg1);
  public final static native long frida_spawn_options_new();
  public final static native long frida_spawn_options_get_argv(long jarg1, long jarg2);
  public final static native long frida_spawn_options_get_envp(long jarg1, long jarg2);
  public final static native long frida_spawn_options_get_env(long jarg1, long jarg2);
  public final static native String frida_spawn_options_get_cwd(long jarg1);
  public final static native int frida_spawn_options_get_stdio(long jarg1);
  public final static native long frida_spawn_options_get_aux(long jarg1);
  public final static native void frida_spawn_options_set_argv(long jarg1, long jarg2, int jarg3);
  public final static native void frida_spawn_options_set_envp(long jarg1, long jarg2, int jarg3);
  public final static native void frida_spawn_options_set_env(long jarg1, long jarg2, int jarg3);
  public final static native void frida_spawn_options_set_cwd(long jarg1, String jarg2);
  public final static native void frida_spawn_options_set_stdio(long jarg1, int jarg2);
  public final static native int frida_spawn_list_size(long jarg1);
  public final static native long frida_spawn_list_get(long jarg1, int jarg2);
  public final static native long frida_spawn_get_pid(long jarg1);
  public final static native String frida_spawn_get_identifier(long jarg1);
  public final static native int frida_child_list_size(long jarg1);
  public final static native long frida_child_list_get(long jarg1, int jarg2);
  public final static native long frida_child_get_pid(long jarg1);
  public final static native long frida_child_get_parent_pid(long jarg1);
  public final static native int frida_child_get_origin(long jarg1);
  public final static native String frida_child_get_identifier(long jarg1);
  public final static native String frida_child_get_path(long jarg1);
  public final static native long frida_child_get_argv(long jarg1, long jarg2);
  public final static native long frida_child_get_envp(long jarg1, long jarg2);
  public final static native long frida_crash_get_pid(long jarg1);
  public final static native String frida_crash_get_process_name(long jarg1);
  public final static native String frida_crash_get_summary(long jarg1);
  public final static native String frida_crash_get_report(long jarg1);
  public final static native long frida_crash_load_parameters(long jarg1);
  public final static native int frida_icon_get_width(long jarg1);
  public final static native int frida_icon_get_height(long jarg1);
  public final static native int frida_icon_get_rowstride(long jarg1);
  public final static native long frida_icon_get_pixels(long jarg1);
  public final static native long frida_session_get_pid(long jarg1);
  public final static native long frida_session_get_device(long jarg1);
  public final static native int frida_session_is_detached(long jarg1);
  public final static native void frida_session_detach(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_session_detach_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_session_detach_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_session_enable_child_gating(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_session_enable_child_gating_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_session_enable_child_gating_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_session_disable_child_gating(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_session_disable_child_gating_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_session_disable_child_gating_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_session_create_script(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_session_create_script_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_session_create_script_sync(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_session_create_script_from_bytes(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_session_create_script_from_bytes_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_session_create_script_from_bytes_sync(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_session_compile_script(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native long frida_session_compile_script_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_session_compile_script_sync(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native void frida_session_enable_debugger(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native void frida_session_enable_debugger_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_session_enable_debugger_sync(long jarg1, int jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_session_disable_debugger(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_session_disable_debugger_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_session_disable_debugger_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_session_enable_jit(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_session_enable_jit_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_session_enable_jit_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native long frida_script_get_id(long jarg1);
  public final static native int frida_script_is_destroyed(long jarg1);
  public final static native void frida_script_load(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_script_load_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_script_load_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_script_unload(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_script_unload_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_script_unload_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_script_eternalize(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_script_eternalize_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_script_eternalize_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_script_post(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native void frida_script_post_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_script_post_sync(long jarg1, String jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native long frida_script_options_new();
  public final static native String frida_script_options_get_name(long jarg1);
  public final static native int frida_script_options_get_runtime(long jarg1);
  public final static native void frida_script_options_set_name(long jarg1, String jarg2);
  public final static native void frida_script_options_set_runtime(long jarg1, int jarg2);
  public final static native long frida_injector_new();
  public final static native long frida_injector_new_inprocess();
  public final static native void frida_injector_close(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_injector_close_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_injector_close_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_injector_inject_library_file(long jarg1, long jarg2, String jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long frida_injector_inject_library_file_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_injector_inject_library_file_sync(long jarg1, long jarg2, String jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native void frida_injector_inject_library_blob(long jarg1, long jarg2, long jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7, long jarg8);
  public final static native long frida_injector_inject_library_blob_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_injector_inject_library_blob_sync(long jarg1, long jarg2, long jarg3, String jarg4, String jarg5, long jarg6, _GCancellable jarg6_, long jarg7);
  public final static native void frida_injector_demonitor_and_clone_state(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4, long jarg5);
  public final static native long frida_injector_demonitor_and_clone_state_finish(long jarg1, long jarg2, long jarg3);
  public final static native long frida_injector_demonitor_and_clone_state_sync(long jarg1, long jarg2, long jarg3, _GCancellable jarg3_, long jarg4);
  public final static native void frida_injector_recreate_thread(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5, long jarg6);
  public final static native void frida_injector_recreate_thread_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_injector_recreate_thread_sync(long jarg1, long jarg2, long jarg3, long jarg4, _GCancellable jarg4_, long jarg5);
  public final static native long frida_file_monitor_new(String jarg1);
  public final static native String frida_file_monitor_get_path(long jarg1);
  public final static native void frida_file_monitor_enable(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_file_monitor_enable_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_file_monitor_enable_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native void frida_file_monitor_disable(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3, long jarg4);
  public final static native void frida_file_monitor_disable_finish(long jarg1, long jarg2, long jarg3);
  public final static native void frida_file_monitor_disable_sync(long jarg1, long jarg2, _GCancellable jarg2_, long jarg3);
  public final static native long frida_error_quark();
  public final static native long frida_runtime_get_type();
  public final static native long frida_device_type_get_type();
  public final static native long frida_child_origin_get_type();
  public final static native long frida_script_runtime_get_type();
  public final static native long frida_session_detach_reason_get_type();
  public final static native long frida_stdio_get_type();
  public final static native long frida_unload_policy_get_type();
  public final static native long frida_device_manager_get_type();
  public final static native long frida_device_list_get_type();
  public final static native long frida_device_get_type();
  public final static native long frida_application_list_get_type();
  public final static native long frida_application_get_type();
  public final static native long frida_process_list_get_type();
  public final static native long frida_process_get_type();
  public final static native long frida_spawn_options_get_type();
  public final static native long frida_spawn_list_get_type();
  public final static native long frida_spawn_get_type();
  public final static native long frida_child_list_get_type();
  public final static native long frida_child_get_type();
  public final static native long frida_crash_get_type();
  public final static native long frida_icon_get_type();
  public final static native long frida_session_get_type();
  public final static native long frida_script_get_type();
  public final static native long frida_script_options_get_type();
  public final static native long frida_injector_get_type();
  public final static native long frida_file_monitor_get_type();
}
