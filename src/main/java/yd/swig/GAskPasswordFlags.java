/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yd.swig;

public final class GAskPasswordFlags {
  public final static GAskPasswordFlags G_ASK_PASSWORD_NEED_PASSWORD = new GAskPasswordFlags("G_ASK_PASSWORD_NEED_PASSWORD", fridacoreJNI.G_ASK_PASSWORD_NEED_PASSWORD_get());
  public final static GAskPasswordFlags G_ASK_PASSWORD_NEED_USERNAME = new GAskPasswordFlags("G_ASK_PASSWORD_NEED_USERNAME", fridacoreJNI.G_ASK_PASSWORD_NEED_USERNAME_get());
  public final static GAskPasswordFlags G_ASK_PASSWORD_NEED_DOMAIN = new GAskPasswordFlags("G_ASK_PASSWORD_NEED_DOMAIN", fridacoreJNI.G_ASK_PASSWORD_NEED_DOMAIN_get());
  public final static GAskPasswordFlags G_ASK_PASSWORD_SAVING_SUPPORTED = new GAskPasswordFlags("G_ASK_PASSWORD_SAVING_SUPPORTED", fridacoreJNI.G_ASK_PASSWORD_SAVING_SUPPORTED_get());
  public final static GAskPasswordFlags G_ASK_PASSWORD_ANONYMOUS_SUPPORTED = new GAskPasswordFlags("G_ASK_PASSWORD_ANONYMOUS_SUPPORTED", fridacoreJNI.G_ASK_PASSWORD_ANONYMOUS_SUPPORTED_get());
  public final static GAskPasswordFlags G_ASK_PASSWORD_TCRYPT = new GAskPasswordFlags("G_ASK_PASSWORD_TCRYPT", fridacoreJNI.G_ASK_PASSWORD_TCRYPT_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GAskPasswordFlags swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GAskPasswordFlags.class + " with value " + swigValue);
  }

  private GAskPasswordFlags(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GAskPasswordFlags(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private GAskPasswordFlags(String swigName, GAskPasswordFlags swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static GAskPasswordFlags[] swigValues = { G_ASK_PASSWORD_NEED_PASSWORD, G_ASK_PASSWORD_NEED_USERNAME, G_ASK_PASSWORD_NEED_DOMAIN, G_ASK_PASSWORD_SAVING_SUPPORTED, G_ASK_PASSWORD_ANONYMOUS_SUPPORTED, G_ASK_PASSWORD_TCRYPT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

