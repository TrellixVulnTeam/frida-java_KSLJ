/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yd.swig;

public class _GStaticRWLock {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected _GStaticRWLock(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(_GStaticRWLock obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        fridacoreJNI.delete__GStaticRWLock(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setMutex(GStaticMutex value) {
    fridacoreJNI._GStaticRWLock_mutex_set(swigCPtr, this, GStaticMutex.getCPtr(value), value);
  }

  public GStaticMutex getMutex() {
    long cPtr = fridacoreJNI._GStaticRWLock_mutex_get(swigCPtr, this);
    return (cPtr == 0) ? null : new GStaticMutex(cPtr, false);
  }

  public void setRead_cond(_GCond value) {
    fridacoreJNI._GStaticRWLock_read_cond_set(swigCPtr, this, _GCond.getCPtr(value), value);
  }

  public _GCond getRead_cond() {
    long cPtr = fridacoreJNI._GStaticRWLock_read_cond_get(swigCPtr, this);
    return (cPtr == 0) ? null : new _GCond(cPtr, false);
  }

  public void setWrite_cond(_GCond value) {
    fridacoreJNI._GStaticRWLock_write_cond_set(swigCPtr, this, _GCond.getCPtr(value), value);
  }

  public _GCond getWrite_cond() {
    long cPtr = fridacoreJNI._GStaticRWLock_write_cond_get(swigCPtr, this);
    return (cPtr == 0) ? null : new _GCond(cPtr, false);
  }

  public void setRead_counter(long value) {
    fridacoreJNI._GStaticRWLock_read_counter_set(swigCPtr, this, value);
  }

  public long getRead_counter() {
    return fridacoreJNI._GStaticRWLock_read_counter_get(swigCPtr, this);
  }

  public void setHave_writer(int value) {
    fridacoreJNI._GStaticRWLock_have_writer_set(swigCPtr, this, value);
  }

  public int getHave_writer() {
    return fridacoreJNI._GStaticRWLock_have_writer_get(swigCPtr, this);
  }

  public void setWant_to_read(long value) {
    fridacoreJNI._GStaticRWLock_want_to_read_set(swigCPtr, this, value);
  }

  public long getWant_to_read() {
    return fridacoreJNI._GStaticRWLock_want_to_read_get(swigCPtr, this);
  }

  public void setWant_to_write(long value) {
    fridacoreJNI._GStaticRWLock_want_to_write_set(swigCPtr, this, value);
  }

  public long getWant_to_write() {
    return fridacoreJNI._GStaticRWLock_want_to_write_get(swigCPtr, this);
  }

  public _GStaticRWLock() {
    this(fridacoreJNI.new__GStaticRWLock(), true);
  }

}
