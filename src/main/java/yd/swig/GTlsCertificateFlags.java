/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yd.swig;

public final class GTlsCertificateFlags {
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_UNKNOWN_CA = new GTlsCertificateFlags("G_TLS_CERTIFICATE_UNKNOWN_CA", fridacoreJNI.G_TLS_CERTIFICATE_UNKNOWN_CA_get());
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_BAD_IDENTITY = new GTlsCertificateFlags("G_TLS_CERTIFICATE_BAD_IDENTITY", fridacoreJNI.G_TLS_CERTIFICATE_BAD_IDENTITY_get());
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_NOT_ACTIVATED = new GTlsCertificateFlags("G_TLS_CERTIFICATE_NOT_ACTIVATED", fridacoreJNI.G_TLS_CERTIFICATE_NOT_ACTIVATED_get());
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_EXPIRED = new GTlsCertificateFlags("G_TLS_CERTIFICATE_EXPIRED", fridacoreJNI.G_TLS_CERTIFICATE_EXPIRED_get());
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_REVOKED = new GTlsCertificateFlags("G_TLS_CERTIFICATE_REVOKED", fridacoreJNI.G_TLS_CERTIFICATE_REVOKED_get());
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_INSECURE = new GTlsCertificateFlags("G_TLS_CERTIFICATE_INSECURE", fridacoreJNI.G_TLS_CERTIFICATE_INSECURE_get());
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_GENERIC_ERROR = new GTlsCertificateFlags("G_TLS_CERTIFICATE_GENERIC_ERROR", fridacoreJNI.G_TLS_CERTIFICATE_GENERIC_ERROR_get());
  public final static GTlsCertificateFlags G_TLS_CERTIFICATE_VALIDATE_ALL = new GTlsCertificateFlags("G_TLS_CERTIFICATE_VALIDATE_ALL", fridacoreJNI.G_TLS_CERTIFICATE_VALIDATE_ALL_get());

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static GTlsCertificateFlags swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + GTlsCertificateFlags.class + " with value " + swigValue);
  }

  private GTlsCertificateFlags(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private GTlsCertificateFlags(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private GTlsCertificateFlags(String swigName, GTlsCertificateFlags swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static GTlsCertificateFlags[] swigValues = { G_TLS_CERTIFICATE_UNKNOWN_CA, G_TLS_CERTIFICATE_BAD_IDENTITY, G_TLS_CERTIFICATE_NOT_ACTIVATED, G_TLS_CERTIFICATE_EXPIRED, G_TLS_CERTIFICATE_REVOKED, G_TLS_CERTIFICATE_INSECURE, G_TLS_CERTIFICATE_GENERIC_ERROR, G_TLS_CERTIFICATE_VALIDATE_ALL };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

