/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yd.swig;

public final class FridaError {
  public final static FridaError FRIDA_ERROR_SERVER_NOT_RUNNING = new FridaError("FRIDA_ERROR_SERVER_NOT_RUNNING");
  public final static FridaError FRIDA_ERROR_EXECUTABLE_NOT_FOUND = new FridaError("FRIDA_ERROR_EXECUTABLE_NOT_FOUND");
  public final static FridaError FRIDA_ERROR_EXECUTABLE_NOT_SUPPORTED = new FridaError("FRIDA_ERROR_EXECUTABLE_NOT_SUPPORTED");
  public final static FridaError FRIDA_ERROR_PROCESS_NOT_FOUND = new FridaError("FRIDA_ERROR_PROCESS_NOT_FOUND");
  public final static FridaError FRIDA_ERROR_PROCESS_NOT_RESPONDING = new FridaError("FRIDA_ERROR_PROCESS_NOT_RESPONDING");
  public final static FridaError FRIDA_ERROR_INVALID_ARGUMENT = new FridaError("FRIDA_ERROR_INVALID_ARGUMENT");
  public final static FridaError FRIDA_ERROR_INVALID_OPERATION = new FridaError("FRIDA_ERROR_INVALID_OPERATION");
  public final static FridaError FRIDA_ERROR_PERMISSION_DENIED = new FridaError("FRIDA_ERROR_PERMISSION_DENIED");
  public final static FridaError FRIDA_ERROR_ADDRESS_IN_USE = new FridaError("FRIDA_ERROR_ADDRESS_IN_USE");
  public final static FridaError FRIDA_ERROR_TIMED_OUT = new FridaError("FRIDA_ERROR_TIMED_OUT");
  public final static FridaError FRIDA_ERROR_NOT_SUPPORTED = new FridaError("FRIDA_ERROR_NOT_SUPPORTED");
  public final static FridaError FRIDA_ERROR_PROTOCOL = new FridaError("FRIDA_ERROR_PROTOCOL");
  public final static FridaError FRIDA_ERROR_TRANSPORT = new FridaError("FRIDA_ERROR_TRANSPORT");

  public final int swigValue() {
    return swigValue;
  }

  public String toString() {
    return swigName;
  }

  public static FridaError swigToEnum(int swigValue) {
    if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
      return swigValues[swigValue];
    for (int i = 0; i < swigValues.length; i++)
      if (swigValues[i].swigValue == swigValue)
        return swigValues[i];
    throw new IllegalArgumentException("No enum " + FridaError.class + " with value " + swigValue);
  }

  private FridaError(String swigName) {
    this.swigName = swigName;
    this.swigValue = swigNext++;
  }

  private FridaError(String swigName, int swigValue) {
    this.swigName = swigName;
    this.swigValue = swigValue;
    swigNext = swigValue+1;
  }

  private FridaError(String swigName, FridaError swigEnum) {
    this.swigName = swigName;
    this.swigValue = swigEnum.swigValue;
    swigNext = this.swigValue+1;
  }

  private static FridaError[] swigValues = { FRIDA_ERROR_SERVER_NOT_RUNNING, FRIDA_ERROR_EXECUTABLE_NOT_FOUND, FRIDA_ERROR_EXECUTABLE_NOT_SUPPORTED, FRIDA_ERROR_PROCESS_NOT_FOUND, FRIDA_ERROR_PROCESS_NOT_RESPONDING, FRIDA_ERROR_INVALID_ARGUMENT, FRIDA_ERROR_INVALID_OPERATION, FRIDA_ERROR_PERMISSION_DENIED, FRIDA_ERROR_ADDRESS_IN_USE, FRIDA_ERROR_TIMED_OUT, FRIDA_ERROR_NOT_SUPPORTED, FRIDA_ERROR_PROTOCOL, FRIDA_ERROR_TRANSPORT };
  private static int swigNext = 0;
  private final int swigValue;
  private final String swigName;
}

