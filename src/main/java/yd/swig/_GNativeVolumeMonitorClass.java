/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package yd.swig;

public class _GNativeVolumeMonitorClass {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected _GNativeVolumeMonitorClass(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(_GNativeVolumeMonitorClass obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        fridacoreJNI.delete__GNativeVolumeMonitorClass(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setParent_class(_GVolumeMonitorClass value) {
    fridacoreJNI._GNativeVolumeMonitorClass_parent_class_set(swigCPtr, this, _GVolumeMonitorClass.getCPtr(value), value);
  }

  public _GVolumeMonitorClass getParent_class() {
    long cPtr = fridacoreJNI._GNativeVolumeMonitorClass_parent_class_get(swigCPtr, this);
    return (cPtr == 0) ? null : new _GVolumeMonitorClass(cPtr, false);
  }

  public void setGet_mount_for_mount_path(SWIGTYPE_p_f_p_q_const__char_p__GCancellable__p__GMount value) {
    fridacoreJNI._GNativeVolumeMonitorClass_get_mount_for_mount_path_set(swigCPtr, this, SWIGTYPE_p_f_p_q_const__char_p__GCancellable__p__GMount.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_q_const__char_p__GCancellable__p__GMount getGet_mount_for_mount_path() {
    long cPtr = fridacoreJNI._GNativeVolumeMonitorClass_get_mount_for_mount_path_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_q_const__char_p__GCancellable__p__GMount(cPtr, false);
  }

  public _GNativeVolumeMonitorClass() {
    this(fridacoreJNI.new__GNativeVolumeMonitorClass(), true);
  }

}
